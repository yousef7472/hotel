{"version":3,"file":"static/js/483.8ecc1eba.chunk.js","mappings":"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","sources":["webpack://hotel/./src/common/HeadTitle/HeadTitle.module.css?55ef","common/HeadTitle/HeadTitle.js","components/Login/Register.js","context/AuthContext.js","firebase.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"HeadTitle_heading__7lGKQ\",\"container\":\"HeadTitle_container__eEMN1\",\"background\":\"HeadTitle_background__bWeZn\"};","import { BrowserRouter, Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport classes from \"./HeadTitle.module.css\"\r\nimport { useEffect, useState } from \"react\";\r\nconst HeadTitle = () => {\r\n    const location = useLocation()\r\n    const [imageApi, setImageApi] = useState()\r\n    const [error, setError] = useState()\r\n    // const history = useNavigate();\r\n\r\n    // const handleClick = () => {\r\n    //   history('/');\r\n    // };\r\n    const navigate = useNavigate();\r\n\tconst goHome = () => {\r\n\t\tnavigate(-1);\r\n\t}\r\n  const apiUrl = 'https://api.unsplash.com/search/photos';\r\n  const apiKey = 'OUaKiH8GygKA0TiBxNxE8Om2QxIL1YZZuiTJKn8nCXo';\r\nuseEffect(() => {\r\n  const fetchbg = async () => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}?query=sea&page=70&per_page=1&client_id=${apiKey}`);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch data');\r\n      }\r\n      const jsonData = await response.json();\r\n\r\n      setImageApi(jsonData.results);\r\n\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n  console.log(fetchbg());\r\n}, [])\r\n    \r\n    return ( \r\n       <>\r\n        <section className={classes.heading}>\r\n        {imageApi?.map((item, index) => {\r\n                    return (\r\n                              <div className={classes.background} key={index}>\r\n                                    {<img key={item.id} src={item.urls.regular} alt={item.alt_description} />}\r\n                              </div>\r\n                            )\r\n          })}\r\n            <div className={classes.container}>\r\n                <h1>{location.pathname.split(\"/\")[1]}</h1>\r\n                <button type=\"button\" aria-label=\"back to home\">\r\n                    <Link to='/'>Home  / </Link>\r\n                    <span>{location.pathname.split(\"/\")[1]}</span>\r\n                </button>\r\n            </div>\r\n        </section>\r\n       </> \r\n     );\r\n}\r\n \r\nexport default HeadTitle;","import { useEffect, useState, useRef } from \"react\"\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport \"./Design.css\"\r\nimport HeadTitle from \"../../common/HeadTitle/HeadTitle\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { Stack, TextField, Button } from \"@mui/material\"\r\nimport { MuiTelInput } from 'mui-tel-input'\r\nimport Swal from 'sweetalert2'\r\nimport { AuthProvider, useAuth } from \"../../context/AuthContext\"\r\n\r\nconst Register = () => {\r\n\r\n  const [num, setNum] = useState('+20')\r\n  const [passwordsMatch, setPasswordsMatch] = useState(true);\r\n  const [formErrors, setFormErrors] = useState(true);\r\n  const { signup } = useAuth()\r\n  const navigate = useNavigate()\r\n\r\n  const form = useForm({\r\n    defaultValues: {\r\n      Username: \"\",\r\n      Email: \"\",\r\n      Password: \"\",\r\n      ConfirmPassword: \"\"\r\n    }\r\n  });\r\n  \r\n  const {register, control, handleSubmit, formState, setValue, reset} = form;\r\n  const {errors} = formState;\r\n  \r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault()\r\n    const email = e.target.Email.value;\r\n    const password = e.target.Password.value;\r\n    if (data.Password !== data.ConfirmPassword) {\r\n      setPasswordsMatch(false)\r\n      return;\r\n    }\r\n    else{\r\n      setPasswordsMatch(true);\r\n      signup(email, password)\r\n      console.log(email, password);\r\n      navigate('/sign');\r\n      Swal.fire(\r\n        'Thanks For Registering!',\r\n       'Your registration has been successful.',\r\n        'success'\r\n      )      \r\n      return reset()\r\n    }\r\n};\r\n\r\n  const handleChange = (newValue) => {\r\n    setNum(newValue)\r\n  }\r\n\r\nuseEffect(() =>{\r\n  if (errors.Username || errors.Email || errors.Password) {\r\n    setFormErrors(true)\r\n  }\r\n  else{\r\n    setFormErrors(false)\r\n  }\r\n})\r\n  return (\r\n    <>\r\n  <AuthProvider>\r\n      <HeadTitle />\r\n      <section className='forms top'>\r\n        <div className='container'>\r\n          <div className='sign-box'>\r\n            <p>Don't have an account? Create your account, it takes less than a minute.</p>\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n            <Stack spacing={2} width={400}>\r\n              <TextField \r\n                type=\"text\" \r\n                label=\"Username\" \r\n                onChange={(e) => setValue(\"Username\", e.target.value)}\r\n                id=\"username\" {...register(\"Username\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Username is required\"\r\n                }\r\n                })} placeholder=\"Type user name\"/>\r\n              <p className=\"error\">{errors.Username?.message}</p>\r\n\r\n              <TextField\r\n                type=\"email\"\r\n                label=\"Email\"\r\n                id=\"email\"\r\n                {...register(\"Email\", {\r\n                  required: \"Email is required\",\r\n                  pattern: {\r\n                    value: /[a-z0-9]+@[a-z]+\\.[a-z]{2,3}/,\r\n                    message: \"Invalid email format\",\r\n                  },\r\n                  validate: {\r\n                    notAdmin: (fieldValue) => {\r\n                      return (\r\n                        fieldValue !== \"admin@example.com\" ||\r\n                        \"Enter a different email adress\"\r\n                      )\r\n                    },\r\n                    notBlackListed: (fieldValue) => {\r\n                      return (!fieldValue.endsWith('baddomain.com') || \"This domain is not supported\")\r\n                    }\r\n                  }\r\n                })}\r\n                placeholder=\"Type your email\"\r\n              />\r\n                <p className=\"error\">{errors.Email?.message}</p>\r\n\r\n                <MuiTelInput value={num} onChange={handleChange} />\r\n                 \r\n                 <TextField type=\"password\"\r\n                 label=\"Password\"\r\n                 id=\"Password\"\r\n                 onChange={(e) => setValue(\"Password\", e.target.value)}\r\n                  {...register(\"Password\", {\r\n                  required: \"Password is required\",\r\n                   pattern: { \r\n                    value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/, \r\n                    message: \"Password must contain at least 8 characters, including one uppercase letter, one lowercase letter, and one number\", \r\n                    }, \r\n                  })} \r\n                    />\r\n              <p className=\"error\">{errors.Password?.message}</p>\r\n              \r\n                <TextField type=\"password\"\r\n                    label=\"Confirm Password\"\r\n                    onChange={(e) => setValue(\"ConfirmPassword\", e.target.value)}\r\n                    id=\"ConfirmPassword\"\r\n                    {...register(\"ConfirmPassword\", {\r\n                      required: \"Confirm password is required\",\r\n                    })}\r\n                />\r\n              <p className=\"error\">{errors.ConfirmPassword?.message}</p>\r\n              {!passwordsMatch ? <p className=\"error\">Passwords do not match.</p> : ''}\r\n\r\n                <Button type=\"submit\" disabled={formErrors} variant=\"contained\" color=\"success\">\r\n                    Submit\r\n                </Button>\r\n                \r\n              </Stack>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      </AuthProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register","import { useContext, useState, useEffect, createContext } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n// import { DB } from \"../firebase\"\r\n\r\nimport {createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, sendPasswordResetEmail} from \"firebase/auth\"\r\n// import {ref, push, set, onValue} from \"firebase/database\"\r\nconst AuthContext = createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return createUserWithEmailAndPassword(auth, email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return signInWithEmailAndPassword(auth, email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return signOut(auth)\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return sendPasswordResetEmail(auth,email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import { initializeApp } from \"firebase/app\";\r\n// import {firebase} from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\n// import { getDatabase } from \"firebase/database\";\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDK7dLT2jqVVjquVaFtsv80tuofPpTVwWw\",\r\n  authDomain: \"auth-development-85879.firebaseapp.com\",\r\n  projectId: \"auth-development-85879\",\r\n  storageBucket: \"auth-development-85879.appspot.com\",\r\n  messagingSenderId: \"649818716749\",\r\n  appId: \"1:649818716749:web:667419298f5065669d3a04\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n// const projectAuth = firebase.auth();\r\nexport const auth = getAuth(app)\r\n// export const DB = getDatabase(app)\r\n\r\n// export { projectAuth };\r\nexport default app"],"names":["location","useLocation","_useState","useState","_useState2","_slicedToArray","imageApi","setImageApi","_useState3","_useState4","setError","useNavigate","useEffect","fetchbg","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","jsonData","wrap","_context","prev","next","fetch","concat","sent","ok","Error","json","results","t0","stop","apply","arguments","console","log","_jsx","_Fragment","children","_jsxs","className","classes","map","item","index","src","urls","regular","alt","alt_description","id","pathname","split","type","Link","to","_errors$Username","_errors$Email","_errors$Password","_errors$ConfirmPasswo","num","setNum","passwordsMatch","setPasswordsMatch","_useState5","_useState6","formErrors","setFormErrors","signup","useAuth","navigate","form","useForm","defaultValues","Username","Email","Password","ConfirmPassword","register","handleSubmit","control","formState","setValue","reset","errors","AuthProvider","HeadTitle","onSubmit","data","e","preventDefault","email","target","value","password","Swal","noValidate","Stack","spacing","width","TextField","_objectSpread","label","onChange","required","message","placeholder","pattern","validate","notAdmin","fieldValue","notBlackListed","endsWith","MuiTelInput","newValue","Button","disabled","variant","color","AuthContext","createContext","useContext","currentUser","setCurrentUser","loading","setLoading","auth","onAuthStateChanged","user","login","signInWithEmailAndPassword","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth"],"sourceRoot":""}