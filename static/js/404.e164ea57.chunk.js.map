{"version":3,"file":"static/js/404.e164ea57.chunk.js","mappings":"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","sources":["components/Login/UpdateProfile.js","context/AuthContext.js","firebase.js"],"sourcesContent":["import { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../../context/AuthContext\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport \"./Design.css\"\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useNavigate()\r\n  \r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history(\"/\")\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n          {error && <p >{error}</p>}\r\n          <form onSubmit={handleSubmit}>\r\n            <div id=\"email\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                defaultValue={currentUser.email}\r\n              />\r\n            </div>\r\n            <div id=\"password\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </div>\r\n            <div id=\"password-confirm\">\r\n              <label>Password Confirmation</label>\r\n              <input\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </div>\r\n            <button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Update\r\n            </button>\r\n          </form>\r\n      </section>\r\n      <div>\r\n        <Link to=\"/\">Cancel</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}","import { useContext, useState, useEffect, createContext } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n// import { DB } from \"../firebase\"\r\n\r\nimport {createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, sendPasswordResetEmail} from \"firebase/auth\"\r\n// import {ref, push, set, onValue} from \"firebase/database\"\r\nconst AuthContext = createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return createUserWithEmailAndPassword(auth, email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return signInWithEmailAndPassword(auth, email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return signOut(auth)\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return sendPasswordResetEmail(auth,email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import { initializeApp } from \"firebase/app\";\r\n// import {firebase} from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\n// import { getDatabase } from \"firebase/database\";\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDK7dLT2jqVVjquVaFtsv80tuofPpTVwWw\",\r\n  authDomain: \"auth-development-85879.firebaseapp.com\",\r\n  projectId: \"auth-development-85879\",\r\n  storageBucket: \"auth-development-85879.appspot.com\",\r\n  messagingSenderId: \"649818716749\",\r\n  appId: \"1:649818716749:web:667419298f5065669d3a04\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n// const projectAuth = firebase.auth();\r\nexport const auth = getAuth(app)\r\n// export const DB = getDatabase(app)\r\n\r\n// export { projectAuth };\r\nexport default app"],"names":["UpdateProfile","emailRef","useRef","passwordRef","passwordConfirmRef","_useAuth","useAuth","currentUser","updatePassword","updateEmail","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","loading","setLoading","history","useNavigate","_jsxs","_Fragment","children","_jsx","className","onSubmit","e","preventDefault","current","value","promises","email","push","Promise","all","then","catch","finally","id","type","ref","required","defaultValue","placeholder","disabled","Link","to","AuthContext","createContext","useContext","AuthProvider","_ref","setCurrentUser","useEffect","auth","onAuthStateChanged","user","login","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","Provider","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth"],"sourceRoot":""}