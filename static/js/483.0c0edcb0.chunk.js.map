{"version":3,"file":"static/js/483.0c0edcb0.chunk.js","mappings":"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","sources":["webpack://hotel/./src/common/HeadTitle/HeadTitle.module.css?55ef","common/HeadTitle/HeadTitle.js","components/Login/Register.js","components/ReusableParts/ApiFeching.js","context/AuthContext.js","firebase.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"HeadTitle_heading__7lGKQ\",\"container\":\"HeadTitle_container__eEMN1\",\"background\":\"HeadTitle_background__bWeZn\"};","import { Link, useLocation } from \"react-router-dom\";\r\nimport classes from \"./HeadTitle.module.css\"\r\nimport useUnsplashImages from \"../../components/ReusableParts/ApiFeching\";\r\nconst HeadTitle = () => {\r\n    const location = useLocation()\r\n    const { imagesApi, error } = useUnsplashImages('sea', 1, 45, \"landscape\");\r\n \r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n    return ( \r\n       <>\r\n        <section className={classes.heading}>\r\n        {imagesApi?.map((item, index) => {\r\n                    return (\r\n                              <div className={classes.background} key={index}>\r\n                                    {<img key={item.id} src={item.urls.regular} alt={item.alt_description} />}\r\n                              </div>\r\n                            )\r\n          })}\r\n            <div className={classes.container}>\r\n                <h1>{location.pathname.split(\"/\")[1]}</h1>\r\n                <button type=\"button\" aria-label=\"back to home\">\r\n                    <Link to='/'>Home  / </Link>\r\n                    <span>{location.pathname.split(\"/\")[1]}</span>\r\n                </button>\r\n            </div>\r\n        </section>\r\n       </> \r\n     );\r\n}\r\nexport default HeadTitle;","import { useEffect, useState } from \"react\"\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport \"./Design.css\"\r\nimport HeadTitle from \"../../common/HeadTitle/HeadTitle\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { Stack, TextField, Button } from \"@mui/material\"\r\nimport { MuiTelInput } from 'mui-tel-input'\r\nimport Swal from 'sweetalert2'\r\nimport { AuthProvider, useAuth } from \"../../context/AuthContext\"\r\n\r\nconst Register = () => {\r\n\r\n  const [num, setNum] = useState('+20')\r\n  const [passwordsMatch, setPasswordsMatch] = useState(true);\r\n  const [formErrors, setFormErrors] = useState(true);\r\n  const { signup } = useAuth()\r\n  const navigate = useNavigate()\r\n\r\n  const form = useForm({\r\n    defaultValues: {\r\n      Username: \"\",\r\n      Email: \"\",\r\n      Password: \"\",\r\n      ConfirmPassword: \"\"\r\n    }\r\n  });\r\n  \r\n  const {register, handleSubmit, formState, setValue, reset} = form;\r\n  const {errors} = formState;\r\n  \r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault()\r\n    const email = e.target.Email.value;\r\n    const password = e.target.Password.value;\r\n    if (data.Password !== data.ConfirmPassword) {\r\n      setPasswordsMatch(false)\r\n      return;\r\n    }\r\n    else{\r\n      setPasswordsMatch(true);\r\n      signup(email, password)\r\n      console.log(email, password);\r\n      navigate('/sign');\r\n      Swal.fire(\r\n        'Thanks For Registering!',\r\n       'Your registration has been successful.',\r\n        'success'\r\n      )      \r\n      return reset()\r\n    }\r\n};\r\n\r\n  const handleChange = (newValue) => {\r\n    setNum(newValue)\r\n  }\r\n\r\nuseEffect(() =>{\r\n  if (errors.Username || errors.Email || errors.Password) {\r\n    setFormErrors(true)\r\n  }\r\n  else{\r\n    setFormErrors(false)\r\n  }\r\n})\r\n  return (\r\n    <>\r\n  <AuthProvider>\r\n      <HeadTitle />\r\n      <section className='forms top'>\r\n        <div className='container'>\r\n          <div className='sign-box'>\r\n            <p>Don't have an account? Create your account, it takes less than a minute.</p>\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n            <Stack spacing={2} width={400}>\r\n              <TextField \r\n                type=\"text\" \r\n                label=\"Username\" \r\n                onChange={(e) => setValue(\"Username\", e.target.value)}\r\n                id=\"username\" {...register(\"Username\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Username is required\"\r\n                }\r\n                })} placeholder=\"Type user name\"/>\r\n              <p className=\"error\">{errors.Username?.message}</p>\r\n\r\n              <TextField\r\n                type=\"email\"\r\n                label=\"Email\"\r\n                id=\"email\"\r\n                {...register(\"Email\", {\r\n                  required: \"Email is required\",\r\n                  pattern: {\r\n                    value: /[a-z0-9]+@[a-z]+\\.[a-z]{2,3}/,\r\n                    message: \"Invalid email format\",\r\n                  },\r\n                  validate: {\r\n                    notAdmin: (fieldValue) => {\r\n                      return (\r\n                        fieldValue !== \"admin@example.com\" ||\r\n                        \"Enter a different email adress\"\r\n                      )\r\n                    },\r\n                    notBlackListed: (fieldValue) => {\r\n                      return (!fieldValue.endsWith('baddomain.com') || \"This domain is not supported\")\r\n                    }\r\n                  }\r\n                })}\r\n                placeholder=\"Type your email\"\r\n              />\r\n                <p className=\"error\">{errors.Email?.message}</p>\r\n\r\n                <MuiTelInput value={num} onChange={handleChange} />\r\n                 \r\n                 <TextField type=\"password\"\r\n                 label=\"Password\"\r\n                 id=\"Password\"\r\n                 onChange={(e) => setValue(\"Password\", e.target.value)}\r\n                  {...register(\"Password\", {\r\n                  required: \"Password is required\",\r\n                   pattern: { \r\n                    value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/, \r\n                    message: \"Password must contain at least 8 characters, including one uppercase letter, one lowercase letter, and one number\", \r\n                    }, \r\n                  })} \r\n                    />\r\n              <p className=\"error\">{errors.Password?.message}</p>\r\n              \r\n                <TextField type=\"password\"\r\n                    label=\"Confirm Password\"\r\n                    onChange={(e) => setValue(\"ConfirmPassword\", e.target.value)}\r\n                    id=\"ConfirmPassword\"\r\n                    {...register(\"ConfirmPassword\", {\r\n                      required: \"Confirm password is required\",\r\n                    })}\r\n                />\r\n              <p className=\"error\">{errors.ConfirmPassword?.message}</p>\r\n              {!passwordsMatch ? <p className=\"error\">Passwords do not match.</p> : ''}\r\n\r\n                <Button type=\"submit\" disabled={formErrors} variant=\"contained\" color=\"success\">\r\n                    Submit\r\n                </Button>\r\n                \r\n              </Stack>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      </AuthProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register","import { useEffect, useState } from 'react';\r\n\r\nconst useUnsplashImages = (query, perPage, page, orientation) => {\r\n  const [imagesApi, setImagesApi] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const apiUrl = 'https://api.unsplash.com/search/photos';\r\n  const apiKey = 'OUaKiH8GygKA0TiBxNxE8Om2QxIL1YZZuiTJKn8nCXo';\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${apiUrl}?query=${query}&page=${page}&per_page=${perPage}&orientation=${orientation}&client_id=${apiKey}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const jsonData = await response.json();\r\n        setImagesApi(jsonData.results);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    fetchImages();\r\n  }, [query, perPage, page, orientation]);\r\n\r\n  return { imagesApi, error };\r\n};\r\nexport default useUnsplashImages","import { useContext, useState, useEffect, createContext } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n// import { DB } from \"../firebase\"\r\n\r\nimport {createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, sendPasswordResetEmail} from \"firebase/auth\"\r\nconst AuthContext = createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return createUserWithEmailAndPassword(auth, email, password)\r\n  }\r\n  function login(email, password) {\r\n    return signInWithEmailAndPassword(auth, email, password)\r\n  }\r\n  function logout() {\r\n    return signOut(auth)\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return sendPasswordResetEmail(auth,email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDK7dLT2jqVVjquVaFtsv80tuofPpTVwWw\",\r\n  authDomain: \"auth-development-85879.firebaseapp.com\",\r\n  projectId: \"auth-development-85879\",\r\n  storageBucket: \"auth-development-85879.appspot.com\",\r\n  messagingSenderId: \"649818716749\",\r\n  appId: \"1:649818716749:web:667419298f5065669d3a04\"\r\n};\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport default app;"],"names":["location","useLocation","_useUnsplashImages","useUnsplashImages","imagesApi","error","_jsxs","children","message","_jsx","_Fragment","className","classes","map","item","index","src","urls","regular","alt","alt_description","id","pathname","split","type","Link","to","_errors$Username","_errors$Email","_errors$Password","_errors$ConfirmPasswo","_useState","useState","_useState2","_slicedToArray","num","setNum","_useState3","_useState4","passwordsMatch","setPasswordsMatch","_useState5","_useState6","formErrors","setFormErrors","signup","useAuth","navigate","useNavigate","form","useForm","defaultValues","Username","Email","Password","ConfirmPassword","register","handleSubmit","formState","setValue","reset","errors","useEffect","AuthProvider","HeadTitle","onSubmit","data","e","preventDefault","email","target","value","password","console","log","Swal","noValidate","Stack","spacing","width","TextField","_objectSpread","label","onChange","required","placeholder","pattern","validate","notAdmin","fieldValue","notBlackListed","endsWith","MuiTelInput","newValue","Button","disabled","variant","color","query","perPage","page","orientation","setImagesApi","setError","fetchImages","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","jsonData","wrap","_context","prev","next","fetch","concat","sent","ok","Error","json","results","t0","stop","apply","arguments","AuthContext","createContext","useContext","currentUser","setCurrentUser","loading","setLoading","auth","onAuthStateChanged","user","login","signInWithEmailAndPassword","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth"],"sourceRoot":""}