{"version":3,"file":"static/js/612.ae94ef0d.chunk.js","mappings":"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","sources":["webpack://hotel/./src/components/HomeSection/Rooms/Rooms.module.css?552b","components/HomeSection/Rooms/CustomTabPanel.js","components/ReusableParts/ApiFeching.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Rooms_box__YyFaW\",\"selected\":\"Rooms_selected__pEFLc\",\"content\":\"Rooms_content__oAWVR\",\"card\":\"Rooms_card__SFb+s\",\"title\":\"Rooms_title__zoxQl\",\"price\":\"Rooms_price__a48Zf\",\"tabs\":\"Rooms_tabs__WR8Lg\",\"tabitem\":\"Rooms_tabitem__aa6aK\"};","import PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useUnsplashImages from '../../ReusableParts/ApiFeching';\r\nimport classes from \"./Rooms.module.css\"\r\n\r\nconst CustomTabPanel = (props) => {\r\n    const { children, value, index, ...other } = props;\r\nreturn (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n)\r\n\r\n}\r\nCustomTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  export default function BasicTabs() {\r\n    const [value, setValue] = useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n    \r\n    const { imagesApi: imagesApi1, error: error1 } = useUnsplashImages('bed-room',3, 2, \"portrait\");\r\n    const { imagesApi: imagesApi2, error: error2 } = useUnsplashImages('budget-bedroom', 3, 1, \"portrait\");\r\n    const { imagesApi: imagesApi3, error: error3 } = useUnsplashImages('luxury-bedroom', 3, 2, \"portrait\");\r\n\r\n    if (error1 || error2 || error3) {\r\n        return <div>Error: {error1.message}</div>;\r\n    }\r\n      function getImageContent(index) {\r\n        let title;\r\n        let content;\r\n        let price = \"From:\";\r\n      \r\n        if (index === 0) {\r\n          title = \"Lake view Room\";\r\n          content = \"Twin Room If you are going to use a passage Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\";\r\n        } else if (index === 1) {\r\n          title = \"Queen Room Balcony\";\r\n          content = \"Twin Room If you are going to use a passage Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\";\r\n        } else {\r\n          title = \"Apartment\";\r\n          content = \"Twin Room If you are going to use a passage Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\";\r\n        }\r\n        return { title, content, price };\r\n      }\r\n    return (\r\n      <section className=\"container\">\r\n          <Box sx={{ width: '100%' }}>\r\n            <Box className={classes.box}>\r\n              <span className='title'>Our Rooms</span>\r\n              <h2 className='title'>Discover Our Rooms</h2>\r\n              <Tabs value={value} onChange={handleChange}  TabIndicatorProps={{\r\n                style: {background: \"unset\"}}}\r\n                aria-label=\"secondary tabs example\">\r\n                <Tab label=\"Classic\" {...a11yProps(0)} classes={{ selected: classes.selected }}/>\r\n                <Tab label=\"Budget\" {...a11yProps(1)} classes={{ selected: classes.selected }}/>\r\n                <Tab label=\"Luxury\" {...a11yProps(2)} classes={{ selected: classes.selected }}/>\r\n              </Tabs>\r\n            </Box>\r\n            <CustomTabPanel value={value} index={0}>\r\n            <div className={classes.content}>\r\n                          {imagesApi1.map((slide, index) => {\r\n                                const { title, content, price } = getImageContent(index);\r\n\r\n                                return (\r\n                                  <div className={classes.card} key={index} data-content={content}>\r\n                                    <>\r\n                                      <img key={slide.id} src={slide.urls.small} alt={slide.alt_description} loading=\"lazy\" />\r\n                                      <h3 className={classes.title}>{title}</h3>\r\n                                      <p className={classes.price}>{price} <span>$140</span> / Night <br/>\r\n                                      <Link to={`/room-single`} className={classes.link}>Check Availability</Link>\r\n                                      </p>\r\n                                    </>\r\n                                  </div>\r\n                                );\r\n                          })}\r\n                      </div>\r\n            </CustomTabPanel>\r\n            <CustomTabPanel value={value} index={1}>\r\n            <div className={classes.content}>\r\n                          {imagesApi2.map((slide, index) => {\r\n                                const { title, content, price } = getImageContent(index);\r\n\r\n                                return (\r\n                                  <div className={classes.card} key={index} data-content={content}>\r\n                                    <>\r\n                                      <img key={slide.id} src={slide.urls.small} alt={slide.alt_description} loading=\"lazy\" />\r\n                                      <h3 className={classes.title}>{title}</h3>\r\n                                      <p className={classes.price}>{price}<span>$140</span> / Night <br/>\r\n                                      <Link to={`/room-single`} className={classes.link}>Check Availability</Link>\r\n                                      </p>\r\n                                    </>\r\n                                  </div>\r\n                                );\r\n                          })}\r\n                      </div>\r\n            </CustomTabPanel>\r\n            <CustomTabPanel value={value} index={2}>\r\n            <div className={classes.content}>\r\n                          {imagesApi3.map((slide, index) => {\r\n                                const { title, content, price } = getImageContent(index);\r\n\r\n                                return (\r\n                                  <div className={classes.card} key={index} data-content={content}>\r\n                                    <>\r\n                                      <img key={slide.id} src={slide.urls.small} alt={slide.alt_description} loading=\"lazy\" />\r\n                                      <h3 className={classes.title}>{title}</h3>\r\n                                      <p className={classes.price}>{price}<span>$140</span> / Night <br/>\r\n                                      <Link to={`/room-single`} className={classes.link}>Check Availability</Link>\r\n                                      </p>\r\n                                    </>\r\n                                  </div>\r\n                                );\r\n                          })}\r\n                      </div>\r\n            </CustomTabPanel>\r\n          </Box>\r\n      </section>\r\n    );\r\n  }","import { useEffect, useState } from 'react';\r\n\r\nconst useUnsplashImages = (query, perPage, page, orientation) => {\r\n  const [imagesApi, setImagesApi] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const apiUrl = 'https://api.unsplash.com/search/photos';\r\n  const apiKey = 'OUaKiH8GygKA0TiBxNxE8Om2QxIL1YZZuiTJKn8nCXo';\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${apiUrl}?query=${query}&page=${page}&per_page=${perPage}&orientation=${orientation}&client_id=${apiKey}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const jsonData = await response.json();\r\n        setImagesApi(jsonData.results);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    fetchImages();\r\n  }, [query, perPage, page, orientation]);\r\n\r\n  return { imagesApi, error };\r\n};\r\nexport default useUnsplashImages\r\n\r\n// Usage in a component\r\n// const MyComponent = () => {\r\n//   const { imagesApi, error } = useUnsplashImages('hotel-sea-view', 5);\r\n\r\n//   if (error) {\r\n//     return <div>Error: {error.message}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       {imagesApi.map((image) => (\r\n//         <img key={image.id} src={image.urls.small} alt={image.alt_description} />\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n"],"names":["CustomTabPanel","props","children","value","index","other","_objectWithoutProperties","_excluded","_jsx","_objectSpread","role","hidden","id","concat","Box","sx","p","Typography","a11yProps","BasicTabs","_useState","useState","_useState2","_slicedToArray","setValue","_useUnsplashImages","useUnsplashImages","imagesApi1","imagesApi","error1","error","_useUnsplashImages2","imagesApi2","error2","_useUnsplashImages3","imagesApi3","error3","_jsxs","message","getImageContent","title","content","price","className","width","classes","box","Tabs","onChange","event","newValue","TabIndicatorProps","style","background","Tab","label","selected","map","slide","_getImageContent","card","_Fragment","src","urls","small","alt","alt_description","loading","Link","to","link","_getImageContent2","_getImageContent3","query","perPage","page","orientation","setImagesApi","_useState3","_useState4","setError","useEffect","fetchImages","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","jsonData","wrap","_context","prev","next","fetch","sent","ok","Error","json","results","t0","stop","apply","arguments"],"sourceRoot":""}