{"version":3,"file":"static/js/80.bac50ebe.chunk.js","mappings":"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","sources":["components/HomeSection/Slide.js","components/ReusableParts/ApiFeching.js"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useUnsplashImages from \"../ReusableParts/ApiFeching\";\r\nimport \"./Home.css\"\r\n\r\nconst Slide = () => {\r\n    const [current, setCurrent] = useState(0);\r\n    const { imagesApi, error } = useUnsplashImages('hotel-sea-view', 5, 3, \"landscape\");\r\n \r\n  useEffect(()=> {\r\n    const interval = setInterval(() => {\r\n            setCurrent((prevCurrent) => (prevCurrent === imagesApi.length - 1 ? 0 : prevCurrent + 1));\r\n          }, 3500);\r\n        \r\n          return () => clearInterval(interval);\r\n  }, [imagesApi.length])\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n\r\n    const length = imagesApi.length;\r\n    const nextSlide = () => {\r\n        setCurrent(current === length - 1 ? 0 : current + 1)\r\n    }\r\n    const prevSlide = () => {\r\n        setCurrent(current === 0 ? length - 1 : current - 1)\r\n    }\r\n    if (!Array.isArray(imagesApi) || imagesApi.length <= 0) {\r\n        return null\r\n    }\r\n    \r\n    return ( \r\n        <>\r\n            <section className=\"container parent flex\">\r\n                <div className=\"control-btn\">\r\n                    <button className=\"prev\" onClick={prevSlide} aria-label=\"prev slide\">\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n                    </button>\r\n                    <button className=\"next\" onClick={nextSlide}  aria-label=\"next slide\">\r\n                        <FontAwesomeIcon icon={faArrowRight} />\r\n                    </button>\r\n                </div>\r\n                {imagesApi.slice(current, current + 5).map((image, index) => (\r\n                    <div key={image.id} className={index === current ? \"slide active\" : \"slide\"}>\r\n                        <div className=\"image-container\">\r\n                            <img src={image.urls.regular} alt={image.alt_description} loading=\"lazy\"/>\r\n                        </div>\r\n                        <div className=\"slide-title\">\r\n                            <h2>The Hotel Booking & <br/> Resort</h2>\r\n                            <p>Make Your Life Better and Bright! You must trip with Us!</p>\r\n                            <button>Book A Room</button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </section>\r\n        </>\r\n     );\r\n}\r\nexport default Slide;","import { useEffect, useState } from 'react';\r\n\r\nconst useUnsplashImages = (query, perPage, page, orientation) => {\r\n  const [imagesApi, setImagesApi] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const apiUrl = 'https://api.unsplash.com/search/photos';\r\n  const apiKey = 'OUaKiH8GygKA0TiBxNxE8Om2QxIL1YZZuiTJKn8nCXo';\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${apiUrl}?query=${query}&page=${page}&per_page=${perPage}&orientation=${orientation}&client_id=${apiKey}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const jsonData = await response.json();\r\n        setImagesApi(jsonData.results);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    fetchImages();\r\n  }, [query, perPage, page, orientation]);\r\n\r\n  return { imagesApi, error };\r\n};\r\nexport default useUnsplashImages"],"names":["_useState","useState","_useState2","_slicedToArray","current","setCurrent","_useUnsplashImages","useUnsplashImages","imagesApi","error","useEffect","interval","setInterval","prevCurrent","length","clearInterval","_jsxs","children","message","Array","isArray","_jsx","_Fragment","className","onClick","FontAwesomeIcon","icon","faArrowLeft","faArrowRight","slice","map","image","index","src","urls","regular","alt","alt_description","loading","id","query","perPage","page","orientation","setImagesApi","_useState3","_useState4","setError","fetchImages","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","jsonData","wrap","_context","prev","next","fetch","concat","sent","ok","Error","json","results","t0","stop","apply","arguments"],"sourceRoot":""}