{"version":3,"file":"static/js/704.11787972.chunk.js","mappings":"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","sources":["webpack://hotel/./src/common/HeadTitle/HeadTitle.module.css?55ef","common/HeadTitle/HeadTitle.js","components/Gallery/card.js","components/Gallery/galleryData.js","components/Gallery/gallery.js","components/ReusableParts/ApiFeching.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"HeadTitle_heading__7lGKQ\",\"container\":\"HeadTitle_container__eEMN1\",\"background\":\"HeadTitle_background__bWeZn\"};","import { Link, useLocation } from \"react-router-dom\";\r\nimport classes from \"./HeadTitle.module.css\"\r\nimport useUnsplashImages from \"../../components/ReusableParts/ApiFeching\";\r\nconst HeadTitle = () => {\r\n    const location = useLocation()\r\n    const { imagesApi, error } = useUnsplashImages('sea', 1, 45, \"landscape\");\r\n \r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n    return ( \r\n       <>\r\n        <section className={classes.heading}>\r\n        {imagesApi?.map((item, index) => {\r\n                    return (\r\n                              <div className={classes.background} key={index}>\r\n                                    {<img key={item.id} src={item.urls.regular} alt={item.alt_description} />}\r\n                              </div>\r\n                            )\r\n          })}\r\n            <div className={classes.container}>\r\n                <h1>{location.pathname.split(\"/\")[1]}</h1>\r\n                <button type=\"button\" aria-label=\"back to home\">\r\n                    <Link to='/'>Home  / </Link>\r\n                    <span>{location.pathname.split(\"/\")[1]}</span>\r\n                </button>\r\n            </div>\r\n        </section>\r\n       </> \r\n     );\r\n}\r\nexport default HeadTitle;","import { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faImage } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Card = (props) => {\r\n    const [popup, setPopup] = useState(false)\r\n    const toggleModal = () => {\r\n        setPopup(!popup)\r\n    }\r\n    return ( \r\n        <>\r\n            <div className=\"items\">\r\n                <div className=\"img\" onClick={toggleModal}>\r\n                    <img src={props.images} alt={props.title} />\r\n                    <FontAwesomeIcon icon={faImage} />\r\n                </div>\r\n                <div className=\"title\">\r\n                    <h3>{props.title}</h3>\r\n                </div>\r\n            </div>\r\n            {popup && (\r\n            <div className=\"popup\" onClick={toggleModal}>\r\n                <div className=\"hide\"></div>\r\n                <div className=\"popup-content\" >\r\n                    <img src={props.images} alt={props.title} />\r\n                </div>\r\n            </div>\r\n            )}\r\n            \r\n        </>\r\n     );\r\n}\r\n \r\nexport default Card;","const GalleryData = [\r\n    {\r\n      img: require('../../images/gallery/gallery-1.webp'),\r\n      title: \"Gallery One\",\r\n    },\r\n    {\r\n      img: require('../../images/gallery/gallery-2.webp'),\r\n      title: \"Gallery Two\",\r\n    },\r\n    {\r\n      img: require('../../images/gallery/gallery-3.webp'),\r\n      title: \"Gallery Three\",\r\n    },\r\n    {\r\n      img: require('../../images/gallery/gallery-4.webp'),\r\n      title: \"Gallery Four\",\r\n    },\r\n    {\r\n      img: require('../../images/gallery/gallery-5.webp'),\r\n      title: \"Gallery Five\",\r\n    },\r\n    {\r\n      img: require('../../images/gallery/gallery-6.webp'),\r\n      title: \"Gallery Six\",\r\n    },\r\n  ]\r\n  \r\n  export default GalleryData","import HeadTitle from \"../../common/HeadTitle/HeadTitle\";\r\nimport Card from \"./card\";\r\nimport GalleryData from \"./galleryData\";\r\nimport \"./gallery.css\"\r\n\r\nconst gallery = () => {\r\n    return ( \r\n        <>\r\n            <HeadTitle />\r\n            <section className=\"gallery top\">\r\n                <div className=\"container grid\">\r\n                    {GalleryData.map((value) => {\r\n                        return <Card images={value.img} title={value.title}/>\r\n                    })}\r\n                </div>\r\n            </section>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default gallery;","import { useEffect, useState } from 'react';\r\n\r\nconst useUnsplashImages = (query, perPage, page, orientation) => {\r\n  const [imagesApi, setImagesApi] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const apiUrl = 'https://api.unsplash.com/search/photos';\r\n  const apiKey = 'OUaKiH8GygKA0TiBxNxE8Om2QxIL1YZZuiTJKn8nCXo';\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${apiUrl}?query=${query}&page=${page}&per_page=${perPage}&orientation=${orientation}&client_id=${apiKey}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const jsonData = await response.json();\r\n        setImagesApi(jsonData.results);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    fetchImages();\r\n  }, [query, perPage, page, orientation]);\r\n\r\n  return { imagesApi, error };\r\n};\r\nexport default useUnsplashImages"],"names":["location","useLocation","_useUnsplashImages","useUnsplashImages","imagesApi","error","_jsxs","children","message","_jsx","_Fragment","className","classes","map","item","index","src","urls","regular","alt","alt_description","id","pathname","split","type","Link","to","props","_useState","useState","_useState2","_slicedToArray","popup","setPopup","toggleModal","onClick","images","title","FontAwesomeIcon","icon","faImage","img","require","HeadTitle","GalleryData","value","Card","query","perPage","page","orientation","setImagesApi","_useState3","_useState4","setError","useEffect","fetchImages","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","jsonData","wrap","_context","prev","next","fetch","concat","sent","ok","Error","json","results","t0","stop","apply","arguments"],"sourceRoot":""}