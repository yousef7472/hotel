{"version":3,"file":"static/js/716.821ae358.chunk.js","mappings":"iJACe,SAASA,IActB,OAZEA,EADqB,qBAAZC,SAA2BA,QAAQC,IACrCD,QAAQC,IAAIC,OAEZ,SAAcC,EAAQC,EAAUC,GACrC,IAAIC,ECLK,SAAwBC,EAAQH,GAC7C,MAAQI,OAAOC,UAAUC,eAAeC,KAAKJ,EAAQH,IAEpC,QADfG,GAAS,EAAAK,EAAA,GAAeL,MAG1B,OAAOA,CACT,CDDiB,CAAcJ,EAAQC,GACjC,GAAKE,EAAL,CACA,IAAIO,EAAOL,OAAOM,yBAAyBR,EAAMF,GACjD,OAAIS,EAAKZ,IACAY,EAAKZ,IAAIU,KAAKI,UAAUC,OAAS,EAAIb,EAASE,GAEhDQ,EAAKI,KALK,CAMnB,EAEKlB,EAAKmB,MAAMC,KAAMJ,UAC1B,C,qEEfA,SAASK,EAAQC,EAAGC,GAClB,IAAIC,EAAIf,OAAOgB,KAAKH,GACpB,GAAIb,OAAOiB,sBAAuB,CAChC,IAAIC,EAAIlB,OAAOiB,sBAAsBJ,GACrCC,IAAMI,EAAIA,EAAEC,QAAO,SAAUL,GAC3B,OAAOd,OAAOM,yBAAyBO,EAAGC,GAAGM,UAC/C,KAAKL,EAAEM,KAAKX,MAAMK,EAAGG,EACvB,CACA,OAAOH,CACT,CACe,SAASO,EAAeT,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIP,UAAUC,OAAQM,IAAK,CACzC,IAAIC,EAAI,MAAQR,UAAUO,GAAKP,UAAUO,GAAK,CAAC,EAC/CA,EAAI,EAAIF,EAAQZ,OAAOe,IAAI,GAAIQ,SAAQ,SAAUT,IAC/C,OAAeD,EAAGC,EAAGC,EAAED,GACzB,IAAKd,OAAOwB,0BAA4BxB,OAAOyB,iBAAiBZ,EAAGb,OAAOwB,0BAA0BT,IAAMH,EAAQZ,OAAOe,IAAIQ,SAAQ,SAAUT,GAC7Id,OAAO0B,eAAeb,EAAGC,EAAGd,OAAOM,yBAAyBS,EAAGD,GACjE,GACF,CACA,OAAOD,CACT,C,qECpBe,SAASc,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLpC,GAAS,OAA6BiC,EAAQC,GAElD,GAAI7B,OAAOiB,sBAAuB,CAChC,IAAIe,EAAmBhC,OAAOiB,sBAAsBW,GACpD,IAAKG,EAAI,EAAGA,EAAIC,EAAiBxB,OAAQuB,IACvCD,EAAME,EAAiBD,GACnBF,EAASI,QAAQH,IAAQ,GACxB9B,OAAOC,UAAUiC,qBAAqB/B,KAAKyB,EAAQE,KACxDnC,EAAOmC,GAAOF,EAAOE,GAEzB,CACA,OAAOnC,CACT,C,mGCKMwC,EAAa,SAACpB,EAAGqB,EAAIC,GAAE,SAAQ,EAAM,EAAMA,EAAK,EAAMD,GAAMrB,GAAK,EAAMsB,EAAK,EAAMD,IAAOrB,EAAI,EAAMqB,GACrGrB,CAAC,EACCuB,EAAuB,KACvBC,EAA2B,GAkBjC,SAASC,EAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOC,EAAAA,EACX,IAAMC,EAAW,SAACC,GAAE,OArBxB,SAAyBC,EAAGC,EAAYC,EAAYT,EAAKE,GACrD,IAAIQ,EACAC,EACArB,EAAI,EACR,IAEIoB,EAAWhB,EADXiB,EAAWH,GAAcC,EAAaD,GAAc,EACpBR,EAAKE,GAAOK,GAC7B,EACXE,EAAaE,EAGbH,EAAaG,QAEZC,KAAKC,IAAIH,GAAYb,KACxBP,EAAIQ,GACV,OAAOa,CACX,CAK6BG,CAAgBR,EAAI,EAAG,EAAGN,EAAKE,EAAI,EAE5D,OAAO,SAAC5B,GAAC,OAAW,IAANA,GAAiB,IAANA,EAAUA,EAAIoB,EAAWW,EAAS/B,GAAI2B,EAAKE,EAAI,CAC5E,CC9CA,IAAMY,EAAShB,EAAY,IAAM,EAAG,EAAG,GACjCiB,EAAUjB,EAAY,EAAG,EAAG,IAAM,GAClCkB,EAAYlB,EAAY,IAAM,EAAG,IAAM,GCJvCmB,EAAgB,SAACC,GACnB,OAAOC,MAAMC,QAAQF,IAA4B,kBAAZA,EAAK,EAC9C,E,kDCEMG,EAAUvB,EAAY,IAAM,KAAM,IAAM,KACxCwB,GAASC,EAAAA,EAAAA,GAAcF,GACvBG,GAAYC,EAAAA,EAAAA,GAAaH,GCEzBI,EAAe,CACjBC,OAAQxB,EAAAA,EACRW,OAAAA,EACAE,UAAAA,EACAD,QAAAA,EACAa,OAAAA,EAAAA,GACAC,UAAAA,EAAAA,GACAC,QAAAA,EAAAA,GACAR,OAAAA,EACAE,UAAAA,EACAH,QAAAA,EACAU,WCjBe,SAACC,GAAC,OAAMA,GAAK,GAAK,EAAI,GAAMV,EAAOU,GAAK,IAAO,EAAIrB,KAAKsB,IAAI,GAAI,IAAMD,EAAI,IAAI,GDmB3FE,EAA6B,SAACC,GAChC,GAAIhB,MAAMC,QAAQe,GAAa,EAE3BC,EAAAA,EAAAA,GAAgC,IAAtBD,EAAWrE,OAAc,2DACnC,IAAAuE,GAAAC,EAAAA,EAAAA,GAAyBH,EAAU,GACnC,OAAOrC,EADEuC,EAAA,GAAIA,EAAA,GAAIA,EAAA,GAAIA,EAAA,GAEzB,CACK,MAA0B,kBAAfF,IAEZC,EAAAA,EAAAA,QAAuCG,IAA7Bb,EAAaS,GAA2B,wBAAFK,OAA0BL,EAAU,MAC7ET,EAAaS,IAEjBA,CACX,E,oBExBA,SAASM,EAASC,GAA4E,IAHvEC,EAAQC,EAG+DC,EAAAH,EAAzEI,SAAAA,OAAQ,IAAAD,EAAG,IAAGA,EAAaE,EAAcL,EAAzBD,UAA2BO,EAAKN,EAALM,MAAKC,EAAAP,EAAExB,KAAAA,OAAI,IAAA+B,EAAG,YAAWA,EAK/EC,EAAkBjC,EAAcC,GAChCA,EAAKiC,IAAIjB,GACTA,EAA2BhB,GAK3BkC,EAAQ,CACVC,MAAM,EACNtF,MAAOgF,EAAe,IAKpBO,EC7BV,SAA8BC,EAAQT,GAClC,OAAOS,EAAOJ,KAAI,SAAC3E,GAAC,OAAKA,EAAIsE,CAAQ,GACzC,CD2B0BU,CAGtBR,GAASA,EAAMlF,SAAWiF,EAAejF,OACnCkF,GACAS,EAAAA,EAAAA,GAAcV,GAAiBD,GAC/BY,GAAoBC,EAAAA,EAAAA,GAAYL,EAAeP,EAAgB,CACjE7B,KAAMC,MAAMC,QAAQ8B,GACdA,GA9BSP,EA+BKI,EA/BGH,EA+BaM,EA9BjCP,EAAOQ,KAAI,kBAAMP,GAAU5B,CAAS,IAAE4C,OAAO,EAAGjB,EAAO7E,OAAS,MAgCvE,MAAO,CACH+F,mBAAoBf,EACpBgB,KAAM,SAACzF,GAGH,OAFA+E,EAAMrF,MAAQ2F,EAAkBrF,GAChC+E,EAAMC,KAAOhF,GAAKyE,EACXM,CACX,EAER,C,wBE9CMW,EAAyB,EAC/B,SAASC,EAAsBC,EAAc5F,EAAG6F,GAC5C,IAAMC,EAAQxD,KAAKyD,IAAI/F,EAAI0F,EAAwB,GACnD,OAAOM,EAAAA,EAAAA,GAAkBH,EAAUD,EAAaE,GAAQ9F,EAAI8F,EAChE,C,cCFMG,EAAU,KACVC,EAAc,IACdC,EAAc,GACdC,EAAa,IACbC,EAAa,EACnB,SAASC,EAAUjC,GAA6D,IACxEkC,EACAC,EAFwEhC,EAAAH,EAA1DI,SAAAA,OAAQ,IAAAD,EAAG,IAAGA,EAAAiC,EAAApC,EAAEqC,OAAAA,OAAM,IAAAD,EAAG,IAAIA,EAAAE,EAAAtC,EAAEuC,SAAAA,OAAQ,IAAAD,EAAG,EAACA,EAAAE,EAAAxC,EAAEyC,KAAAA,OAAI,IAAAD,EAAG,EAACA,GAGvEE,EAAAA,EAAAA,GAAQtC,IAAYuC,EAAAA,EAAAA,GAAsBb,GAAc,8CACxD,IAAIc,EAAe,EAAIP,EAIvBO,GAAeC,EAAAA,EAAAA,GAAMd,EAAYC,EAAYY,GAC7CxC,GAAWyC,EAAAA,EAAAA,GAAMhB,EAAaC,GAAagB,EAAAA,EAAAA,GAAsB1C,IAC7DwC,EAAe,GAIfV,EAAW,SAACa,GACR,IAAMC,EAAmBD,EAAeH,EAClCK,EAAQD,EAAmB5C,EAC3B8C,EAAIF,EAAmBT,EACvBY,EAAIC,EAAgBL,EAAcH,GAClCS,EAAIpF,KAAKqF,KAAKL,GACpB,OAAOrB,EAAWsB,EAAIC,EAAKE,CAC/B,EACAlB,EAAa,SAACY,GACV,IACME,EADmBF,EAAeH,EACPxC,EAC3BmD,EAAIN,EAAQV,EAAWA,EACvB9G,EAAIwC,KAAKsB,IAAIqD,EAAc,GAAK3E,KAAKsB,IAAIwD,EAAc,GAAK3C,EAC5DoD,EAAIvF,KAAKqF,KAAKL,GACdQ,EAAIL,EAAgBnF,KAAKsB,IAAIwD,EAAc,GAAIH,GAErD,QADgBV,EAASa,GAAgBnB,EAAU,GAAK,EAAI,KACzC2B,EAAI9H,GAAK+H,GAAMC,CACtC,IAMAvB,EAAW,SAACa,GAGR,OAFU9E,KAAKqF,KAAKP,EAAe3C,KACxB2C,EAAeR,GAAYnC,EAAW,GACzCwB,CACZ,EACAO,EAAa,SAACY,GAGV,OAFU9E,KAAKqF,KAAKP,EAAe3C,IACIA,EAAWA,GAAvCmC,EAAWQ,GAE1B,GAEJ,IACMA,EAmBV,SAAyBb,EAAUC,EAAYuB,GAE3C,IADA,IAAIC,EAASD,EACJ/G,EAAI,EAAGA,EAAIiH,EAAgBjH,IAChCgH,GAAkBzB,EAASyB,GAAUxB,EAAWwB,GAEpD,OAAOA,CACX,CAzByBE,CAAgB3B,EAAUC,EAD1B,EAAI/B,GAGzB,GADAA,GAAWuC,EAAAA,EAAAA,GAAsBvC,GAC7B0D,MAAMf,GACN,MAAO,CACHgB,UAAW,IACXC,QAAS,GACT5D,SAAAA,GAIJ,IAAM2D,EAAY9F,KAAKsB,IAAIwD,EAAc,GAAKN,EAC9C,MAAO,CACHsB,UAAAA,EACAC,QAAwB,EAAfpB,EAAmB3E,KAAKgG,KAAKxB,EAAOsB,GAC7C3D,SAAAA,EAGZ,CACA,IAAMwD,EAAiB,GAQvB,SAASR,EAAgBL,EAAcH,GACnC,OAAOG,EAAe9E,KAAKgG,KAAK,EAAIrB,EAAeA,EACvD,C,4CClFMsB,EAAe,CAAC,WAAY,UAC5BC,EAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,EAAaC,EAASzI,GAC3B,OAAOA,EAAK0I,MAAK,SAAC5H,GAAG,YAAsBmD,IAAjBwE,EAAQ3H,EAAkB,GACxD,CAwBA,SAAS6H,EAAMvE,GAAkD,IAuBzDwE,EAvBUzE,EAASC,EAATD,UAAW0E,EAASzE,EAATyE,UAAWC,EAAS1E,EAAT0E,UAAcL,GAAO9H,EAAAA,EAAAA,GAAAyD,EAAA2E,GACnDC,EAAS7E,EAAU,GACnBxF,EAASwF,EAAUA,EAAU3E,OAAS,GAKtCsF,EAAQ,CAAEC,MAAM,EAAOtF,MAAOuJ,GACpCC,EA/BJ,SAA0BR,GACtB,IAAIS,GAAaC,EAAAA,EAAAA,GAAA,CACbxC,SAAU,EACVwB,UAAW,IACXC,QAAS,GACTvB,KAAM,EACNuC,wBAAwB,GACrBX,GAGP,IAAKD,EAAaC,EAASF,IACvBC,EAAaC,EAASH,GAAe,CACrC,IAAMe,EAAUhD,EAAWoC,IAC3BS,GAAaC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACND,GACAG,GAAO,IACV1C,SAAU,EACVE,KAAM,KAEIuC,wBAAyB,CAC3C,CACA,OAAOF,CACX,CASsFI,CAAiBb,GAA3FN,EAASc,EAATd,UAAWC,EAAOa,EAAPb,QAASvB,EAAIoC,EAAJpC,KAAMF,EAAQsC,EAARtC,SAAUnC,EAAQyE,EAARzE,SAAU4E,EAAsBH,EAAtBG,uBAChDG,EAAkB5C,IAAYO,EAAAA,EAAAA,GAAsBP,GAAY,EAChEK,EAAeoB,GAAW,EAAI/F,KAAKgG,KAAKF,EAAYtB,IACpD2C,EAAe7K,EAASqK,EACxBS,GAAsBvC,EAAAA,EAAAA,GAAsB7E,KAAKgG,KAAKF,EAAYtB,IAQlE6C,EAAkBrH,KAAKC,IAAIkH,GAAgB,EAIjD,GAHAV,IAAcA,EAAYY,EAAkB,IAAO,GACnDb,IAAcA,EAAYa,EAAkB,KAAQ,IAEhD1C,EAAe,EAAG,CAClB,IAAM2C,EAAcnC,EAAgBiC,EAAqBzC,GAEzD4B,EAAgB,SAAC7I,GACb,IAAMuG,EAAWjE,KAAKqF,KAAKV,EAAeyC,EAAsB1J,GAChE,OAAQpB,EACJ2H,IACOiD,EACCvC,EAAeyC,EAAsBD,GACrCG,EACAtH,KAAKuH,IAAID,EAAc5J,GACvByJ,EAAenH,KAAKwH,IAAIF,EAAc5J,GACtD,CACJ,MACK,GAAqB,IAAjBiH,EAEL4B,EAAgB,SAAC7I,GAAC,OAAKpB,EACnB0D,KAAKqF,KAAK+B,EAAsB1J,IAC3ByJ,GACID,EAAkBE,EAAsBD,GAAgBzJ,EAAE,MAEtE,CAED,IAAM+J,EAAoBL,EAAsBpH,KAAKgG,KAAKrB,EAAeA,EAAe,GACxF4B,EAAgB,SAAC7I,GACb,IAAMuG,EAAWjE,KAAKqF,KAAKV,EAAeyC,EAAsB1J,GAE1DgK,EAAW1H,KAAK2H,IAAIF,EAAoB/J,EAAG,KACjD,OAAQpB,EACH2H,IACKiD,EACEvC,EAAeyC,EAAsBD,GACrCnH,KAAK4H,KAAKF,GACVD,EACIN,EACAnH,KAAK6H,KAAKH,IAClBD,CACZ,CACJ,CACA,MAAO,CACHvE,mBAAoB6D,GAAyB5E,GAAmB,KAChEgB,KAAM,SAACzF,GACH,IAAM6F,EAAUgD,EAAc7I,GAC9B,GAAKqJ,EAqBDtE,EAAMC,KAAOhF,GAAKyE,MArBO,CACzB,IAAI2F,EAAkBZ,EACZ,IAANxJ,IAOIoK,EADAnD,EAAe,EACGtB,EAAsBkD,EAAe7I,EAAG6F,GAGxC,GAG1B,IAAMwE,EAA2B/H,KAAKC,IAAI6H,IAAoBrB,EACxDuB,EAA+BhI,KAAKC,IAAI3D,EAASiH,IAAYiD,EACnE/D,EAAMC,KACFqF,GAA4BC,CACpC,CAKA,OADAvF,EAAMrF,MAAQqF,EAAMC,KAAOpG,EAASiH,EAC7Bd,CACX,EAER,CC3HA,SAASwF,EAAOlG,GAAiK,IAA9JD,EAASC,EAATD,UAASuC,EAAAtC,EAAEuC,SAAAA,OAAQ,IAAAD,EAAG,EAAGA,EAAA6D,EAAAnG,EAAEoG,MAAAA,OAAK,IAAAD,EAAG,GAAGA,EAAAE,EAAArG,EAAEsG,aAAAA,OAAY,IAAAD,EAAG,IAAGA,EAAAE,EAAAvG,EAAEwG,cAAAA,OAAa,IAAAD,EAAG,GAAEA,EAAAE,EAAAzG,EAAE0G,gBAAAA,OAAe,IAAAD,EAAG,IAAGA,EAAEE,EAAY3G,EAAZ2G,aAAcf,EAAG5F,EAAH4F,IAAKlE,EAAG1B,EAAH0B,IAAGkF,EAAA5G,EAAEyE,UAAAA,OAAS,IAAAmC,EAAG,GAAGA,EAAElC,EAAS1E,EAAT0E,UACzJE,EAAS7E,EAAU,GACnBW,EAAQ,CACVC,MAAM,EACNtF,MAAOuJ,GAGLiC,EAAkB,SAACC,GACrB,YAAYjH,IAAR+F,EACOlE,OACC7B,IAAR6B,GAEGzD,KAAKC,IAAI0H,EAAMkB,GAAK7I,KAAKC,IAAIwD,EAAMoF,GAD/BlB,EAC0ClE,CACzD,EACIqF,EAAYX,EAAQ7D,EAClByE,EAAQpC,EAASmC,EACjBxM,OAA0BsF,IAAjB8G,EAA6BK,EAAQL,EAAaK,GAK7DzM,IAAWyM,IACXD,EAAYxM,EAASqK,GACzB,IAcIqC,EACAC,EAfEC,EAAY,SAACxL,GAAC,OAAMoL,EAAY9I,KAAKqF,KAAK3H,EAAI2K,EAAa,EAC3Dc,EAAa,SAACzL,GAAC,OAAKpB,EAAS4M,EAAUxL,EAAE,EACzC0L,EAAgB,SAAC1L,GACnB,IAAMsH,EAAQkE,EAAUxL,GAClB2L,EAASF,EAAWzL,GAC1B+E,EAAMC,KAAO1C,KAAKC,IAAI+E,IAAUwB,EAChC/D,EAAMrF,MAAQqF,EAAMC,KAAOpG,EAAS+M,CACxC,EASMC,EAAqB,SAAC5L,GAjCN,IAACmL,KAkCApG,EAAMrF,WAlCSwE,IAAR+F,GAAqBkB,EAAIlB,QAAiB/F,IAAR6B,GAAqBoF,EAAIpF,KAoCrFuF,EAAsBtL,EACtBuL,EAAW3C,EAAO,CACdxE,UAAW,CAACW,EAAMrF,MAAOwL,EAAgBnG,EAAMrF,QAC/CkH,SAAUjB,EAAsB8F,EAAYzL,EAAG+E,EAAMrF,OACrD2I,QAASwC,EACTzC,UAAW2C,EACXjC,UAAAA,EACAC,UAAAA,IAER,EAEA,OADA6C,EAAmB,GACZ,CACHpG,mBAAoB,KACpBC,KAAM,SAACzF,GAOH,IAAI6L,GAAkB,EAUtB,OATKN,QAAoCrH,IAAxBoH,IACbO,GAAkB,EAClBH,EAAc1L,GACd4L,EAAmB5L,SAMKkE,IAAxBoH,GAAqCtL,EAAIsL,EAClCC,EAAS9F,KAAKzF,EAAIsL,KAGxBO,GAAmBH,EAAc1L,GAC3B+E,EAEf,EAER,C,cClFM+G,EAAkB,SAACC,GACrB,IAAMC,EAAgB,SAAH3H,GAAA,IAAM4H,EAAS5H,EAAT4H,UAAS,OAAOF,EAAOE,EAAU,EAC1D,MAAO,CACHC,MAAO,kBAAMC,EAAAA,GAAMJ,OAAOC,GAAe,EAAK,EAC9CI,KAAM,kBAAMC,EAAAA,EAAAA,IAAYL,EAAc,EAKtCM,IAAK,kBAAMC,EAAAA,GAAUC,aAAeD,EAAAA,GAAUN,UAAYQ,YAAYH,KAAK,EAEnF,ECTMI,EAAuB,IAC7B,SAASC,EAAsBC,GAI3B,IAHA,IAAInI,EAAW,EAEXM,EAAQ6H,EAAUnH,KAAKhB,IACnBM,EAAMC,MAAQP,EAAWiI,GAC7BjI,GAHa,GAIbM,EAAQ6H,EAAUnH,KAAKhB,GAE3B,OAAOA,GAAYiI,EAAuBG,IAAWpI,CACzD,C,qICLMqI,EAAQ,CACVC,MAAOxC,EACPA,QAAAA,EACAyC,MAAO5I,EACPA,UAAWA,EACXwE,OAAAA,GASJ,SAASqE,EAAY5I,GAA2M,IAGxN6I,EACAC,EAYAC,EAhBwNC,EAAAhJ,EAAxMiJ,SAAAA,OAAQ,IAAAD,GAAOA,EAAAE,EAAAlJ,EAAEmJ,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAAE,EAAApJ,EAAEqJ,OAAAA,OAAM,IAAAD,EAAG3B,EAAe2B,EAAaE,EAAWtJ,EAAtBD,UAASwJ,EAAAvJ,EAAewJ,KAAAA,OAAI,IAAAD,EAAG,YAAWA,EAAAE,EAAAzJ,EAAE0J,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAAAE,EAAA3J,EAAE4J,YAAAA,OAAW,IAAAD,EAAG,EAACA,EAAAE,EAAA7J,EAAE8J,WAAAA,OAAU,IAAAD,EAAG,OAAMA,EAAEE,EAAM/J,EAAN+J,OAAQC,EAAMhK,EAANgK,OAAQC,EAAUjK,EAAViK,WAAYC,EAAQlK,EAARkK,SAAa7F,GAAO9H,EAAAA,EAAAA,GAAAyD,EAAA2E,GACpNwF,EAAQ,EACRC,GAAa,EAOXC,EAAwB,WAC1BvB,EAAyB,IAAIwB,SAAQ,SAACC,GAClC1B,EAAyB0B,CAC7B,GACJ,EAEAF,IAEA,IAMIG,EANEC,EAAmBhC,EAAMe,IAASzJ,EAOpC0K,IAAqB1K,GACK,kBAAnBuJ,EAAY,KACnBkB,GAAwBvJ,EAAAA,EAAAA,GAAY,CAAC,EAAG,KAAMqI,EAAa,CACvDzG,OAAO,IAEXyG,EAAc,CAAC,EAAG,MAEtB,IACIoB,EADEnC,EAAYkC,GAAgB1F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIV,GAAO,IAAEtE,UAAWuJ,KAEzC,WAAfQ,IACAY,EAAoBD,GAAgB1F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/BV,GAAO,IACVtE,WAAW4K,EAAAA,EAAAA,GAAIrB,GAAasB,UAC5BrI,WAAY8B,EAAQ9B,UAAY,OAGxC,IAAIsI,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjCzC,EAAUpH,oBAA+BuI,IACzCnB,EAAUpH,mBAAqBmH,EAAsBC,IAEzD,IAAQpH,EAAuBoH,EAAvBpH,mBACJ8J,EAAmBzC,IACnB0C,EAAgB1C,IACO,OAAvBrH,IAEA+J,GADAD,EAAmB9J,EAAqByI,IACJF,EAAS,GAAKE,GAEtD,IAAIuB,EAAc,EACZC,EAAO,SAACxD,GACV,GAAkB,OAAdmD,EAAJ,CAQIZ,EAAQ,IACRY,EAAY9M,KAAK2H,IAAImF,EAAWnD,IAChCuC,EAAQ,IACRY,EAAY9M,KAAK2H,IAAIgC,EAAYsD,EAAgBf,EAAOY,IAW5D,IAAMM,GATFF,EADa,OAAbL,EACcA,EAMA7M,KAAKqN,MAAM1D,EAAYmD,GAAaZ,GAGfhB,GAASgB,GAAS,EAAI,GAAK,GAC5DoB,EAAiBpB,GAAS,EAAIkB,EAAmB,EAAIA,EAAmBH,EAC9EC,EAAclN,KAAKyD,IAAI2J,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIM,EAAUL,EACVM,EAAiBlD,EACrB,GAAImB,EAAQ,CAMR,IAAMgC,EAAWP,EAAcF,EAK3BU,EAAmB1N,KAAK2N,MAAMF,GAK9BG,EAAoBH,EAAW,GAK9BG,GAAqBH,GAAY,IAClCG,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmB1N,KAAK2H,IAAI+F,EAAkBjC,EAAS,GAIvD,IAAMoC,EAAiBC,QAAQJ,EAAmB,GAC9CG,IACmB,YAAfhC,GACA+B,EAAoB,EAAIA,EACpBjC,IACAiC,GAAqBjC,EAAcqB,IAGnB,WAAfnB,IACL2B,EAAiBf,IAGzB,IAAIpL,GAAIuD,EAAAA,EAAAA,GAAM,EAAG,EAAGgJ,GAChBV,EAAcD,IACd5L,EAAmB,YAAfwK,GAA4BgC,EAAiB,EAAI,GAEzDN,EAAUlM,EAAI2L,CAClB,CAMA,IAAMvK,EAAQ6K,EACR,CAAE5K,MAAM,EAAOtF,MAAOiO,EAAY,IAClCmC,EAAerK,KAAKoK,GACtBhB,IACA9J,EAAMrF,MAAQmP,EAAsB9J,EAAMrF,QAE9C,IAAMsF,EAASD,EAATC,KACD4K,GAAyC,OAAvBpK,IACnBR,EAAOwJ,GAAS,EAAIgB,GAAeD,EAAgBC,GAAe,GAEtE,IAAMa,EAAmC,OAAblB,IACT,aAAdD,GAA2C,YAAdA,GAA2BlK,GAO7D,OANIuJ,GACAA,EAASxJ,EAAMrF,OAEf2Q,GACAC,IAEGvL,CAvGG,CAwGd,EACMwL,EAAsB,WACxBnD,GAAmBA,EAAgBhB,OACnCgB,OAAkBlJ,CACtB,EACMsM,EAAS,WACXtB,EAAY,OACZqB,IACArD,IACAwB,IACAU,EAAYC,EAAa,IAC7B,EACMiB,EAAS,WACXpB,EAAY,WACZZ,GAAcA,IACdiC,IACArD,GACJ,EACMuD,GAAO,WACT,IAAIhC,EAAJ,CAEKrB,IACDA,EAAkBM,EAAO+B,IAC7B,IAAMnD,EAAMc,EAAgBd,MAC5B8B,GAAUA,IACO,OAAbe,EACAC,EAAY9C,EAAM6C,EAEZC,GAA2B,aAAdF,IACnBE,EAAY9C,GAEE,aAAd4C,GACAR,IAEJW,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZ9B,EAAgBlB,OArBN,CAsBd,EACIoB,GACAmD,KAEJ,IAAMC,GAAW,CACbC,KAAI,SAAC/B,EAASgC,GACV,OAAOzD,EAAuBwD,KAAK/B,EAASgC,EAChD,EACA,QAAIC,GACA,OAAO1J,EAAAA,EAAAA,GAAsBqI,EACjC,EACA,QAAIqB,CAAKC,GACLA,GAAU9J,EAAAA,EAAAA,GAAsB8J,GAChCtB,EAAcsB,EACG,OAAb3B,GAAsB/B,GAA6B,IAAVoB,EAIzCY,EAAYhC,EAAgBd,MAAQwE,EAAUtC,EAH9CW,EAAW2B,CAKnB,EACA,YAAIrM,GACA,IAAMA,EAA4C,OAAjCmI,EAAUpH,mBACrBmH,EAAsBC,GACtBA,EAAUpH,mBAChB,OAAO2B,EAAAA,EAAAA,GAAsB1C,EACjC,EACA,SAAI+J,GACA,OAAOA,CACX,EACA,SAAIA,CAAMuC,GACFA,IAAavC,GAAUpB,IAE3BoB,EAAQuC,EACRL,GAASG,MAAO1J,EAAAA,EAAAA,GAAsBqI,GAC1C,EACA,SAAIzK,GACA,OAAOmK,CACX,EACAuB,KAAAA,GACAO,MAAO,WACH9B,EAAY,SACZC,EAAWK,CACf,EACApD,KAAM,WACFqC,GAAa,EACK,SAAdS,IAEJA,EAAY,OACZb,GAAUA,IACVmC,IACJ,EACAA,OAAQ,WACe,OAAfnB,GACAI,EAAKJ,GACTmB,GACJ,EACAS,SAAU,WACN/B,EAAY,UAChB,EACAgC,OAAQ,SAACrB,GAEL,OADAT,EAAY,EACLK,EAAKI,EAChB,GAEJ,OAAOa,EACX,C,yFClSA,SAASS,IAIL,IAAIC,GAAa,EAIXC,EAAc,IAAIC,IAClBZ,EAAW,CACba,UAAS,SAACC,GAEN,OADAH,EAAYI,IAAID,GACT,WAAWH,EAAYK,OAAOF,EAAc,CACvD,EACAtF,MAAK,SAACpI,EAAY6N,IACd5N,EAAAA,EAAAA,GAAUqN,EAAY,mHACtB,IAAMQ,EAAa,GAMnB,OALAP,EAAY7Q,SAAQ,SAACgR,GACjBI,EAAWtR,MAAKuR,EAAAA,EAAAA,GAAqBL,EAAe1N,EAAY,CAC5D6N,mBAAAA,IAER,IACOhD,QAAQmD,IAAIF,EACvB,EACAG,IAAG,SAACjO,GAEA,OADAC,EAAAA,EAAAA,GAAUqN,EAAY,iHACfC,EAAY7Q,SAAQ,SAACgR,IACxBQ,EAAAA,EAAAA,IAAUR,EAAe1N,EAC7B,GACJ,EACAsI,KAAI,WACAiF,EAAY7Q,SAAQ,SAACgR,IArCjC,SAAuBA,GACnBA,EAAclN,OAAO9D,SAAQ,SAACd,GAAK,OAAKA,EAAM0M,MAAM,GACxD,CAoCgB6F,CAAcT,EAClB,GACJ,EACAU,MAAK,WAED,OADAd,GAAa,EACN,WACHA,GAAa,EACbV,EAAStE,MACb,CACJ,GAEJ,OAAOsE,CACX,C,wBChBA,IAAMyB,EALN,WACI,IAAMzB,GAAW0B,EAAAA,EAAAA,GAAYjB,GAE7B,OADAkB,EAAAA,EAAAA,GAA0B3B,EAASwB,MAAO,IACnCxB,CACX,C,yFCrCM4B,GACO,E,8BCDPC,EAAqB,SAAChO,GAAM,OAAKzB,MAAMC,QAAQwB,IAAgC,kBAAdA,EAAO,EAAe,ECE7F,SAASiO,EAAuBjO,GAC5B,OAAO6L,SAAS7L,GACO,kBAAXA,GAAuBkO,EAAqBlO,IACpDgO,EAAmBhO,IAClBzB,MAAMC,QAAQwB,IAAWA,EAAOmO,MAAMF,GAC/C,CACA,IAAMG,EAAsB,SAAHtO,GAAA,IAAAuO,GAAA3O,EAAAA,EAAAA,GAAAI,EAAA,GAAKkD,EAACqL,EAAA,GAAEpL,EAACoL,EAAA,GAAElL,EAACkL,EAAA,GAAEhL,EAACgL,EAAA,yBAAAzO,OAAsBoD,EAAC,MAAApD,OAAKqD,EAAC,MAAArD,OAAKuD,EAAC,MAAAvD,OAAKyD,EAAC,MAC3E6K,EAAuB,CACzBnP,OAAQ,SACRT,KAAM,OACNJ,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXY,OAAQoP,EAAoB,CAAC,EAAG,IAAM,IAAM,IAC5ClP,QAASkP,EAAoB,CAAC,IAAM,EAAG,EAAG,MAC1C1P,OAAQ0P,EAAoB,CAAC,IAAM,IAAM,KAAO,MAChD3P,QAAS2P,EAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASE,EAAwBtO,GAC7B,GAAKA,EAEL,OAAOgO,EAAmBhO,GACpBoO,EAAoBpO,GACpBzB,MAAMC,QAAQwB,GACVA,EAAOO,IAAI+N,GACXJ,EAAqBlO,EACnC,C,kECnBMuO,ECTN,SAAcC,GACV,IAAI/K,EACJ,OAAO,WAGH,YAFe9D,IAAX8D,IACAA,EAAS+K,KACN/K,CACX,CACJ,CDEsBgL,EAAK,kBAAM/T,OAAOE,eAAeC,KAAK6T,QAAQ/T,UAAW,UAAU,IAInFgU,EAAoB,IAAI5B,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAAS6B,EAA2BzT,EAAO0T,EAAS/O,GAAYA,EAARkK,SAAoC,IAA1BD,EAAUjK,EAAViK,WAAe5F,GAAO9H,EAAAA,EAAAA,GAAAyD,EAAA2E,GAOpF,KAN+B8J,KAC3BI,EAAkBG,IAAID,KACrB1K,EAAQuF,aACc,WAAvBvF,EAAQyF,YACY,IAApBzF,EAAQL,SACS,YAAjBK,EAAQmF,MAER,OAAO,EAIX,IACIX,EACAC,EAFAsB,GAAa,EAOXC,EAAwB,WAC1BvB,EAAyB,IAAIwB,SAAQ,SAACC,GAClC1B,EAAyB0B,CAC7B,GACJ,EAEAF,IACA,IAAMtK,EAA2CsE,EAA3CtE,UAASkP,EAAkC5K,EAAhCjE,SAAAA,OAAQ,IAAA6O,EAAG,IAAGA,EAAEzQ,EAAgB6F,EAAhB7F,KAAM8B,EAAU+D,EAAV/D,MAIvC,GAjCkC,SAACyO,EAAW1K,GAAO,MAAsB,WAAjBA,EAAQmF,MACpD,oBAAduF,IACCZ,EAAuB9J,EAAQ7F,KAAK,CA+BjC0Q,CAA8BH,EAAW1K,GAAU,CAanD,IAZA,IAAM8K,GAAkBvG,EAAAA,EAAAA,IAAY7D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/BV,GAAO,IACVqF,OAAQ,EACRP,MAAO,KAEPzI,EAAQ,CAAEC,MAAM,EAAOtF,MAAO0E,EAAU,IACtCqP,EAAwB,GAK1BzT,EAAI,GACA+E,EAAMC,MAAQhF,EA/CV,KAgDR+E,EAAQyO,EAAgBtC,OAAOlR,GAC/ByT,EAAsBnT,KAAKyE,EAAMrF,OACjCM,GAvDQ,GAyDZ2E,OAAQT,EACRE,EAAYqP,EACZhP,EAAWzE,EA3DC,GA4DZ6C,EAAO,QACX,CACA,IAAM6Q,EErFV,SAAsBC,EAASP,EAAWhP,GAAwF,IAAAC,EAAA7E,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAC+N,EAAAlJ,EAAzEmJ,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAE9I,EAAQJ,EAARI,SAAQqJ,EAAAzJ,EAAE0J,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAAAI,EAAA7J,EAAE8J,WAAAA,OAAU,IAAAD,EAAG,OAAMA,EAAErL,EAAIwB,EAAJxB,KAAM8B,EAAKN,EAALM,MACzGiP,GAAeC,EAAAA,EAAAA,GAAA,GAAMT,EAAYhP,GACnCO,IACAiP,EAAgB1O,OAASP,GAC7B,IAAMJ,EAASsO,EAAwBhQ,GAMvC,OAFIC,MAAMC,QAAQwB,KACdqP,EAAgBrP,OAASA,GACtBoP,EAAQG,QAAQF,EAAiB,CACpCpG,MAAAA,EACA/I,SAAAA,EACAF,OAASzB,MAAMC,QAAQwB,GAAmB,SAATA,EACjCwP,KAAM,OACNC,WAAYjG,EAAS,EACrBkG,UAA0B,YAAf9F,EAA2B,YAAc,UAE5D,CFmEsB+F,CAAaxU,EAAMyU,MAAMtO,QAASuN,EAAWhP,GAASgF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjEV,GAAO,IACVjE,SAAAA,EASA5B,KAAMA,EACN8B,MAAAA,KAQA+D,EAAQ0L,YACRV,EAAUtE,UAAY7C,EAAAA,GAAUC,aAC1BD,EAAAA,GAAUN,UACVoI,SAASC,SACLD,SAASC,SAAS9E,YAClB/C,YAAYH,OAE1B,IAAMiI,EAAkB,WAAH,OAASb,EAAUlD,QAAQ,EAC1CgE,EAAa,WACfrI,EAAAA,GAAMJ,OAAOwI,GACbrH,IACAwB,GACJ,EA4EA,OAnEAgF,EAAUe,SAAW,WACjB/U,EAAMqS,IGjId,SAA0B3N,EAASC,GAAmC,IAA/B0J,EAAM1J,EAAN0J,OAAMG,EAAA7J,EAAE8J,WAI3C,OAAO/J,EAHO2J,GAAyB,eADc,IAAAG,EAAG,OAAMA,IACbH,EAAS,IAAM,EAC1D,EACA3J,EAAU3E,OAAS,EAE7B,CH4HkBiV,CAAiBtQ,EAAWsE,IACtC4F,GAAcA,IACdkG,GACJ,EAIiB,CACb7D,KAAI,SAAC/B,EAASgC,GACV,OAAOzD,EAAuBwD,KAAK/B,EAASgC,EAChD,EACA+D,eAAc,SAACL,GAGX,OAFAZ,EAAUY,SAAWA,EACrBZ,EAAUe,SAAW,KACd3S,EAAAA,CACX,EACA,QAAI+O,GACA,OAAO1J,EAAAA,EAAAA,GAAsBuM,EAAUlE,aAAe,EAC1D,EACA,QAAIqB,CAAKC,GACL4C,EAAUlE,aAAcxI,EAAAA,EAAAA,GAAsB8J,EAClD,EACA,SAAItC,GACA,OAAOkF,EAAUkB,YACrB,EACA,SAAIpG,CAAMuC,GACN2C,EAAUkB,aAAe7D,CAC7B,EACA,YAAItM,GACA,OAAO0C,EAAAA,EAAAA,GAAsB1C,EACjC,EACAgM,KAAM,WACEhC,IAEJiF,EAAUjD,QAIVpE,EAAAA,EAAAA,IAAYkI,GAChB,EACAvD,MAAO,kBAAM0C,EAAU1C,OAAO,EAC9B5E,KAAM,WAEF,GADAqC,GAAa,EACe,SAAxBiF,EAAUxE,UAAd,CAUA,IAAQM,EAAgBkE,EAAhBlE,YACR,GAAIA,EAAa,CACb,IAAMgE,GAAkBvG,EAAAA,EAAAA,IAAY7D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/BV,GAAO,IACV4E,UAAU,KAEd5N,EAAMmV,gBAAgBrB,EAAgBtC,OAAO1B,EAnKzC,IAmKoE9P,MAAO8T,EAAgBtC,OAAO1B,GAAa9P,MAnK/G,GAoKR,CACA8U,GAjBU,CAkBd,EACAvD,SAAU,kBAAMyC,EAAUpD,QAAQ,EAClCE,OAAQgE,EAGhB,C,cIlMMM,EAAoB,CACtBjH,KAAM,SACNzF,UAAW,IACXC,QAAS,GACTU,UAAW,IAQTgM,EAAsB,CACxBlH,KAAM,YACNpJ,SAAU,IAMR5B,EAAO,CACTgL,KAAM,YACNhL,KAAM,CAAC,IAAM,GAAK,IAAM,GACxB4B,SAAU,IAERuQ,EAAuB,SAACC,EAAQ5Q,GAAoB,IAAhBD,EAASC,EAATD,UACtC,OAAIA,EAAU3E,OAAS,EACZsV,EAEFG,EAAAA,EAAe7B,IAAI4B,GACjBA,EAASE,WAAW,SAxBS,CACxCtH,KAAM,SACNzF,UAAW,IACXC,QAAoB,IAsBajE,EAAU,GAtBnB,EAAI9B,KAAKgG,KAAK,KAAO,GAC7CS,UAAW,IAsBD+L,EAEHjS,CACX,E,SC1BMuS,EAAe,SAACrU,EAAKrB,GAEvB,MAAY,WAARqB,MAKiB,kBAAVrB,IAAsBoD,MAAMC,QAAQrD,OAE1B,kBAAVA,IACN2V,EAAAA,EAAQC,KAAK5V,IAAoB,MAAVA,GACvBA,EAAMyV,WAAW,SAK1B,E,8BCzBA,SAASI,EAAO7V,GACZ,MAAqB,kBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,IAAiB8V,EAAAA,EAAAA,GAAkB9V,QAD7D,CAGT,C,cCEM+V,EAAqB,SAACrC,EAAW1T,EAAOd,GAA4B,IAApB8W,EAAUlW,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChE,OAAO,SAAC8O,GACJ,IAAMqH,GAAkBC,EAAAA,EAAAA,GAAmBF,EAAYtC,IAAc,CAAC,EAMhE5F,EAAQmI,EAAgBnI,OAASkI,EAAWlI,OAAS,EAK3DqI,EAAsBH,EAAhB7F,QAAAA,OAAO,IAAAgG,EAAG,EAACA,EACjBhG,IAAoB7I,EAAAA,EAAAA,GAAsBwG,GAC1C,IAAMpJ,ECtBd,SAAsB1E,EAAO0T,EAAWxU,EAAQ8W,GAC5C,IACItR,EADE0R,EAAqBV,EAAahC,EAAWxU,GAG/CwF,EADAtB,MAAMC,QAAQnE,IACLoQ,EAAAA,EAAAA,GAAOpQ,GAGJ,CAAC,KAAMA,GAKvB,IAHA,IAAMmX,OAAoC7R,IAApBwR,EAAWM,KAAqBN,EAAWM,KAAOtW,EAAMhB,MAC1EuX,OAA0B/R,EACxBgS,EAAsB,GACnBlV,EAAI,EAAGA,EAAIoD,EAAU3E,OAAQuB,IAIb,OAAjBoD,EAAUpD,KACVoD,EAAUpD,GAAW,IAANA,EAAU+U,EAAgB3R,EAAUpD,EAAI,IAEvDuU,EAAOnR,EAAUpD,KACjBkV,EAAoB5V,KAAKU,GAGD,kBAAjBoD,EAAUpD,IACA,SAAjBoD,EAAUpD,IACO,MAAjBoD,EAAUpD,KACViV,EAA0B7R,EAAUpD,IAG5C,GAAI8U,GACAI,EAAoBzW,QACpBwW,EACA,IAAK,IAAIjV,EAAI,EAAGA,EAAIkV,EAAoBzW,OAAQuB,IAE5CoD,EADc8R,EAAoBlV,KACfmV,EAAAA,EAAAA,GAAkB/C,EAAW6C,GAGxD,OAAO7R,CACX,CDhB0BgS,CAAa1W,EAAO0T,EAAWxU,EAAQ+W,GAMnDU,EAAiBjS,EAAU,GAC3BkS,EAAiBlS,EAAUA,EAAU3E,OAAS,GAC9C8W,EAAqBnB,EAAahC,EAAWiD,GAC7CP,EAAqBV,EAAahC,EAAWkD,IACnDvP,EAAAA,EAAAA,GAAQwP,IAAuBT,EAAoB,6BAAF3R,OAA+BiP,EAAS,WAAAjP,OAAUkS,EAAc,UAAAlS,OAASmS,EAAc,OAAAnS,OAAMkS,EAAc,+DAAAlS,OAA8DkS,EAAc,8BAAAlS,OAA6BmS,EAAc,+BACnR,IAAI5N,GAAOU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACPhF,UAAAA,EACAwC,SAAUlH,EAAM8W,cAChB3T,KAAM,WACH8S,GAAe,IAClBnI,OAAQqC,EACRtB,SAAU,SAACpD,GACPzL,EAAMqS,IAAI5G,GACVwK,EAAgBpH,UAAYoH,EAAgBpH,SAASpD,EACzD,EACAmD,WAAY,WACRA,IACAqH,EAAgBrH,YAAcqH,EAAgBrH,YAClD,IAuBJ,IAjBKmI,EAAAA,EAAAA,GAAoBd,KACrBjN,GAAOU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAV,GACAsM,EAAqB5B,EAAW1K,KAQvCA,EAAQjE,WACRiE,EAAQjE,UAAWuC,EAAAA,EAAAA,GAAsB0B,EAAQjE,WAEjDiE,EAAQuF,cACRvF,EAAQuF,aAAcjH,EAAAA,EAAAA,GAAsB0B,EAAQuF,eAEnDsI,IACAT,GACDxD,IACyB,IAAzBqD,EAAgB9H,KAKhB,OE9EZ,SAA+BxJ,GAA8C,IAA3CD,EAASC,EAATD,UAAWoJ,EAAKnJ,EAALmJ,MAAOe,EAAQlK,EAARkK,SAAUD,EAAUjK,EAAViK,WACpDoI,EAAW,WAUb,OATAnI,GAAYA,EAASnK,EAAUA,EAAU3E,OAAS,IAClD6O,GAAcA,IAQP,CACHuC,KAAM,EACNrC,MAAO,EACP/J,SAAU,EACVgM,KAAO3O,EAAAA,EACPkP,MAAQlP,EAAAA,EACRsK,KAAOtK,EAAAA,EACP6O,KAAM,SAAC/B,GAEH,OADAA,IACOD,QAAQC,SACnB,EACA4B,OAAS1O,EAAAA,EACTmP,SAAWnP,EAAAA,EAEnB,EACA,OAAO0L,GACDP,EAAAA,EAAAA,GAAa,CACX7I,UAAW,CAAC,EAAG,GACfK,SAAU,EACV+I,MAAAA,EACAc,WAAYoI,IAEdA,GACV,CF4CmBC,CAAuBrE,GAA6BlJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChDV,GAAO,IAAE8E,MAAO,IACrB9E,GAKV,GAAIhJ,EAAMyU,OACNzU,EAAMyU,MAAMtO,mBAAmB+Q,cAC9BlX,EAAMyU,MAAM0C,WAAWtI,SAAU,CAClC,IAAMuI,EAAuB3D,EAA2BzT,EAAO0T,EAAW1K,GAC1E,GAAIoO,EACA,OAAOA,CACf,CAIA,OAAO7J,EAAAA,EAAAA,GAAavE,EACxB,CACJ,C,mGGjGMqO,EAA+B,SAAUC,E,QAAAA,GADjB,kB,uECgB9B,SAASC,EAAczF,EAAe1N,GAA0D,IAAA8O,EAAApT,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAC0X,EAAAtE,EAA1CpF,MAAAA,OAAK,IAAA0J,EAAG,EAACA,EAAEvF,EAAkBiB,EAAlBjB,mBAAoB9D,EAAI+E,EAAJ/E,KAC/EsJ,EAAsF3F,EAAc4F,qBAAqBtT,GAAWuT,EAAAF,EAA9HzB,WAAAA,OAAU,IAAA2B,EAAG7F,EAAcwD,uBAAsBqC,EAAEC,EAAaH,EAAbG,cAAkB1Y,GAAMgC,EAAAA,EAAAA,GAAAuW,EAAAnO,GAC3EuO,EAAa/F,EAAcgG,SAAS,cACtC7F,IACA+D,EAAa/D,GACjB,IAAMC,EAAa,GACb6F,EAAqB5J,GACvB2D,EAAckG,gBACdlG,EAAckG,eAAeC,WAAW9J,GAAM+J,EAAA,SAAA7W,GAE9C,IAAMrB,EAAQ8R,EAAcgG,SAASzW,GAC/B8W,EAAcjZ,EAAOmC,GAC3B,IAAKrB,QACewE,IAAhB2T,GACCJ,GAnBb,SAA6BpT,EAAoCtD,GAAK,IAAtC+W,EAAazT,EAAbyT,cAAeC,EAAc1T,EAAd0T,eACrCC,EAAcF,EAAc3Y,eAAe4B,KAAgC,IAAxBgX,EAAehX,GAExE,OADAgX,EAAehX,IAAO,EACfiX,CACX,CAgBgBC,CAAqBR,EAAoB1W,GAAO,iBAGxD,IAAM4U,GAAevM,EAAAA,EAAAA,GAAA,CACjBoE,MAAAA,EACAqC,QAAS,GACN6F,GAMP,GAAIwC,OAAOC,0BAA4BzY,EAAM0Y,YAAa,CACtD,IAAMC,EAAW7G,EAAcqF,WAAWE,GACtCsB,IACA1C,EAAgB9F,QAAUqI,OAAOC,wBAAwBE,EAAUtX,EAAKrB,EAAOyM,EAAAA,IAC/EwJ,EAAgBvB,WAAY,EAEpC,CACA1U,EAAMwM,OAAMuJ,EAAAA,EAAAA,GAAmB1U,EAAKrB,EAAOmY,EAAarG,EAAc8G,oBAAsBpD,EAAAA,EAAe7B,IAAItS,GACzG,CAAE8M,MAAM,GACR8H,IACN,IAAMjC,EAAYhU,EAAMgU,WACpB6E,EAAAA,EAAAA,GAAwBhB,KACxBA,EAAW9F,IAAI1Q,GACf2S,EAAU/C,MAAK,kBAAM4G,EAAWiB,OAAOzX,EAAI,KAE/C6Q,EAAWtR,KAAKoT,EACpB,EAlCA,IAAK,IAAM3S,KAAOnC,EAAMgZ,EAAA7W,GAwCxB,OALIuW,GACA3I,QAAQmD,IAAIF,GAAYjB,MAAK,WACzB2G,IAAiBmB,EAAAA,EAAAA,IAAUjH,EAAe8F,EAC9C,IAEG1F,CACX,C,cCjEA,SAAS8G,EAAelH,EAAemH,GAAuB,IAAdjQ,EAAOlJ,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjDoZ,GAAWC,EAAAA,EAAAA,GAAerH,EAAemH,EAASjQ,EAAQoQ,QACgBC,GAAdH,GAAY,CAAC,GAAzElD,WAAAA,OAAU,IAAAqD,EAAGvH,EAAcwD,wBAA0B,CAAC,EAAC+D,EACzDrQ,EAAQiJ,qBACR+D,EAAahN,EAAQiJ,oBAMzB,IAAMqH,EAAeJ,EACf,kBAAMjK,QAAQmD,IAAImF,EAAczF,EAAeoH,EAAUlQ,GAAS,EAClE,kBAAMiG,QAAQC,SAAS,EAKvBqK,EAAqBzH,EAAc0H,iBAAmB1H,EAAc0H,gBAAgBC,KACpF,WAAsB,IAArBC,EAAY5Z,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,EACd6Z,EAAkE3D,EAAU4D,EAAAD,EAApEE,cAAAA,OAAa,IAAAD,EAAG,EAACA,EAAEE,EAAeH,EAAfG,gBAAiBC,EAAgBJ,EAAhBI,iBAC5C,OAkBZ,SAAyBjI,EAAemH,GAAgF,IAAvEY,EAAa/Z,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,EAAGga,EAAeha,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,EAAGia,EAAgBja,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,EAAGkJ,EAAOlJ,UAAAC,OAAA,EAAAD,UAAA,QAAA0E,EAC5G0N,EAAa,GACb8H,GAAsBlI,EAAc0H,gBAAgBC,KAAO,GAAKK,EAChEG,EAA+C,IAArBF,EAC1B,WAAM,OAAJja,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,GAAUga,CAAe,EAC9B,WAAM,OAAKE,GAATla,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,GAA+Bga,CAAe,EAUzD,OATA1W,MAAMkT,KAAKxE,EAAc0H,iBACpBU,KAAKC,GACLrZ,SAAQ,SAACsZ,EAAO9Y,GACjB8Y,EAAMC,OAAO,iBAAkBpB,GAC/B/G,EAAWtR,KAAKoY,EAAeoB,EAAOnB,GAAOvP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtCV,GAAO,IACV8E,MAAO+L,EAAgBI,EAAwB3Y,MAChD2P,MAAK,kBAAMmJ,EAAMC,OAAO,oBAAqBpB,EAAQ,IAC5D,IACOhK,QAAQmD,IAAIF,EACvB,CAlCmBoI,CAAgBxI,EAAemH,EAASY,EAAgBH,EAAcI,EAAiBC,EAAkB/Q,EACpH,EACE,kBAAMiG,QAAQC,SAAS,EAKrBqL,EAASvE,EAATuE,KACR,GAAIA,EAAM,CACN,IAAArH,EAA+B,mBAATqH,EAChB,CAACjB,EAAcC,GACf,CAACA,EAAoBD,GAAakB,GAAAjW,EAAAA,EAAAA,GAAA2O,EAAA,GAFjCuH,EAAKD,EAAA,GAAEE,EAAIF,EAAA,GAGlB,OAAOC,IAAQxJ,MAAK,kBAAMyJ,GAAM,GACpC,CAEI,OAAOzL,QAAQmD,IAAI,CAACkH,IAAgBC,EAAmBvQ,EAAQ8E,QAEvE,CAkBA,SAASqM,EAAgBtS,EAAGC,GACxB,OAAOD,EAAE8S,iBAAiB7S,EAC9B,CCxDA,SAASqK,EAAqBL,EAAe1N,GAA0B,IAE/D4P,EAFiDhL,EAAOlJ,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAgS,EAAcuI,OAAO,iBAAkBjW,GAEnChB,MAAMC,QAAQe,GAAa,CAC3B,IAAM8N,EAAa9N,EAAWgB,KAAI,SAAC6T,GAAO,OAAKD,EAAelH,EAAemH,EAASjQ,EAAQ,IAC9FgL,EAAY/E,QAAQmD,IAAIF,EAC5B,MACK,GAA0B,kBAAf9N,EACZ4P,EAAYgF,EAAelH,EAAe1N,EAAY4E,OAErD,CACD,IAAM4R,EAA2C,oBAAfxW,GAC5B+U,EAAAA,EAAAA,GAAerH,EAAe1N,EAAY4E,EAAQoQ,QAClDhV,EACN4P,EAAY/E,QAAQmD,IAAImF,EAAczF,EAAe8I,EAAoB5R,GAC7E,CACA,OAAOgL,EAAU/C,MAAK,kBAAMa,EAAcuI,OAAO,oBAAqBjW,EAAW,GACrF,C,sDCrBA,IAAMyW,EAAoB,SAACpP,GACvB,OAAOrI,MAAMC,QAAQoI,EACzB,C,yNCGA,SAASsL,EAAmBpS,GAAOA,EAAJ4V,KAAmB5V,EAAbmJ,MAA4BnJ,EAAbkV,cAA8BlV,EAAfmV,gBAAiCnV,EAAhBoV,iBAAwBpV,EAAN0J,OAAkB1J,EAAV8J,WAAuB9J,EAAX4J,YAAiB5J,EAAJ2R,KAAa3R,EAAPwL,QAA0B,IAAd6F,GAAU9U,EAAAA,EAAAA,GAAAyD,EAAA2E,GAC/J,QAAS/J,OAAOgB,KAAKyV,GAAYjW,MACrC,CACA,SAASmW,EAAmBF,EAAY3U,GACpC,OAAO2U,EAAW3U,IAAQ2U,EAAoB,SAAKA,CACvD,C,2DCLM8E,GAAsBC,E,OAAAA,eAAc,CACtCC,mBAAoB,SAAC/W,GAAC,OAAKA,CAAC,EAC5BgX,UAAU,EACVC,cAAe,S,gICLbrX,EAAS,SAACI,GAAC,OAAK,EAAIrB,KAAKuH,IAAIvH,KAAKuY,KAAKlX,GAAG,EAC1CF,GAAUP,EAAAA,EAAAA,GAAcK,GACxBC,GAAYJ,EAAAA,EAAAA,GAAaK,E,uDCH/B,IAAML,EAAe,SAACmB,GAAM,OAAK,SAACZ,GAAC,OAAKA,GAAK,GAAMY,EAAO,EAAIZ,GAAK,GAAK,EAAIY,EAAO,GAAK,EAAIZ,KAAO,CAAC,E,uDCApG,IAAMT,EAAgB,SAACqB,GAAM,OAAK,SAACZ,GAAC,OAAK,EAAIY,EAAO,EAAIZ,EAAE,E,kKCFpDmX,EAAK,WACP,SAAAA,KAAcC,EAAAA,EAAAA,GAAA,KAAAD,GACVlb,KAAKob,MAAQ,GACbpb,KAAKqb,UAAY,IAAI3J,GACzB,CAkBC,OAlBA4J,EAAAA,EAAAA,GAAAJ,EAAA,EAAA/Z,IAAA,MAAArB,MACD,SAAIyb,GACA,IAAKvb,KAAKqb,UAAU5H,IAAI8H,GAGpB,OAFAvb,KAAKqb,UAAUxJ,IAAI0J,GACnBvb,KAAKob,MAAM1a,KAAK6a,IACT,CAEf,GAAC,CAAApa,IAAA,SAAArB,MACD,SAAOyb,GACH,IAAMC,EAAQxb,KAAKob,MAAM9Z,QAAQia,IAClB,IAAXC,IACAxb,KAAKob,MAAMzV,OAAO6V,EAAO,GACzBxb,KAAKqb,UAAUvJ,OAAOyJ,GAE9B,GAAC,CAAApa,IAAA,QAAArB,MACD,WACIE,KAAKob,MAAMvb,OAAS,EACpBG,KAAKqb,UAAUI,OACnB,KAACP,CAAA,CAtBM,GCEX,IAAMQ,EAAa,CACf,UACA,OACA,SACA,YACA,SACA,cCLJ,IAAAC,EDQA,SAA6BC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EAClB5W,EAAQ,CACVuC,MAAO,EACP2E,UAAW,EACXO,cAAc,GAEZoP,EAAQN,EAAWO,QAAO,SAACC,EAAK/a,GAElC,OADA+a,EAAI/a,GDIZ,SAA0B2a,GAKtB,IAAIK,EAAY,IAAIjB,EAChBkB,EAAY,IAAIlB,EAChBmB,EAAW,EAKXzP,GAAe,EACf0P,GAAiB,EAIfC,EAAc,IAAIC,QAClBC,EAAO,CAITC,SAAU,SAACvJ,GAAmD,IACpDwJ,EADuC/c,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,IAAAA,UAAA,IACNgN,EACjCgQ,EAAQD,EAAoBR,EAAYC,EAO9C,OAT0Bxc,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,IAAAA,UAAA,IAItB2c,EAAY1K,IAAIsB,GAChByJ,EAAM/K,IAAIsB,IAAawJ,GAAqB/P,IAE5CyP,EAAWF,EAAUf,MAAMvb,QAExBsT,CACX,EAIAvC,OAAQ,SAACuC,GACLiJ,EAAUxD,OAAOzF,GACjBoJ,EAAYzK,OAAOqB,EACvB,EAIAoI,QAAS,SAAC5O,GAMN,GAAIC,EACA0P,GAAiB,MADrB,CAIA1P,GAAe,EAEf,IAAAnI,EADyB,CAAC2X,EAAWD,GAKrC,GALCA,EAAS1X,EAAA,IAAE2X,EAAS3X,EAAA,IAEXgX,QAEVY,EAAWF,EAAUf,MAAMvb,OAEvB,IAAK,IAAIuB,EAAI,EAAGA,EAAIib,EAAUjb,IAAK,CAC/B,IAAM+R,EAAWgJ,EAAUf,MAAMha,GACjC+R,EAASxG,GACL4P,EAAY9I,IAAIN,KAChBsJ,EAAKC,SAASvJ,GACd2I,IAER,CAEJlP,GAAe,EACX0P,IACAA,GAAiB,EACjBG,EAAKlB,QAAQ5O,GApBjB,CAsBJ,GAEJ,OAAO8P,CACX,CCjFmBI,EAAiB,kBAAOf,GAAe,CAAI,IAC/CI,CACX,GAAG,CAAC,GACEY,EAAc,SAACC,GAAM,OAAKf,EAAMe,GAAQxB,QAAQpW,EAAM,EACtD6X,EAAe,SAAfA,IACF,IAAM3Q,EAAYQ,YAAYH,MAC9BoP,GAAe,EACf3W,EAAMuC,MAAQqU,EACR,IAAO,GACPrZ,KAAKyD,IAAIzD,KAAK2H,IAAIgC,EAAYlH,EAAMkH,UAnB/B,IAmBuD,GAClElH,EAAMkH,UAAYA,EAClBlH,EAAMyH,cAAe,EACrB8O,EAAW9a,QAAQkc,GACnB3X,EAAMyH,cAAe,EACjBkP,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBoB,GAE1B,EAQMN,EAAWhB,EAAWO,QAAO,SAACC,EAAK/a,GACrC,IAAMsb,EAAOT,EAAM7a,GAMnB,OALA+a,EAAI/a,GAAO,SAACoa,GAAkD,IAAzC0B,EAASrd,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,IAAAA,UAAA,GAAUsd,EAAStd,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,IAAAA,UAAA,GAG7C,OAFKkc,IATTA,GAAe,EACfC,GAAoB,EACf5W,EAAMyH,cACPgP,EAAkBoB,IAQXP,EAAKC,SAASnB,EAAS0B,EAAWC,EAC7C,EACOhB,CACX,GAAG,CAAC,GAEJ,MAAO,CAAEQ,SAAAA,EAAU9L,OADJ,SAAC2K,GAAO,OAAKG,EAAW9a,SAAQ,SAACO,GAAG,OAAK6a,EAAM7a,GAAKyP,OAAO2K,EAAQ,GAAC,EACxDpW,MAAAA,EAAO6W,MAAAA,EACtC,CCtD2EmB,CAAqD,qBAA1BC,sBAAwCA,sBAAwBlb,EAAAA,GAAM,GAA1JqK,EAAKoP,EAAfe,SAAyBjQ,EAAWkP,EAAnB/K,OAA4BjE,EAASgP,EAAhBxW,MAAkB6W,EAAKL,EAALK,K,yFCD1DqB,GAAgBxC,EAAAA,EAAAA,eAAc,CAAC,GCG/ByC,GAAkBzC,EAAAA,EAAAA,eAAc,M,UCHhC0C,GAAc1C,EAAAA,EAAAA,eAAc,CAAE2C,QAAQ,ICF5C,SAASC,EAAYC,GACjB,MAAuB,kBAARA,GACXre,OAAOC,UAAUC,eAAeC,KAAKke,EAAK,UAClD,CCAA,SAASC,EAAepS,GACpB,MAAoB,kBAANA,GAAkBrI,MAAMC,QAAQoI,EAClD,CCLA,SAASqS,EAAoBrS,GACzB,MAAoB,kBAANA,GAAqC,oBAAZA,EAAEe,KAC7C,CCFA,IAAMuR,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,WAASvZ,OAAKsZ,GCLpC,SAASE,EAAsBC,GAC3B,OAAQJ,EAAoBI,EAAM9J,UAC9B4J,EAAa/U,MAAK,SAACkV,GAAI,OAAKN,EAAeK,EAAMC,GAAM,GAC/D,CACA,SAASC,EAAcF,GACnB,OAAOxN,QAAQuN,EAAsBC,IAAUA,EAAMG,SACzD,CCNA,SAASC,EAAuBJ,GAC5B,IAAAK,ECFJ,SAAgCL,EAAOM,GACnC,GAAIP,EAAsBC,GAAQ,CAC9B,IAAQO,EAAqBP,EAArBO,QAASrK,EAAY8J,EAAZ9J,QACjB,MAAO,CACHqK,SAAqB,IAAZA,GAAqBZ,EAAeY,GACvCA,OACAja,EACN4P,QAASyJ,EAAezJ,GAAWA,OAAU5P,EAErD,CACA,OAAyB,IAAlB0Z,EAAMQ,QAAoBF,EAAU,CAAC,CAChD,CDTiCG,CAAuBT,GAAOU,EAAAA,EAAAA,YAAWrB,IAA9DkB,EAAOF,EAAPE,QAASrK,EAAOmK,EAAPnK,QACjB,OAAOyK,EAAAA,EAAAA,UAAQ,iBAAO,CAAEJ,QAAAA,EAASrK,QAAAA,EAAS,GAAG,CAAC0K,EAA0BL,GAAUK,EAA0B1K,IAChH,CACA,SAAS0K,EAA0BC,GAC/B,OAAO3b,MAAMC,QAAQ0b,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,IAAME,EAAe,CACjBjL,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJkL,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAAExH,EAAA,SAAA7W,GAE1Bqe,EAAmBre,GAAO,CACtBse,UAAW,SAACzB,GAAK,OAAKe,EAAa5d,GAAK4H,MAAK,SAACkV,GAAI,QAAOD,EAAMC,EAAK,GAAC,EAE7E,EAJA,IAAK,IAAM9c,KAAO4d,EAAY/G,EAAA7W,G,cCnBxBue,GAAqB7E,EAAAA,EAAAA,eAAc,CAAC,GCGpC8E,GAA2B9E,EAAAA,EAAAA,eAAc,CAAC,GCL1C+E,EAAwBC,OAAOC,IAAI,yBCuBzC,SAASC,EAAqBtb,GAAoF,IAAjFub,EAAiBvb,EAAjBub,kBAAmBC,EAAmBxb,EAAnBwb,oBAAqBC,EAASzb,EAATyb,UAAWC,EAAc1b,EAAd0b,eAAgBC,EAAS3b,EAAT2b,UAChGJ,GCtBJ,SAAsBK,GAClB,IAAK,IAAMlf,KAAOkf,EACdb,EAAmBre,IAAIqI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBgW,EAAmBre,IACnBkf,EAASlf,GAGxB,CDeyBmf,CAAaN,GA2ClC,IAAMO,GAAsBC,EAAAA,EAAAA,aA1C5B,SAAyBxC,EAAOyC,GAK5B,IAAIC,EACEC,GAAcnX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACbkV,EAAAA,EAAAA,YAAW9D,EAAAA,IACXoD,GAAK,IACR4C,SAAUC,EAAY7C,KAElBjD,EAAa4F,EAAb5F,SACFuD,EAAUF,EAAuBJ,GACjC8C,EAAcX,EAAenC,EAAOjD,GAC1C,IAAKA,GAAYgG,EAAAA,EAAW,CAOxBzC,EAAQ1M,cEvCpB,SAA0BwO,EAAWU,EAAa9C,EAAOiC,GACrD,IAAuBe,GAAWtC,EAAAA,EAAAA,YAAWrB,GAArCzL,cACFqP,GAAcvC,EAAAA,EAAAA,YAAWnB,GACzB2D,GAAkBxC,EAAAA,EAAAA,YAAWpB,GAC7B6D,GAAsBzC,EAAAA,EAAAA,YAAW9D,EAAAA,GAAqBI,cACtDoG,GAAmBC,EAAAA,EAAAA,UAIzBpB,EAAsBA,GAAuBgB,EAAYK,UACpDF,EAAiBnb,SAAWga,IAC7BmB,EAAiBnb,QAAUga,EAAoBG,EAAW,CACtDU,YAAAA,EACAE,OAAAA,EACAhD,MAAAA,EACAkD,gBAAAA,EACAK,wBAAuBL,IACW,IAA5BA,EAAgB3C,QAEtB4C,oBAAAA,KAGR,IAAMvP,EAAgBwP,EAAiBnb,SACvCub,EAAAA,EAAAA,qBAAmB,WACf5P,GAAiBA,EAAczF,OAAO6R,EAAOkD,EACjD,IAKA,IAAMO,GAAaJ,EAAAA,EAAAA,QAAO7Q,QAAQ8H,OAAOC,0BAkCzC,OAjCA9F,EAAAA,EAAAA,IAA0B,WACjBb,IAELA,EAAc8P,SAWVD,EAAWxb,SAAW2L,EAAckG,gBACpClG,EAAckG,eAAe6J,iBAErC,KACAC,EAAAA,EAAAA,YAAU,WACDhQ,IAELA,EAAciQ,kBACTJ,EAAWxb,SAAW2L,EAAckG,gBACrClG,EAAckG,eAAe6J,iBAOjCrJ,OAAOC,6BAA0BjU,EACjCmd,EAAWxb,SAAU,EACzB,IACO2L,CACX,CF1BoCkQ,CAAiB1B,EAAWU,EAAaH,EAAgBV,GAKjF,IAAM8B,GAA2BrD,EAAAA,EAAAA,YAAWiB,GACtCqC,GAAWtD,EAAAA,EAAAA,YAAWnB,GAAaC,OACrCc,EAAQ1M,gBACR8O,EAAgBpC,EAAQ1M,cAAc0O,aAEtCK,EAAgBqB,EAAUhC,EAAmB+B,GAErD,CAKA,OAAQE,EAAAA,cAAoB5E,EAAc6E,SAAU,CAAEpiB,MAAOwe,GACzDoC,GAAiBpC,EAAQ1M,cAAiBqQ,EAAAA,cAAoBvB,GAAalX,EAAAA,EAAAA,GAAA,CAAIoI,cAAe0M,EAAQ1M,eAAkB+O,IAAqB,KAC7IT,EAAUE,EAAWpC,EG1DjC,SAAsB8C,EAAalP,EAAe6O,GAC9C,OAAO0B,EAAAA,EAAAA,cAAY,SAACC,GAChBA,GAAYtB,EAAYxO,OAASwO,EAAYxO,MAAM8P,GAC/CxQ,IACAwQ,EACMxQ,EAAcU,MAAM8P,GACpBxQ,EAAcyQ,WAEpB5B,IAC2B,oBAAhBA,EACPA,EAAY2B,GAEP3E,EAAYgD,KACjBA,EAAYxa,QAAUmc,GAGlC,GAMA,CAACxQ,GACL,CHmCwC0Q,CAAaxB,EAAaxC,EAAQ1M,cAAe6O,GAAcK,EAAa/F,EAAUuD,EAAQ1M,eAClI,IAGA,OADA2O,EAAoBX,GAAyBQ,EACtCG,CACX,CACA,SAASM,EAAW7N,GAAe,IAAZ4N,EAAQ5N,EAAR4N,SACb2B,GAAgB7D,EAAAA,EAAAA,YAAWgB,GAAoB8C,GACrD,OAAOD,QAA8Bje,IAAbsc,EAClB2B,EAAgB,IAAM3B,EACtBA,CACV,CI5DA,SAAS6B,EAAkBC,GACvB,SAASxJ,EAAOkH,GACZ,OAAOL,EAAsB2C,EAAatC,EADQxgB,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,CAAC,GAE1D,CACA,GAAqB,qBAAV+iB,MACP,OAAOzJ,EAMX,IAAM0J,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMzJ,EAAQ,CAMrBpa,IAAK,SAACgkB,EAAS3hB,GAOX,OAHKyhB,EAAenP,IAAItS,IACpByhB,EAAezQ,IAAIhR,EAAK+X,EAAO/X,IAE5ByhB,EAAe9jB,IAAIqC,EAC9B,GAER,CCxCA,IAAM4hB,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAe5C,GACpB,MAKqB,kBAAdA,IAIHA,EAAU6C,SAAS,SAOvBF,EAAqBzhB,QAAQ8e,IAAc,GAIvC,QAAQ1K,KAAK0K,GAIrB,CC3BA,IAAM8C,EAAkB,CAAC,E,cCGzB,SAASC,EAAoBhiB,EAAGsD,GAAwB,IAApB8a,EAAM9a,EAAN8a,OAAQqB,EAAQnc,EAARmc,SACxC,OAAQtL,EAAAA,EAAe7B,IAAItS,IACvBA,EAAIoU,WAAW,YACbgK,QAAuBjb,IAAbsc,OACLsC,EAAgB/hB,IAAgB,YAARA,EACvC,C,cCNMiiB,EAAiB,CACnB/gB,EAAG,aACHghB,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBC,EAAAA,EAAmB5jB,O,cCLnC6jB,EAAiB,SAAC5jB,EAAOmO,GAC3B,OAAOA,GAAyB,kBAAVnO,EAChBmO,EAAK0V,UAAU7jB,GACfA,CACV,E,UCDA,SAAS8jB,EAAgBze,EAAO0e,EAAc/a,EAASgb,GACnD,IAAQC,EAA4C5e,EAA5C4e,MAAOC,EAAqC7e,EAArC6e,KAAML,EAA+Bxe,EAA/Bwe,UAAWM,EAAoB9e,EAApB8e,gBAE5BC,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAMjjB,KAAO0iB,EAAc,CAC5B,IAAM/jB,EAAQ+jB,EAAa1iB,GAI3B,IAAIkjB,EAAAA,EAAAA,IAAkBljB,GAClB6iB,EAAK7iB,GAAOrB,MADhB,CAKA,IAAMwkB,EAAYC,EAAAA,EAAiBpjB,GAC7BqjB,EAAcd,EAAe5jB,EAAOwkB,GAC1C,GAAIhP,EAAAA,EAAe7B,IAAItS,GAAM,CAKzB,GAHA+iB,GAAe,EACfP,EAAUxiB,GAAOqjB,GAEZJ,EACD,SAEAtkB,KAAWwkB,EAAUG,SAAW,KAChCL,GAAkB,EAC1B,MACSjjB,EAAIoU,WAAW,WAEpB4O,GAAqB,EACrBF,EAAgB9iB,GAAOqjB,GAGvBT,EAAM5iB,GAAOqjB,CArBjB,CAuBJ,CAiBA,GAhBKX,EAAaF,YACVO,GAAgBJ,EAChBC,EAAMJ,UFtClB,SAAwBA,EAASlf,EAAqEigB,EAAoBZ,GAOtH,IAPyI,IAAAa,EAAAlgB,EAAxGmgB,2BAAAA,OAA0B,IAAAD,GAAOA,EAAAE,EAAApgB,EAAEqgB,mBAAAA,OAAkB,IAAAD,GAAOA,EAEzFE,EAAkB,GAKb3jB,EAAI,EAAGA,EAAIoiB,EAAepiB,IAAK,CACpC,IAAMD,EAAMsiB,EAAAA,EAAmBriB,GAC/B,QAAuBkD,IAAnBqf,EAAUxiB,GAAoB,CAC9B,IAAM6jB,EAAgB5B,EAAejiB,IAAQA,EAC7C4jB,GAAmB,GAAJxgB,OAAOygB,EAAa,KAAAzgB,OAAIof,EAAUxiB,GAAI,KACzD,CACJ,CAaA,OAZIyjB,IAA+BjB,EAAUL,IACzCyB,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9BnB,EACAiB,EAAkBjB,EAAkBH,EAAWe,EAAqB,GAAKK,GAEpED,GAAsBJ,IAC3BK,EAAkB,QAEfA,CACX,CEW8BG,CAAe/f,EAAMwe,UAAW7a,EAASsb,EAAiBN,GAEvEC,EAAMJ,YAKXI,EAAMJ,UAAY,SAOtBQ,EAAoB,CACpB,IAAAgB,EAA2DlB,EAAnDmB,QAAAA,OAAO,IAAAD,EAAG,MAAKA,EAAAE,EAAoCpB,EAAlCqB,QAAAA,OAAO,IAAAD,EAAG,MAAKA,EAAAE,EAAmBtB,EAAjBuB,QAAAA,OAAO,IAAAD,EAAG,EAACA,EACrDxB,EAAME,gBAAkB,GAAH1f,OAAM6gB,EAAO,KAAA7gB,OAAI+gB,EAAO,KAAA/gB,OAAIihB,EACrD,CACJ,CCvEA,IAAMC,EAAwB,WAAH,MAAU,CACjC1B,MAAO,CAAC,EACRJ,UAAW,CAAC,EACZM,gBAAiB,CAAC,EAClBD,KAAM,CAAC,EACV,ECCD,SAAS0B,EAAkB1mB,EAAQiC,EAAQ+c,GACvC,IAAK,IAAM7c,KAAOF,GACT0kB,EAAAA,EAAAA,GAAc1kB,EAAOE,KAAUgiB,EAAoBhiB,EAAK6c,KACzDhf,EAAOmC,GAAOF,EAAOE,GAGjC,CAQA,SAASykB,EAAS5H,EAAO8C,EAAa/F,GAClC,IACMgJ,EAAQ,CAAC,EAMf,OAFA2B,EAAkB3B,EALA/F,EAAM+F,OAAS,CAAC,EAKE/F,GACpC3e,OAAOwmB,OAAO9B,EAdlB,SAA+Btf,EAAwBqc,EAAa/F,GAAU,IAA5C+I,EAAiBrf,EAAjBqf,kBAC9B,OAAOnF,EAAAA,EAAAA,UAAQ,WACX,IAAMxZ,EAAQsgB,IAEd,OADA7B,EAAgBze,EAAO2b,EAAa,CAAE8D,4BAA6B7J,GAAY+I,GACxEzkB,OAAOwmB,OAAO,CAAC,EAAG1gB,EAAM6e,KAAM7e,EAAM4e,MAC/C,GAAG,CAACjD,GACR,CAQyBgF,CAAuB9H,EAAO8C,EAAa/F,IACzDiD,EAAM+H,gBAAkB/H,EAAM+H,gBAAgBhC,GAASA,CAClE,CACA,SAASiC,EAAahI,EAAO8C,EAAa/F,GAEtC,IAAMkL,EAAY,CAAC,EACblC,EAAQ6B,EAAS5H,EAAO8C,EAAa/F,GAoB3C,OAnBIiD,EAAMiB,OAA+B,IAAvBjB,EAAMkI,eAEpBD,EAAUE,WAAY,EAEtBpC,EAAMqC,WACFrC,EAAMsC,iBACFtC,EAAMuC,mBACF,OAEZvC,EAAMwC,aACa,IAAfvI,EAAMiB,KACA,OAAM,OAAA1a,OACgB,MAAfyZ,EAAMiB,KAAe,IAAM,WAEzB3a,IAAnB0Z,EAAMwI,WACLxI,EAAMyI,OAASzI,EAAM0I,YAAc1I,EAAM2I,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUlC,MAAQA,EACXkC,CACX,CChDA,IAAMW,EAAmB,IAAIlV,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,eACA,aAUJ,SAASmV,EAAkB1lB,GACvB,OAAQA,EAAIoU,WAAW,UAClBpU,EAAIoU,WAAW,SAAmB,cAARpU,GAC3BA,EAAIoU,WAAW,WACfpU,EAAIoU,WAAW,UACfpU,EAAIoU,WAAW,UACfqR,EAAiBnT,IAAItS,EAC7B,CCtDA,IACiC2lB,EAD7BC,EAAgB,SAAC5lB,GAAG,OAAM0lB,EAAkB1lB,EAAI,EAoBpD,KAnBiC2lB,EAyBLE,QAAQ,0BAA0BvC,WArB1DsC,EAAgB,SAAC5lB,GAAG,OAAKA,EAAIoU,WAAW,OAASsR,EAAkB1lB,GAAO2lB,EAAY3lB,EAAI,EAsB9F,CACA,MAAO8lB,IACH,C,wBC7BJ,SAASC,EAAW7d,EAAQ/D,EAAQiU,GAChC,MAAyB,kBAAXlQ,EACRA,EACA8d,EAAAA,GAAGxD,UAAUre,EAASiU,EAAOlQ,EACvC,CCJA,IAAM+d,EAAW,CACb9hB,OAAQ,oBACR+hB,MAAO,oBAELC,GAAY,CACdhiB,OAAQ,mBACR+hB,MAAO,mB,iGCDX,SAASE,GAAcpiB,EAAKV,EAEfqE,EAAS0e,EAAU1D,GAAmB,IAFnB2D,EAAKhjB,EAALgjB,MAAOC,EAAKjjB,EAALijB,MAAOC,EAASljB,EAATkjB,UAAWvC,EAAO3gB,EAAP2gB,QAASE,EAAO7gB,EAAP6gB,QAASsC,EAAUnjB,EAAVmjB,WAAUC,EAAApjB,EAAEqjB,YAAAA,OAAW,IAAAD,EAAG,EAACA,EAAAE,EAAAtjB,EAAEujB,WAAAA,OAAU,IAAAD,EAAG,EAACA,EAQlH,GALAnE,EAAgBze,GADXnE,EAAAA,EAAAA,GAAAyD,EAAA2E,IAC0BN,EAASgb,GAKpC0D,EACIriB,EAAM4e,MAAMkE,UACZ9iB,EAAM+iB,MAAMD,QAAU9iB,EAAM4e,MAAMkE,aAF1C,CAMA9iB,EAAM+iB,MAAQ/iB,EAAM4e,MACpB5e,EAAM4e,MAAQ,CAAC,EACf,IAAQmE,EAA6B/iB,EAA7B+iB,MAAOnE,EAAsB5e,EAAtB4e,MAAOoE,EAAehjB,EAAfgjB,WAKlBD,EAAMvE,YACFwE,IACApE,EAAMJ,UAAYuE,EAAMvE,kBACrBuE,EAAMvE,WAGbwE,SACa7jB,IAAZ8gB,QAAqC9gB,IAAZghB,GAAyBvB,EAAMJ,aACzDI,EAAME,gBFzBd,SAAgCkE,EAAY/C,EAASE,GACjD,IAAM8C,EAAYlB,EAAW9B,EAAS+C,EAAW9lB,EAAG8lB,EAAWE,OACzDC,EAAYpB,EAAW5B,EAAS6C,EAAW9E,EAAG8E,EAAWI,QAC/D,MAAO,GAAPhkB,OAAU6jB,EAAS,KAAA7jB,OAAI+jB,EAC3B,CEqBgCE,CAAuBL,OAAwB7jB,IAAZ8gB,EAAwBA,EAAU,QAAiB9gB,IAAZghB,EAAwBA,EAAU,UAG1HhhB,IAAVmjB,IACAS,EAAM7lB,EAAIolB,QACAnjB,IAAVojB,IACAQ,EAAM7E,EAAIqE,QACIpjB,IAAdqjB,IACAO,EAAMO,MAAQd,QAECrjB,IAAfsjB,GD7BR,SAAsBM,EAAOroB,GAAqD,IAA7C6oB,EAAO9oB,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,EAAG0F,EAAM1F,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,EAAG+oB,IAAW/oB,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,KAAAA,UAAA,GAErEsoB,EAAMN,WAAa,EAGnB,IAAMvnB,EAAOsoB,EAAcvB,EAAWE,GAEtCY,EAAM7nB,EAAKiF,QAAU6hB,EAAAA,GAAGxD,WAAWre,GAEnC,IAAMsiB,EAAaT,EAAAA,GAAGxD,UAAU9jB,GAC1BioB,EAAcX,EAAAA,GAAGxD,UAAU+E,GACjCR,EAAM7nB,EAAKgnB,OAAS,GAAH9iB,OAAMqjB,EAAU,KAAArjB,OAAIujB,EACzC,CCkBQc,CAAaV,EAAON,EAAYE,EAAaE,GAAY,EA3B7D,CA6BJ,CC/CA,IAAMa,GAAuB,WAAH,OAAArf,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBic,KAAuB,IAC1ByC,MAAO,CAAC,GAAC,ECJPV,GAAW,SAACsB,GAAG,MAAoB,kBAARA,GAA0C,QAAtBA,EAAIC,aAAuB,ECMhF,SAASC,GAAYhL,EAAO8C,EAAamI,EAAW7I,GAChD,IAAM8I,GAAcvK,EAAAA,EAAAA,UAAQ,WACxB,IAAMxZ,EAAQ0jB,KAEd,OADAtB,GAAcpiB,EAAO2b,EAAa,CAAE8D,4BAA4B,GAAS4C,GAASpH,GAAYpC,EAAM8F,oBACpGta,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOrE,EAAM+iB,OAAK,IACdnE,OAAKva,EAAAA,EAAAA,GAAA,GAAOrE,EAAM4e,QAE1B,GAAG,CAACjD,IACJ,GAAI9C,EAAM+F,MAAO,CACb,IAAMoF,EAAY,CAAC,EACnBzD,EAAkByD,EAAWnL,EAAM+F,MAAO/F,GAC1CkL,EAAYnF,OAAKva,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ2f,GAAcD,EAAYnF,MACvD,CACA,OAAOmF,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkBzpB,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,IAAAA,UAAA,GAwBvC,OAvBkB,SAACwgB,EAAWpC,EAAON,EAAGjZ,EAAoBsW,GAAa,IAA7B8I,EAAYpf,EAAZof,aAIlCqF,GAHiBlG,EAAe5C,GAChC4I,GACAhD,GAC6BhI,EAAO6F,EAAc9I,EAAUqF,GAC5DkJ,EPoBd,SAAqBtL,EAAOuL,EAAOF,GAC/B,IAAMC,EAAgB,CAAC,EACvB,IAAK,IAAMnoB,KAAO6c,EAQF,WAAR7c,GAA4C,kBAAjB6c,EAAMtZ,SAEjCqiB,EAAc5lB,KACU,IAAvBkoB,GAA+BxC,EAAkB1lB,KAChDooB,IAAU1C,EAAkB1lB,IAE7B6c,EAAiB,WAAK7c,EAAIoU,WAAW,aACtC+T,EAAcnoB,GAAO6c,EAAM7c,IAGnC,OAAOmoB,CACX,COzC8BE,CAAYxL,EAA4B,kBAAdoC,EAAwBiJ,GAClEI,GAAYjgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACX8f,GACAJ,GAAW,IACdxL,IAAAA,IAOIgM,EAAa1L,EAAb0L,SACFC,GAAmBhL,EAAAA,EAAAA,UAAQ,kBAAOgH,EAAAA,EAAAA,GAAc+D,GAAYA,EAAS5qB,MAAQ4qB,CAAQ,GAAG,CAACA,IAC/F,OAAOE,EAAAA,EAAAA,eAAcxJ,GAAS5W,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBigB,GAAY,IACfC,SAAUC,IAElB,CAEJ,C,eChCA,SAASE,GAAW9V,EAAOtP,EAAmBqlB,EAAWC,GAAY,IAAtChG,EAAKtf,EAALsf,MAAOC,EAAIvf,EAAJuf,KAGlC,IAAK,IAAM7iB,KAFX9B,OAAOwmB,OAAO9R,EAAQgQ,MAAOA,EAAOgG,GAAcA,EAAWC,oBAAoBF,IAE/D9F,EACdjQ,EAAQgQ,MAAMkG,YAAY9oB,EAAK6iB,EAAK7iB,GAE5C,CCHA,IAAM+oB,GAAsB,IAAIxY,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASyY,GAAUpW,EAASqW,EAAaC,EAAYN,GAEjD,IAAK,IAAM5oB,KADX0oB,GAAW9V,EAASqW,OAAa9lB,EAAWylB,GAC1BK,EAAYlC,MAC1BnU,EAAQuW,aAAcJ,GAAoBzW,IAAItS,GAA0BA,GAAnBiW,EAAAA,GAAAA,GAAYjW,GAAYipB,EAAYlC,MAAM/mB,GAEvG,CCNA,SAASopB,GAA4BvM,EAAOwM,GACxC,IAAQzG,EAAU/F,EAAV+F,MACF0G,EAAY,CAAC,EACnB,IAAK,IAAMtpB,KAAO4iB,IACV4B,EAAAA,EAAAA,GAAc5B,EAAM5iB,KACnBqpB,EAAUzG,QAAS4B,EAAAA,EAAAA,GAAc6E,EAAUzG,MAAM5iB,KAClDgiB,EAAoBhiB,EAAK6c,MACzByM,EAAUtpB,GAAO4iB,EAAM5iB,IAG/B,OAAOspB,CACX,CCVA,SAASF,GAA4BvM,EAAOwM,GACxC,IAAMC,EAAYC,GAA8B1M,EAAOwM,GACvD,IAAK,IAAMrpB,KAAO6c,EAAO,CACrB,IAAI2H,EAAAA,EAAAA,GAAc3H,EAAM7c,MAASwkB,EAAAA,EAAAA,GAAc6E,EAAUrpB,IAIrDspB,GAHuD,IAArChH,EAAAA,EAAmBniB,QAAQH,GACvC,OAASA,EAAIwpB,OAAO,GAAGC,cAAgBzpB,EAAI0pB,UAAU,GACrD1pB,GACiB6c,EAAM7c,EAErC,CACA,OAAOspB,CACX,C,oCCPA,SAASK,GAAmBhrB,GACxB,IAAMirB,GAAiBpF,EAAAA,EAAAA,GAAc7lB,GAASA,EAAMhB,MAAQgB,EAC5D,OAAOkrB,EAAAA,GAAAA,GAAcD,GACfA,EAAeE,UACfF,CACV,C,sCCMA,IAAMG,GAAqB,SAACC,GAAM,OAAK,SAACnN,EAAOjD,GAC3C,IAAMuD,GAAUI,EAAAA,EAAAA,YAAWrB,GACrB6D,GAAkBxC,EAAAA,EAAAA,YAAWpB,GAC7B8N,EAAO,WAAH,OAbd,SAAkB3mB,EAA+DuZ,EAAOM,EAAS4C,GAAiB,IAA7FqJ,EAA2B9lB,EAA3B8lB,4BAA6Bc,EAAiB5mB,EAAjB4mB,kBAAmBC,EAAO7mB,EAAP6mB,QAC3DnmB,EAAQ,CACV0e,aAAc0H,GAAiBvN,EAAOM,EAAS4C,EAAiBqJ,GAChEH,YAAaiB,KAKjB,OAHIC,IACAnmB,EAAMmN,MAAQ,SAAC8P,GAAQ,OAAKkJ,EAAQtN,EAAOoE,EAAUjd,EAAM,GAExDA,CACX,CAIuBqmB,CAAUL,EAAQnN,EAAOM,EAAS4C,EAAgB,EACrE,OAAOnG,EAAWqQ,KAAS5Y,EAAAA,GAAAA,GAAY4Y,EAC3C,CAAC,EACD,SAASG,GAAiBvN,EAAOM,EAAS4C,EAAiBuK,GACvD,IAAM/mB,EAAS,CAAC,EACVgnB,EAAeD,EAAmBzN,EAAO,CAAC,GAChD,IAAK,IAAM7c,KAAOuqB,EACdhnB,EAAOvD,GAAO2pB,GAAmBY,EAAavqB,IAElD,IAAMod,EAAqBP,EAArBO,QAASrK,EAAY8J,EAAZ9J,QACTyX,EAA0B5N,EAAsBC,GAChD4N,EAAkB1N,EAAcF,GAClCM,GACAsN,IACCD,IACiB,IAAlB3N,EAAMQ,eACUla,IAAZia,IACAA,EAAUD,EAAQC,cACNja,IAAZ4P,IACAA,EAAUoK,EAAQpK,UAE1B,IAAI2X,IAA4B3K,IACE,IAA5BA,EAAgB3C,QAGhBuN,GADND,EAA4BA,IAAyC,IAAZtN,GACRrK,EAAUqK,EACvDuN,GACwB,mBAAjBA,IACNlO,EAAoBkO,KACR5oB,MAAMC,QAAQ2oB,GAAgBA,EAAe,CAACA,IACtDlrB,SAAQ,SAACsD,GACV,IAAM8U,GAAW+S,EAAAA,GAAAA,GAAwB/N,EAAO9Z,GAChD,GAAK8U,EAAL,CAEA,IAAQtB,EAAyCsB,EAAzCtB,cAA8B1Y,GAAWga,EAA1BlD,YAAqB9U,EAAAA,EAAAA,GAAKgY,EAAQ5P,KACzD,IAAK,IAAMjI,KAAOnC,EAAQ,CACtB,IAAIiZ,EAAcjZ,EAAOmC,GACzB,GAAI+B,MAAMC,QAAQ8U,GAQdA,EAAcA,EAHA4T,EACR5T,EAAYpY,OAAS,EACrB,GAGU,OAAhBoY,IACAvT,EAAOvD,GAAO8W,EAEtB,CACA,IAAK,IAAM9W,KAAOuW,EACdhT,EAAOvD,GAAOuW,EAAcvW,EAnBtB,CAoBd,IAEJ,OAAOuD,CACX,C,eCtEMsnB,GAAkB,CACpB7L,eAAgB+K,GAAmB,CAC/BX,4BAA6BA,GAC7Bc,kBAAmBxC,GACnByC,QAAS,SAACtN,EAAOoE,EAAQ3d,GAAoC,IAAhC2lB,EAAW3lB,EAAX2lB,YAAavG,EAAYpf,EAAZof,aACtCtX,GAAAA,GAAM0f,MAAK,WACP,IACI7B,EAAYjC,WAEJ,oBADG/F,EAAS8J,QAEV9J,EAAS8J,UACT9J,EAAS+J,uBACvB,CACA,MAAOjsB,GAEHkqB,EAAYjC,WAAa,CACrB9lB,EAAG,EACHghB,EAAG,EACHgF,MAAO,EACPE,OAAQ,EAEhB,CACJ,IACAhc,GAAAA,GAAMmV,QAAO,WACT6F,GAAc6C,EAAavG,EAAc,CAAEe,4BAA4B,GAAS4C,GAASpF,EAASgK,SAAUpO,EAAM8F,mBAClHqG,GAAU/H,EAAUgI,EACxB,GACJ,KC/BFiC,GAAmB,CACrBlM,eAAgB+K,GAAmB,CAC/BX,4BAAAA,GACAc,kBAAmB5F,K,+CCP3B,SAAS6G,GAAYttB,EAAQutB,EAAWC,GAAsC,IAA7B1jB,EAAOlJ,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,CAAE6sB,SAAS,GAElE,OADAztB,EAAO0tB,iBAAiBH,EAAWC,EAAS1jB,GACrC,kBAAM9J,EAAO2tB,oBAAoBJ,EAAWC,EAAQ,CAC/D,CCHA,IAAMI,GAAmB,SAACC,GACtB,MAA0B,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,SAErB,ECbA,SAASC,GAAiBJ,GAA2B,IAApBK,EAASttB,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACHutB,MAAO,CACH9qB,EAAGwqB,EAAMK,EAAY,KACrB7J,EAAGwJ,EAAMK,EAAY,MAGjC,CACA,IAAME,GAAiB,SAACZ,GACpB,OAAO,SAACK,GAAK,OAAKD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,GAAO,CACxF,ECTA,SAASQ,GAAgBruB,EAAQutB,EAAWC,EAAS1jB,GACjD,OAAOwjB,GAAYttB,EAAQutB,EAAWa,GAAeZ,GAAU1jB,EACnE,C,eCLA,SAASwkB,GAAWrP,GAChB,IAAIsP,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAOtP,EAJM,WACbsP,EAAO,IACX,EAMJ,CACJ,CACA,IAAMC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACtC,SAASI,GAAczO,GACnB,IAAIsO,GAAO,EACX,GAAa,MAATtO,EACAsO,EAAOE,UAEN,GAAa,MAATxO,EACLsO,EAAOC,SAEN,CACD,IAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBL,EAAO,WACHI,IACAC,GACJ,GAIID,GACAA,IACAC,GACAA,IAEZ,CACA,OAAOL,CACX,CACA,SAASM,KAGL,IAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,C,IClDMC,GAAO,WACT,SAAAA,EAAYC,IAAM7S,EAAAA,GAAAA,GAAA,KAAA4S,GACd/tB,KAAKiuB,WAAY,EACjBjuB,KAAKguB,KAAOA,CAChB,CACY,OADX1S,EAAAA,GAAAA,GAAAyS,EAAA,EAAA5sB,IAAA,SAAArB,MACD,WAAW,KAACiuB,CAAA,CALH,GCMb,SAASG,GAAcF,EAAMG,GACzB,IAAM5B,EAAY,WAAa4B,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOd,GAAgBW,EAAK/nB,QAASsmB,GAXjB,SAACM,EAAOwB,GACxB,GAAmB,UAAfxB,EAAM5e,OAAoB4f,KAA9B,CAEA,IAAM7P,EAAQgQ,EAAK/W,WACf+W,EAAKlW,gBAAkBkG,EAAMsQ,YAC7BN,EAAKlW,eAAeyW,UAAU,aAAcJ,GAE5CnQ,EAAMoQ,IACN7hB,GAAAA,GAAMJ,QAAO,kBAAM6R,EAAMoQ,GAAcvB,EAAOwB,EAAK,GAN7C,CAQd,GAC6D,CACzD5B,SAAUuB,EAAK/W,WAAWmX,IAElC,CAAC,IACKI,GAAY,SAAAC,IAAAC,EAAAA,GAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAArT,EAAAA,GAAAA,GAAA,KAAAqT,GAAAG,EAAA5uB,MAAA,KAAAH,UAAA,CAID,OAJC0b,EAAAA,GAAAA,GAAAkT,EAAA,EAAArtB,IAAA,QAAArB,MACd,WACIE,KAAKqiB,SAAUwM,EAAAA,GAAAA,GAAKX,GAAcluB,KAAKguB,MAAM,GAAOE,GAAcluB,KAAKguB,MAAM,GACjF,GAAC,CAAA7sB,IAAA,UAAArB,MACD,WAAY,KAAC0uB,CAAA,CAJC,CAAST,ICpBrBe,GAAY,SAAAL,IAAAC,EAAAA,GAAAA,GAAAI,EAAAL,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAE,GACd,SAAAA,IAAc,IAAAC,EAEY,OAFZ5T,EAAAA,GAAAA,GAAA,KAAA2T,IACVC,EAAAJ,EAAA5uB,MAAA,KAASH,YACJuuB,UAAW,EAAMY,CAC1B,CA6Ba,OA7BZzT,EAAAA,GAAAA,GAAAwT,EAAA,EAAA3tB,IAAA,UAAArB,MACD,WACI,IAAIkvB,GAAiB,EAOrB,IACIA,EAAiBhvB,KAAKguB,KAAK/nB,QAAQgpB,QAAQ,iBAC/C,CACA,MAAO/uB,GACH8uB,GAAiB,CACrB,CACKA,GAAmBhvB,KAAKguB,KAAKlW,iBAElC9X,KAAKguB,KAAKlW,eAAeyW,UAAU,cAAc,GACjDvuB,KAAKmuB,UAAW,EACpB,GAAC,CAAAhtB,IAAA,SAAArB,MACD,WACSE,KAAKmuB,UAAanuB,KAAKguB,KAAKlW,iBAEjC9X,KAAKguB,KAAKlW,eAAeyW,UAAU,cAAc,GACjDvuB,KAAKmuB,UAAW,EACpB,GAAC,CAAAhtB,IAAA,QAAArB,MACD,WAAQ,IAAAovB,EAAA,KACJlvB,KAAKqiB,SAAUwM,EAAAA,GAAAA,GAAKvC,GAAYtsB,KAAKguB,KAAK/nB,QAAS,SAAS,kBAAMipB,EAAKC,SAAS,IAAG7C,GAAYtsB,KAAKguB,KAAK/nB,QAAS,QAAQ,kBAAMipB,EAAKE,QAAQ,IACjJ,GAAC,CAAAjuB,IAAA,UAAArB,MACD,WAAY,KAACgvB,CAAA,CAjCC,CAASf,ICGrBsB,GAAgB,SAAhBA,EAAiBrO,EAAQ9G,GAC3B,QAAKA,IAGI8G,IAAW9G,GAITmV,EAAcrO,EAAQ9G,EAAMoV,eAE3C,E,WCPA,SAASC,GAA0BtR,EAAMuO,GACrC,GAAKA,EAAL,CAEA,IAAMgD,EAAwB,IAAIC,aAAa,UAAYxR,GAC3DuO,EAAQgD,EAAuBvC,GAAiBuC,GAFtC,CAGd,CAAC,IACKE,GAAY,SAAAjB,IAAAC,EAAAA,GAAAA,GAAAgB,EAAAjB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAc,GACd,SAAAA,IAAc,IAAAX,EAyDR,OAzDQ5T,EAAAA,GAAAA,GAAA,KAAAuU,IACVX,EAAAJ,EAAA5uB,MAAA,KAASH,YACJ+vB,qBAAuBztB,GAAAA,EAC5B6sB,EAAKa,mBAAqB1tB,GAAAA,EAC1B6sB,EAAKc,0BAA4B3tB,GAAAA,EACjC6sB,EAAKe,kBAAoB,SAACC,EAAYC,GAElC,GADAjB,EAAKa,sBACDb,EAAKkB,WAAT,CAEA,IAAMjS,EAAQ+Q,EAAKf,KAAK/W,WAelBiZ,EAA0B7C,GAAgB/U,OAAQ,aAdhC,SAAC6X,EAAUC,GAC/B,GAAKrB,EAAKsB,gBAAV,CAEA,IAAAC,EAA+BvB,EAAKf,KAAK/W,WAAjCwP,EAAK6J,EAAL7J,MAAO8J,EAAWD,EAAXC,YACfhkB,GAAAA,GAAMJ,QAAO,WAKRkjB,GAAcN,EAAKf,KAAK/nB,QAASkqB,EAASnxB,QAErCynB,GAASA,EAAM0J,EAAUC,GADzBG,GAAeA,EAAYJ,EAAUC,EAE/C,GAVU,CAWd,GACsF,CAAE3D,UAAWzO,EAAMyI,OAASzI,EAAmB,eAC/HwS,EAA8BnD,GAAgB/U,OAAQ,iBAAiB,SAACmY,EAAaC,GAAU,OAAK3B,EAAK4B,YAAYF,EAAaC,EAAW,GAAE,CAAEjE,UAAWzO,EAAMuS,aAAevS,EAAuB,mBAC9M+Q,EAAKa,oBAAqBf,EAAAA,GAAAA,GAAKqB,EAAyBM,GACxDzB,EAAK6B,WAAWb,EAAYC,EAnBlB,CAoBd,EACAjB,EAAK8B,qBAAuB,WACxB,IAmBMC,EAAwBxE,GAAYyC,EAAKf,KAAK/nB,QAAS,WAnBvC,SAAC8qB,GACnB,GAAyB,UAArBA,EAAa5vB,MAAmB4tB,EAAKkB,WAAzC,CAYAlB,EAAKa,qBACLb,EAAKa,mBAAqBtD,GAAYyC,EAAKf,KAAK/nB,QAAS,SAXrC,SAAC+qB,GACM,UAAnBA,EAAW7vB,KAAoB4tB,EAAKsB,iBAExCd,GAA0B,MAAM,SAAC1C,EAAOwB,GACpC,IAAQ5H,EAAUsI,EAAKf,KAAK/W,WAApBwP,MACJA,GACAla,GAAAA,GAAMJ,QAAO,kBAAMsa,EAAMoG,EAAOwB,EAAK,GAE7C,GACJ,IAGAkB,GAA0B,QAAQ,SAAC1C,EAAOwB,GACtCU,EAAK6B,WAAW/D,EAAOwB,EAC3B,GAfU,CAgBd,IAOM4C,EAAqB3E,GAAYyC,EAAKf,KAAK/nB,QAAS,QALvC,WACV8oB,EAAKkB,YAEVV,GAA0B,UAAU,SAACkB,EAAaC,GAAU,OAAK3B,EAAK4B,YAAYF,EAAaC,EAAW,GAC9G,IAEA3B,EAAKc,2BAA4BhB,EAAAA,GAAAA,GAAKiC,EAAuBG,EACjE,EAAElC,CACN,CAyCC,OAzCAzT,EAAAA,GAAAA,GAAAoU,EAAA,EAAAvuB,IAAA,aAAArB,MACD,SAAW+sB,EAAOwB,GACdruB,KAAKiwB,YAAa,EAClB,IAAAiB,EAAiClxB,KAAKguB,KAAK/W,WAAnCyP,EAAUwK,EAAVxK,WAAoBwK,EAARvK,UAIJ3mB,KAAKguB,KAAKlW,gBACtB9X,KAAKguB,KAAKlW,eAAeyW,UAAU,YAAY,GAE/C7H,GACAna,GAAAA,GAAMJ,QAAO,kBAAMua,EAAWmG,EAAOwB,EAAK,GAElD,GAAC,CAAAltB,IAAA,gBAAArB,MACD,WAOI,OANAE,KAAK4vB,qBACL5vB,KAAKiwB,YAAa,EACJjwB,KAAKguB,KAAK/W,WACd0P,UAAY3mB,KAAKguB,KAAKlW,gBAC5B9X,KAAKguB,KAAKlW,eAAeyW,UAAU,YAAY,IAE3CV,IACZ,GAAC,CAAA1sB,IAAA,cAAArB,MACD,SAAY+sB,EAAOwB,GACf,GAAKruB,KAAKqwB,gBAAV,CAEA,IAAQE,EAAgBvwB,KAAKguB,KAAK/W,WAA1BsZ,YACJA,GACAhkB,GAAAA,GAAMJ,QAAO,kBAAMokB,EAAY1D,EAAOwB,EAAK,GAHrC,CAKd,GAAC,CAAAltB,IAAA,QAAArB,MACD,WACI,IAAMke,EAAQhe,KAAKguB,KAAK/W,WAClBka,EAAwB9D,GAAgBrtB,KAAKguB,KAAK/nB,QAAS,cAAejG,KAAK8vB,kBAAmB,CAAErD,UAAWzO,EAAM0I,YAAc1I,EAAsB,kBACzJoT,EAAsB9E,GAAYtsB,KAAKguB,KAAK/nB,QAAS,QAASjG,KAAK6wB,sBACzE7wB,KAAK2vB,sBAAuBd,EAAAA,GAAAA,GAAKsC,EAAuBC,EAC5D,GAAC,CAAAjwB,IAAA,UAAArB,MACD,WACIE,KAAK2vB,uBACL3vB,KAAK4vB,qBACL5vB,KAAK6vB,2BACT,KAACH,CAAA,CApGa,CAAS3B,I,YCXrBsD,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAuB,SAACC,GAC1B,IAAMte,EAAWke,GAAkBvyB,IAAI2yB,EAAMzyB,QAC7CmU,GAAYA,EAASse,EACzB,EACMC,GAA2B,SAACC,GAC9BA,EAAQ/wB,QAAQ4wB,GACpB,EAoBA,SAASI,GAAoB7d,EAASjL,EAASqK,GAC3C,IAAM0e,EApBV,SAAiCptB,GAAuB,IAApBqtB,EAAIrtB,EAAJqtB,KAAShpB,GAAO9H,EAAAA,EAAAA,GAAAyD,EAAA2E,IAC1C2oB,EAAaD,GAAQrd,SAItB8c,GAAU9d,IAAIse,IACfR,GAAUpf,IAAI4f,EAAY,CAAC,GAE/B,IAAMC,EAAgBT,GAAUzyB,IAAIizB,GAC9B5wB,EAAM8wB,KAAKC,UAAUppB,GAQ3B,OAHKkpB,EAAc7wB,KACf6wB,EAAc7wB,GAAO,IAAIgxB,qBAAqBT,IAAwBloB,EAAAA,EAAAA,GAAA,CAAIsoB,KAAAA,GAAShpB,KAEhFkpB,EAAc7wB,EACzB,CAEsCixB,CAAyBtpB,GAG3D,OAFAuoB,GAAkBlf,IAAI4B,EAASZ,GAC/B0e,EAA0BQ,QAAQte,GAC3B,WACHsd,GAAkBvf,OAAOiC,GACzB8d,EAA0BS,UAAUve,EACxC,CACJ,CC3CA,IAAMwe,GAAiB,CACnBxpB,KAAM,EACNmJ,IAAK,GAEHsgB,GAAa,SAAA/D,IAAAC,EAAAA,GAAAA,GAAA8D,EAAA/D,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAA4D,GACf,SAAAA,IAAc,IAAAzD,EAGY,OAHZ5T,EAAAA,GAAAA,GAAA,KAAAqX,IACVzD,EAAAJ,EAAA5uB,MAAA,KAASH,YACJ6yB,gBAAiB,EACtB1D,EAAK2D,UAAW,EAAM3D,CAC1B,CAqDa,OArDZzT,EAAAA,GAAAA,GAAAkX,EAAA,EAAArxB,IAAA,gBAAArB,MACD,WAAgB,IAAAovB,EAAA,KACZlvB,KAAKqiB,UACL,IAA8CsQ,EAApB3yB,KAAKguB,KAAK/W,WAA5B2b,SAAAA,OAAQ,IAAAD,EAAG,CAAC,EAACA,EACbb,EAAoDc,EAApDd,KAAce,EAAsCD,EAA9CE,OAAMC,EAAwCH,EAA1BI,OAAAA,OAAM,IAAAD,EAAG,OAAMA,EAAEE,EAASL,EAATK,KAC7CnqB,EAAU,CACZgpB,KAAMA,EAAOA,EAAK7rB,aAAU3B,EAC5BuuB,WAAAA,EACAK,UAA6B,kBAAXF,EAAsBA,EAAST,GAAeS,IA+BpE,OAAOpB,GAAoB5xB,KAAKguB,KAAK/nB,QAAS6C,GA7BjB,SAAC2oB,GAC1B,IAAQ0B,EAAmB1B,EAAnB0B,eAIR,GAAIjE,EAAKwD,WAAaS,IAEtBjE,EAAKwD,SAAWS,GAKZF,GAASE,IAAkBjE,EAAKuD,gBAApC,CAGSU,IACLjE,EAAKuD,gBAAiB,GAEtBvD,EAAKlB,KAAKlW,gBACVoX,EAAKlB,KAAKlW,eAAeyW,UAAU,cAAe4E,GAMtD,IAAAC,EAA6ClE,EAAKlB,KAAK/W,WAA/Coc,EAAeD,EAAfC,gBAAiBC,EAAeF,EAAfE,gBACnBngB,EAAWggB,EAAiBE,EAAkBC,EACpDngB,GAAYA,EAASse,EAVrB,CAWJ,GAEJ,GAAC,CAAAtwB,IAAA,QAAArB,MACD,WACIE,KAAKuzB,eACT,GAAC,CAAApyB,IAAA,SAAArB,MACD,WACI,GAAoC,qBAAzBqyB,qBAAX,CAEA,IAAAqB,EAA6BxzB,KAAKguB,KAA1BhQ,EAAKwV,EAALxV,MAAOwM,EAASgJ,EAAThJ,UACTiJ,EAAoB,CAAC,SAAU,SAAU,QAAQ1qB,KAO/D,SAAiCtE,GAA0D,IAAAivB,EAAAjvB,EAAvDmuB,SAAAA,OAAQ,IAAAc,EAAG,CAAC,EAACA,EAAA1gB,EAAApT,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAsC,CAAC,EAAC+zB,EAAA3gB,EAAlC4f,SAAUgB,OAAY,IAAAD,EAAG,CAAC,EAACA,EAC9E,OAAO,SAAC1V,GAAI,OAAK2U,EAAS3U,KAAU2V,EAAa3V,EAAK,CAC1D,CAToE4V,CAAyB7V,EAAOwM,IACxFiJ,GACAzzB,KAAKuzB,eAJC,CAMd,GAAC,CAAApyB,IAAA,UAAArB,MACD,WAAY,KAAC0yB,CAAA,CA1DE,CAASzE,ICF5B,IAAM+F,GAAoB,CACtBxU,OAAQ,CACJyO,QAASyE,IAEbpT,IAAK,CACD2O,QAAS2B,IAEbxQ,MAAO,CACH6O,QAASe,IAEb3P,MAAO,CACH4O,QAASS,K,qBChBjB,SAASuF,GAAeluB,EAAMmuB,GAC1B,IAAK9wB,MAAMC,QAAQ6wB,GACf,OAAO,EACX,IAAMC,EAAaD,EAAKn0B,OACxB,GAAIo0B,IAAepuB,EAAKhG,OACpB,OAAO,EACX,IAAK,IAAIuB,EAAI,EAAGA,EAAI6yB,EAAY7yB,IAC5B,GAAI4yB,EAAK5yB,KAAOyE,EAAKzE,GACjB,OAAO,EAEf,OAAO,CACX,C,4DCHM8yB,IAAuB9kB,EAAAA,GAAAA,GAAIyO,GAAsBxO,UACjD8kB,GAAoBtW,EAAqBhe,OAI/C,SAASu0B,GAAqBxiB,GAC1B,IAAIsC,EAJR,SAAqBtC,GACjB,OAAO,SAACI,GAAU,OAAKjD,QAAQmD,IAAIF,EAAW9M,KAAI,SAAAT,GAAA,IAAGqP,EAASrP,EAATqP,UAAWhL,EAAOrE,EAAPqE,QAAO,OAAOmJ,EAAAA,GAAAA,GAAqBL,EAAekC,EAAWhL,EAAQ,IAAE,CAC3I,CAEkBurB,CAAYziB,GACpBzM,EAoSC,CACH+O,QAASogB,IAAgB,GACzBC,YAAaD,KACbhG,WAAYgG,KACZ3N,SAAU2N,KACVE,UAAWF,KACXG,WAAYH,KACZtV,KAAMsV,MA1SNI,GAAkB,EAKhBC,EAA0B,SAACzY,EAAKhY,GAClC,IAAM8U,GAAWC,EAAAA,GAAAA,GAAerH,EAAe1N,GAC/C,GAAI8U,EAAU,CACuCA,EAAzClD,WAAR,IAAoB4B,EAA6BsB,EAA7BtB,cAAkB1Y,GAAMgC,EAAAA,EAAAA,GAAKgY,EAAQ5P,IACzD8S,GAAG1S,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ0S,GAAQld,GAAW0Y,EAClC,CACA,OAAOwE,CACX,EAkBA,SAASyF,EAAe7Y,EAAS8rB,GA8B7B,IA7BA,IAAM5W,EAAQpM,EAAcqF,WACtBqH,EAAU1M,EAAcijB,mBAAkB,IAAS,CAAC,EAKpD7iB,EAAa,GAKb8iB,EAAc,IAAIpjB,IAMpBqjB,EAAkB,CAAC,EAKnBC,EAAsB/nB,IAC1B+K,EAAA,WAOI,IAAM/J,EAAOimB,GAAqB9yB,GAC5B6zB,EAAY9vB,EAAM8I,GAClB4Q,OAAuBva,IAAhB0Z,EAAM/P,GAAsB+P,EAAM/P,GAAQqQ,EAAQrQ,GACzDinB,EAAgBvX,EAAekB,GAK/BsW,EAAclnB,IAAS2mB,EAAoBK,EAAU9G,SAAW,MAClD,IAAhBgH,IACAH,EAAsB5zB,GAO1B,IAAIg0B,EAAcvW,IAASP,EAAQrQ,IAAS4Q,IAASb,EAAM/P,IAASinB,EAepE,GAXIE,GACAV,GACA9iB,EAAcyjB,yBACdD,GAAc,GAMlBH,EAAU/c,eAAa1O,EAAAA,EAAAA,GAAA,GAAQurB,IAI7BE,EAAU9G,UAA4B,OAAhBgH,IAElBtW,IAASoW,EAAUK,UAErB1X,EAAoBiB,IACJ,mBAATA,EAAoB,iBAQ/B,IAAM0W,EAqKlB,SAAgCvB,EAAMnuB,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASmuB,EAEf,GAAI9wB,MAAMC,QAAQ0C,GACnB,OAAQkuB,GAAeluB,EAAMmuB,GAEjC,OAAO,CACX,CA7KqCwB,CAAuBP,EAAUK,SAAUzW,GAChE4W,EAAoBF,GAEnBtnB,IAAS2mB,GACNK,EAAU9G,WACTiH,GACDF,GAEH9zB,EAAI4zB,GAAuBE,EAK1BQ,EAAiBxyB,MAAMC,QAAQ0b,GAAQA,EAAO,CAACA,GAKjD8W,EAAiBD,EAAezZ,OAAO0Y,EAAyB,CAAC,IACjD,IAAhBQ,IACAQ,EAAiB,CAAC,GAUtB,IAAAC,EAAoCX,EAA5BY,mBAAAA,OAAkB,IAAAD,EAAG,CAAC,EAACA,EACzBE,GAAOtsB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNqsB,GACAF,GAEDI,EAAgB,SAAC50B,GACnBs0B,GAAoB,EACpBX,EAAYhjB,OAAO3Q,GACnB8zB,EAAU9c,eAAehX,IAAO,CACpC,EACA,IAAK,IAAMA,KAAO20B,EAAS,CACvB,IAAMjwB,EAAO8vB,EAAex0B,GACtB6yB,EAAO6B,EAAmB10B,GAE5B4zB,EAAgBx1B,eAAe4B,KAK/B0E,IAASmuB,GAKLrZ,EAAAA,GAAAA,GAAkB9U,KAAS8U,EAAAA,GAAAA,GAAkBqZ,IACxCD,GAAeluB,EAAMmuB,IAASuB,EAC/BQ,EAAc50B,GAOd8zB,EAAU/c,cAAc/W,IAAO,OAGrBmD,IAATuB,EAELkwB,EAAc50B,GAId2zB,EAAYjjB,IAAI1Q,QAGNmD,IAATuB,GAAsBivB,EAAYrhB,IAAItS,GAK3C40B,EAAc50B,GAOd8zB,EAAU/c,cAAc/W,IAAO,EAEvC,CAKA8zB,EAAUK,SAAWzW,EACrBoW,EAAUY,mBAAqBF,EAI3BV,EAAU9G,WACV4G,GAAevrB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQurB,GAAoBY,IAE3CjB,GAAmB9iB,EAAc2P,wBACjCkU,GAAoB,GAOpBA,IAAsBL,GACtBpjB,EAAWtR,KAAIX,MAAfiS,GAAU5C,EAAAA,GAAAA,GAASsmB,EAAexwB,KAAI,SAAC4O,GAAS,MAAM,CAClDA,UAAWA,EACXhL,SAAOU,EAAAA,EAAAA,GAAA,CAAIyE,KAAAA,GAASnF,GACvB,KAET,EApKS1H,EAAI,EAAGA,EAAI+yB,GAAmB/yB,IAAG4W,IA0K1C,GAAI8c,EAAYvb,KAAM,CAClB,IAAMyc,EAAoB,CAAC,EAC3BlB,EAAYl0B,SAAQ,SAACO,GACjB,IAAM80B,EAAiBrkB,EAAcskB,cAAc/0B,QAC5BmD,IAAnB2xB,IACAD,EAAkB70B,GAAO80B,EAEjC,IACAjkB,EAAWtR,KAAK,CAAEoT,UAAWkiB,GACjC,CACA,IAAIG,EAAgB3lB,QAAQwB,EAAWnS,QAOvC,OANI60B,IACkB,IAAlB1W,EAAMO,UACL3M,EAAcyjB,yBACfc,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgBjiB,EAAQlC,GAAcjD,QAAQC,SACzD,CAkBA,MAAO,CACH2S,eAAAA,EACA4M,UAhBJ,SAAmBtgB,EAAMkgB,EAAUrlB,GAC/B,IAAIme,EAEJ,GAAI9hB,EAAM8I,GAAMkgB,WAAaA,EACzB,OAAOpf,QAAQC,UAEsB,QAAxCiY,EAAKrV,EAAc0H,uBAAoC,IAAP2N,GAAyBA,EAAGrmB,SAAQ,SAACsZ,GAAY,IAAI+M,EAAI,OAAuC,QAA/BA,EAAK/M,EAAMpC,sBAAmC,IAAPmP,OAAgB,EAASA,EAAGsH,UAAUtgB,EAAMkgB,EAAW,IAChNhpB,EAAM8I,GAAMkgB,SAAWA,EACvB,IAAMnc,EAAa2P,EAAe7Y,EAASmF,GAC3C,IAAK,IAAM9M,KAAOgE,EACdA,EAAMhE,GAAK+W,cAAgB,CAAC,EAEhC,OAAOlG,CACX,EAIIokB,mBA5PJ,SAA4BC,GACxBniB,EAAUmiB,EAAazkB,EAC3B,EA2PImG,SAAU,kBAAM5S,CAAK,EAE7B,CAUA,SAASmvB,KACL,MAAO,CACHnG,SAFyBvuB,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,IAAAA,UAAA,GAGzBsY,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjB0d,mBAAoB,CAAC,EAE7B,CC/SyC,IAEnCS,GAAgB,SAAA7H,IAAAC,EAAAA,GAAAA,GAAA4H,EAAA7H,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAA0H,GAMlB,SAAAA,EAAYtI,GAAM,IAAAe,EAE4D,OAF5D5T,EAAAA,GAAAA,GAAA,KAAAmb,GACdvH,EAAAJ,EAAAnvB,KAAA,KAAMwuB,GACNA,EAAKlW,iBAAmBkW,EAAKlW,eAAiBsc,GAAqBpG,IAAOe,CAC9E,CAqBa,OArBZzT,EAAAA,GAAAA,GAAAgb,EAAA,EAAAn1B,IAAA,sCAAArB,MACD,WACI,IAAQoU,EAAYlU,KAAKguB,KAAK/W,WAAtB/C,QACRlU,KAAKqiB,UACDzE,EAAoB1J,KACpBlU,KAAKqiB,QAAUnO,EAAQvC,UAAU3R,KAAKguB,MAE9C,GACA,CAAA7sB,IAAA,QAAArB,MAGA,WACIE,KAAKu2B,qCACT,GAAC,CAAAp1B,IAAA,SAAArB,MACD,WACwBE,KAAKguB,KAAK/W,WAAtB/C,WACyBlU,KAAKguB,KAAKxD,WAAa,CAAC,GAAjDtW,SAEJlU,KAAKu2B,qCAEb,GAAC,CAAAp1B,IAAA,UAAArB,MACD,WAAY,KAACw2B,CAAA,CA9BK,CAASvI,ICF3BvL,GAAK,EACHgU,GAAoB,SAAA/H,IAAAC,EAAAA,GAAAA,GAAA8H,EAAA/H,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAA4H,GACtB,SAAAA,IAAc,IAAAzH,EAEK,OAFL5T,EAAAA,GAAAA,GAAA,KAAAqb,IACVzH,EAAAJ,EAAA5uB,MAAA,KAASH,YACJ4iB,GAAKA,KAAKuM,CACnB,CAoBa,OApBZzT,EAAAA,GAAAA,GAAAkb,EAAA,EAAAr1B,IAAA,SAAArB,MACD,WAAS,IAAAovB,EAAA,KACL,GAAKlvB,KAAKguB,KAAK9M,gBAAf,CAEA,IAAAuV,EAA8Cz2B,KAAKguB,KAAK9M,gBAAhDwV,EAASD,EAATC,UAAWC,EAAcF,EAAdE,eAAgBzd,EAAMud,EAANvd,OAChB0d,GAAkB52B,KAAKguB,KAAK6I,qBAAuB,CAAC,GAA/DH,UACR,GAAK12B,KAAKguB,KAAKlW,gBAAkB4e,IAAcE,EAA/C,CAGA,IAAME,EAAgB92B,KAAKguB,KAAKlW,eAAeyW,UAAU,QAASmI,EAAW,CAAExd,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAASlZ,KAAKguB,KAAK/W,WAAWiC,SACxJyd,IAAmBD,GACnBI,EAAc/lB,MAAK,kBAAM4lB,EAAezH,EAAK1M,GAAG,GAHpD,CALU,CAUd,GAAC,CAAArhB,IAAA,QAAArB,MACD,WACI,IAAQi3B,GAAa/2B,KAAKguB,KAAK9M,iBAAmB,CAAC,GAA3C6V,SACJA,IACA/2B,KAAKqiB,QAAU0U,EAAS/2B,KAAKwiB,IAErC,GAAC,CAAArhB,IAAA,UAAArB,MACD,WAAY,KAAC02B,CAAA,CAxBS,CAASzI,ICA7B/b,GAAa,CACf8B,UAAW,CACPia,QAASuI,IAEbtX,KAAM,CACF+O,QAASyI,K,sBCRXQ,GAAW,SAACrvB,EAAGC,GAAC,OAAKlF,KAAKC,IAAIgF,EAAIC,EAAE,ECQ1C,IAGMqvB,GAAU,WACZ,SAAAA,EAAYpK,EAAOqK,GAAuC,IAAAnI,EAAA,KAA3BjU,GAA2Blb,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAAxBkb,mBA0D3B,IA1D6CK,EAAAA,GAAAA,GAAA,KAAA8b,GAI7Cj3B,KAAK+vB,WAAa,KAIlB/vB,KAAKm3B,cAAgB,KAIrBn3B,KAAKo3B,kBAAoB,KAIzBp3B,KAAKk3B,SAAW,CAAC,EACjBl3B,KAAKq3B,YAAc,WACf,GAAMtI,EAAKoI,eAAiBpI,EAAKqI,kBAAjC,CAEA,IAAM/I,EAAOiJ,GAAWvI,EAAKqI,kBAAmBrI,EAAKwI,SAC/CC,EAAmC,OAApBzI,EAAKgB,WAIpB0H,EDpClB,SAAoB9vB,EAAGC,GAEnB,IAAM8vB,EAASV,GAASrvB,EAAEtF,EAAGuF,EAAEvF,GACzBs1B,EAASX,GAASrvB,EAAE0b,EAAGzb,EAAEyb,GAC/B,OAAO3gB,KAAKgG,KAAKhG,KAAAsB,IAAA0zB,EAAU,GAACh1B,KAAAsB,IAAG2zB,EAAU,GAC7C,CC+B4CC,CAAWvJ,EAAK/oB,OAAQ,CAAEjD,EAAG,EAAGghB,EAAG,KAAQ,EAC3E,GAAKmU,GAAiBC,EAAtB,CAEA,IAAQtK,EAAUkB,EAAVlB,MACA9gB,EAAcM,GAAAA,GAAdN,UACR0iB,EAAKwI,QAAQ72B,MAAI8I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI2jB,GAAK,IAAE9gB,UAAAA,KAC9B,IAAAwrB,EAA4B9I,EAAKmI,SAAzBY,EAAOD,EAAPC,QAASC,EAAMF,EAANE,OACZP,IACDM,GAAWA,EAAQ/I,EAAKoI,cAAe9I,GACvCU,EAAKgB,WAAahB,EAAKoI,eAE3BY,GAAUA,EAAOhJ,EAAKoI,cAAe9I,EAT3B,CARA,CAkBd,EACAruB,KAAKg4B,kBAAoB,SAACnL,EAAOwB,GAC7BU,EAAKoI,cAAgBtK,EACrBkC,EAAKqI,kBAAoBa,GAAe5J,EAAMU,EAAKjU,oBAEnDvO,GAAAA,GAAMJ,OAAO4iB,EAAKsI,aAAa,EACnC,EACAr3B,KAAKk4B,gBAAkB,SAACrL,EAAOwB,GAE3B,GADAU,EAAKoJ,MACCpJ,EAAKoI,eAAiBpI,EAAKqI,kBAAjC,CAEA,IAAAgB,EAAgCrJ,EAAKmI,SAA7BmB,EAAKD,EAALC,MAAOC,EAAYF,EAAZE,aACTC,EAAUjB,GAA0B,kBAAfzK,EAAM5e,KAC3B8gB,EAAKqI,kBACLa,GAAe5J,EAAMU,EAAKjU,oBAAqBiU,EAAKwI,SACtDxI,EAAKgB,YAAcsI,GACnBA,EAAMxL,EAAO0L,GAEjBD,GAAgBA,EAAazL,EAAO0L,EAR1B,CASd,EAEK3L,GAAiBC,GAAtB,CAEA7sB,KAAKk3B,SAAWA,EAChBl3B,KAAK8a,mBAAqBA,EAC1B,IACM0d,EAAcP,GADPhL,GAAiBJ,GACW7sB,KAAK8a,oBACtCqS,EAAUqL,EAAVrL,MACA9gB,EAAcM,GAAAA,GAAdN,UACRrM,KAAKu3B,QAAU,EAAA/tB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAM2jB,GAAK,IAAE9gB,UAAAA,KAC5B,IAAQosB,EAAmBvB,EAAnBuB,eACRA,GACIA,EAAe5L,EAAOyK,GAAWkB,EAAax4B,KAAKu3B,UACvDv3B,KAAK04B,iBAAkB7J,EAAAA,GAAAA,GAAKxB,GAAgB/U,OAAQ,cAAetY,KAAKg4B,mBAAoB3K,GAAgB/U,OAAQ,YAAatY,KAAKk4B,iBAAkB7K,GAAgB/U,OAAQ,gBAAiBtY,KAAKk4B,iBAX5L,CAYd,CAOC,OAPA5c,EAAAA,GAAAA,GAAA2b,EAAA,EAAA91B,IAAA,iBAAArB,MACD,SAAeo3B,GACXl3B,KAAKk3B,SAAWA,CACpB,GAAC,CAAA/1B,IAAA,MAAArB,MACD,WACIE,KAAK04B,iBAAmB14B,KAAK04B,mBAC7BjsB,EAAAA,GAAAA,IAAYzM,KAAKq3B,YACrB,KAACJ,CAAA,CA/EW,GAiFhB,SAASgB,GAAe5J,EAAMvT,GAC1B,OAAOA,EAAqB,CAAEqS,MAAOrS,EAAmBuT,EAAKlB,QAAWkB,CAC5E,CACA,SAASsK,GAAchxB,EAAGC,GACtB,MAAO,CAAEvF,EAAGsF,EAAEtF,EAAIuF,EAAEvF,EAAGghB,EAAG1b,EAAE0b,EAAIzb,EAAEyb,EACtC,CACA,SAASiU,GAAUtkB,EAAYukB,GAAS,IAAlBpK,EAAKna,EAALma,MAClB,MAAO,CACHA,MAAAA,EACAzlB,MAAOixB,GAAcxL,EAAOyL,GAAgBrB,IAC5CjyB,OAAQqzB,GAAcxL,EAAO0L,GAAiBtB,IAC9CvwB,SAAU4P,GAAY2gB,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQ13B,OAAS,EACpC,CACA,SAAS+W,GAAY2gB,EAASuB,GAC1B,GAAIvB,EAAQ13B,OAAS,EACjB,MAAO,CAAEwC,EAAG,EAAGghB,EAAG,GAKtB,IAHA,IAAIjiB,EAAIm2B,EAAQ13B,OAAS,EACrBk5B,EAAmB,KACjBC,EAAYJ,GAAgBrB,GAC3Bn2B,GAAK,IACR23B,EAAmBxB,EAAQn2B,KACvB43B,EAAU3sB,UAAY0sB,EAAiB1sB,WACvCjF,EAAAA,GAAAA,GAAsB0xB,MAG1B13B,IAEJ,IAAK23B,EACD,MAAO,CAAE12B,EAAG,EAAGghB,EAAG,GAEtB,IAAMpS,GAAO1J,EAAAA,GAAAA,GAAsByxB,EAAU3sB,UAAY0sB,EAAiB1sB,WAC1E,GAAa,IAAT4E,EACA,MAAO,CAAE5O,EAAG,EAAGghB,EAAG,GAEtB,IAAM7Y,EAAkB,CACpBnI,GAAI22B,EAAU32B,EAAI02B,EAAiB12B,GAAK4O,EACxCoS,GAAI2V,EAAU3V,EAAI0V,EAAiB1V,GAAKpS,GAQ5C,OANIzG,EAAgBnI,IAAM4K,MACtBzC,EAAgBnI,EAAI,GAEpBmI,EAAgB6Y,IAAMpW,MACtBzC,EAAgB6Y,EAAI,GAEjB7Y,CACX,C,0BC/IA,SAASyuB,GAAWC,GAChB,OAAOA,EAAK/yB,IAAM+yB,EAAK7uB,GAC3B,CACA,SAAS8uB,GAAOr5B,GAAuC,IAAhCd,EAAMY,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,EAAGw5B,EAAWx5B,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,IAC7C,OAAO8C,KAAKC,IAAI7C,EAAQd,IAAWo6B,CACvC,CACA,SAASC,GAAc3xB,EAAOzG,EAAQjC,GAAsB,IAAdqK,EAAMzJ,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,GACnD8H,EAAM2B,OAASA,EACf3B,EAAM4xB,aAAcC,EAAAA,GAAAA,GAAIt4B,EAAOoJ,IAAKpJ,EAAOkF,IAAKuB,EAAM2B,QACtD3B,EAAM+gB,MAAQwQ,GAAWj6B,GAAUi6B,GAAWh4B,IAC1Ck4B,GAAOzxB,EAAM+gB,MAAO,EAAG,OAAWlgB,MAAMb,EAAM+gB,UAC9C/gB,EAAM+gB,MAAQ,GAClB/gB,EAAM8xB,WACFD,EAAAA,GAAAA,GAAIv6B,EAAOqL,IAAKrL,EAAOmH,IAAKuB,EAAM2B,QAAU3B,EAAM4xB,aAClDH,GAAOzxB,EAAM8xB,YAAcjxB,MAAMb,EAAM8xB,cACvC9xB,EAAM8xB,UAAY,EAC1B,CACA,SAASC,GAAa/xB,EAAOzG,EAAQjC,EAAQqK,GACzCgwB,GAAc3xB,EAAMrF,EAAGpB,EAAOoB,EAAGrD,EAAOqD,EAAGgH,EAASA,EAAO+b,aAAU9gB,GACrE+0B,GAAc3xB,EAAM2b,EAAGpiB,EAAOoiB,EAAGrkB,EAAOqkB,EAAGha,EAASA,EAAOic,aAAUhhB,EACzE,CACA,SAASo1B,GAAiB16B,EAAQ26B,EAAU3Y,GACxChiB,EAAOqL,IAAM2W,EAAO3W,IAAMsvB,EAAStvB,IACnCrL,EAAOmH,IAAMnH,EAAOqL,IAAM4uB,GAAWU,EACzC,CAKA,SAASC,GAAyB56B,EAAQugB,EAAQyB,GAC9ChiB,EAAOqL,IAAMkV,EAAOlV,IAAM2W,EAAO3W,IACjCrL,EAAOmH,IAAMnH,EAAOqL,IAAM4uB,GAAW1Z,EACzC,CACA,SAASsa,GAAqB76B,EAAQugB,EAAQyB,GAC1C4Y,GAAyB56B,EAAOqD,EAAGkd,EAAOld,EAAG2e,EAAO3e,GACpDu3B,GAAyB56B,EAAOqkB,EAAG9D,EAAO8D,EAAGrC,EAAOqC,EACxD,C,eCZA,SAASyW,GAA4BZ,EAAM7uB,EAAKlE,GAC5C,MAAO,CACHkE,SAAa/F,IAAR+F,EAAoB6uB,EAAK7uB,IAAMA,OAAM/F,EAC1C6B,SAAa7B,IAAR6B,EACC+yB,EAAK/yB,IAAMA,GAAO+yB,EAAK/yB,IAAM+yB,EAAK7uB,UAClC/F,EAEd,CAcA,SAASy1B,GAA4BC,EAAYC,GAC7C,IAAI5vB,EAAM4vB,EAAgB5vB,IAAM2vB,EAAW3vB,IACvClE,EAAM8zB,EAAgB9zB,IAAM6zB,EAAW7zB,IAG3C,GAAI8zB,EAAgB9zB,IAAM8zB,EAAgB5vB,IACtC2vB,EAAW7zB,IAAM6zB,EAAW3vB,IAAK,KAAAiQ,EACpB,CAACnU,EAAKkE,GAAlBA,EAAGiQ,EAAA,GAAEnU,EAAGmU,EAAA,EACb,CACA,MAAO,CAAEjQ,IAAAA,EAAKlE,IAAAA,EAClB,CAuCA,IAAM+zB,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHjwB,IAAKkwB,GAAoBH,EAAaC,GACtCl0B,IAAKo0B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,IAMMC,GAAc,WAAH,MAAU,CACvBp4B,EAP2B,CAC3Bm3B,UAAW,EACX/Q,MAAO,EACPpf,OAAQ,EACRiwB,YAAa,GAIbjW,EAR2B,CAC3BmW,UAAW,EACX/Q,MAAO,EACPpf,OAAQ,EACRiwB,YAAa,GAKhB,EAEKoB,GAAY,WAAH,MAAU,CACrBr4B,EAFsB,CAAEgI,IAAK,EAAGlE,IAAK,GAGrCkd,EAHsB,CAAEhZ,IAAK,EAAGlE,IAAK,GAIxC,ECdD,SAASw0B,GAASxnB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASynB,GAAuBn2B,GAAgC,IAA7Bo2B,EAAGp2B,EAAHo2B,IAC/B,MAAO,CACHx4B,EAAG,CAAEgI,IAF+B5F,EAAJq2B,KAEhB30B,IAF2B1B,EAALs2B,OAGtC1X,EAAG,CAAEhZ,IAAKwwB,EAAK10B,IAHoC1B,EAANu2B,QAKrD,C,eCVA,SAASC,GAAgBxS,GACrB,YAAiBnkB,IAAVmkB,GAAiC,IAAVA,CAClC,CACA,SAASyS,GAAQz2B,GAA4B,IAAzBgkB,EAAKhkB,EAALgkB,MAAO0S,EAAM12B,EAAN02B,OAAQC,EAAM32B,EAAN22B,OAC/B,OAASH,GAAgBxS,KACpBwS,GAAgBE,KAChBF,GAAgBG,EACzB,CACA,SAASlX,GAAaxf,GAClB,OAAQw2B,GAASx2B,IACb22B,GAAe32B,IACfA,EAAO4e,GACP5e,EAAO42B,QACP52B,EAAO62B,SACP72B,EAAO82B,OACf,CACA,SAASH,GAAe32B,GACpB,OAAO+2B,GAAc/2B,EAAOrC,IAAMo5B,GAAc/2B,EAAO2e,EAC3D,CACA,SAASoY,GAAc37B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAAS47B,GAAWvO,EAAO1E,EAAO6Q,GAG9B,OAAOA,EADQ7Q,GADY0E,EAAQmM,EAGvC,CAIA,SAASqC,GAAgBxO,EAAOqM,EAAW/Q,EAAO6Q,EAAasC,GAI3D,YAHiBt3B,IAAbs3B,IACAzO,EAAQuO,GAAWvO,EAAOyO,EAAUtC,IAEjCoC,GAAWvO,EAAO1E,EAAO6Q,GAAeE,CACnD,CAIA,SAASqC,GAAe3C,GAAuD,IAAjDM,EAAS55B,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,EAAG6oB,EAAK7oB,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,EAAG05B,EAAW15B,UAAAC,OAAA,EAAAD,UAAA,QAAA0E,EAAEs3B,EAAQh8B,UAAAC,OAAA,EAAAD,UAAA,QAAA0E,EACzE40B,EAAK7uB,IAAMsxB,GAAgBzC,EAAK7uB,IAAKmvB,EAAW/Q,EAAO6Q,EAAasC,GACpE1C,EAAK/yB,IAAMw1B,GAAgBzC,EAAK/yB,IAAKqzB,EAAW/Q,EAAO6Q,EAAasC,EACxE,CAIA,SAASE,GAAcC,EAAGt3B,GAAY,IAARpC,EAACoC,EAADpC,EAAGghB,EAAC5e,EAAD4e,EAC7BwY,GAAeE,EAAI15B,EAAGA,EAAEm3B,UAAWn3B,EAAEomB,MAAOpmB,EAAEi3B,aAC9CuC,GAAeE,EAAI1Y,EAAGA,EAAEmW,UAAWnW,EAAEoF,MAAOpF,EAAEiW,YAClD,CAuDA,SAAS0C,GAAcvT,GACnB,OAAIwT,OAAOC,UAAUzT,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAAS0T,GAAcjD,EAAMlC,GACzBkC,EAAK7uB,IAAM6uB,EAAK7uB,IAAM2sB,EACtBkC,EAAK/yB,IAAM+yB,EAAK/yB,IAAM6wB,CAC1B,CAMA,SAASoF,GAAclD,EAAMmD,EAAUrpB,GAA8B,IAAAsH,GAAAjW,EAAAA,GAAAA,GAAA2O,EAAA,GAA3B7R,EAAGmZ,EAAA,GAAEgiB,EAAQhiB,EAAA,GAAEiiB,EAASjiB,EAAA,GACxDkiB,OAAuCl4B,IAA1B+3B,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EjD,GAAcC,EAAAA,GAAAA,GAAIL,EAAK7uB,IAAK6uB,EAAK/yB,IAAKq2B,GAE5CX,GAAe3C,EAAMmD,EAAWl7B,GAAMk7B,EAAWC,GAAWhD,EAAa+C,EAAW5T,MACxF,CAIA,IAAMgU,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKpY,GACvByY,GAAcL,EAAI15B,EAAGshB,EAAW8Y,IAChCL,GAAcL,EAAI1Y,EAAGM,EAAW+Y,GACpC,CCpHA,SAASE,GAAmBxa,EAAU6V,GAClC,OAAO2C,GHeX,SAA4BzN,EAAO8K,GAC/B,IAAKA,EACD,OAAO9K,EACX,IAAM0P,EAAU5E,EAAe,CAAE51B,EAAG8qB,EAAM2N,KAAMzX,EAAG8J,EAAM0N,MACnDiC,EAAc7E,EAAe,CAAE51B,EAAG8qB,EAAM4N,MAAO1X,EAAG8J,EAAM6N,SAC9D,MAAO,CACHH,IAAKgC,EAAQxZ,EACbyX,KAAM+B,EAAQx6B,EACd24B,OAAQ8B,EAAYzZ,EACpB0X,MAAO+B,EAAYz6B,EAE3B,CG1BmC06B,CAAmB3a,EAAS+J,wBAAyB8L,GACxF,C,eCaM+E,GAAsB,IAAI1L,QAK1B2L,GAAyB,WAC3B,SAAAA,EAAYrrB,IAAeuJ,EAAAA,GAAAA,GAAA,KAAA8hB,GAIvBj9B,KAAKk9B,eAAiB,KACtBl9B,KAAKm9B,YAAa,EAClBn9B,KAAKo9B,iBAAmB,KACxBp9B,KAAKs5B,YAAc,CAAEj3B,EAAG,EAAGghB,EAAG,GAI9BrjB,KAAKq9B,aAAc,EACnBr9B,KAAKs9B,uBAAwB,EAI7Bt9B,KAAKu9B,QAAU7C,KACf16B,KAAK4R,cAAgBA,CACzB,CAsYC,OAtYA0J,EAAAA,GAAAA,GAAA2hB,EAAA,EAAA97B,IAAA,QAAArB,MACD,SAAM09B,GAA4C,IAAAzO,EAAA,KAAF0O,GAAE79B,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAA1B89B,aAAAA,OAAY,IAAAD,GAAQA,EAI7Bvc,EAAoBlhB,KAAK4R,cAAzBsP,gBACR,IAAIA,IAAiD,IAA9BA,EAAgBwV,UAAvC,CAwFA12B,KAAK29B,WAAa,IAAI1G,GAAWuG,EAAa,CAC1C/E,eAvFmB,SAAC5L,GAGpBkC,EAAK1c,gBACDqrB,GACA3O,EAAK2O,aAAazQ,GAAiBJ,EAAO,QAAQM,MAE1D,EAiFI2K,QAhFY,SAACjL,EAAOwB,GAEpB,IAAAuP,EAA+C7O,EAAK9X,WAA5CgI,EAAI2e,EAAJ3e,KAAM4e,EAAeD,EAAfC,gBAAiBC,EAAWF,EAAXE,YAC/B,IAAI7e,GAAS4e,IACL9O,EAAKmO,gBACLnO,EAAKmO,iBACTnO,EAAKmO,eAAiBxP,GAAczO,GAE/B8P,EAAKmO,gBALd,CAQAnO,EAAKoO,YAAa,EAClBpO,EAAKqO,iBAAmB,KACxBrO,EAAKgP,qBACDhP,EAAKnd,cAAcmY,aACnBgF,EAAKnd,cAAcmY,WAAWiU,oBAAqB,EACnDjP,EAAKnd,cAAcmY,WAAW/qB,YAASsF,GAK3Cq2B,IAAS,SAACzB,GACN,IAAIjzB,EAAU8oB,EAAKkP,mBAAmB/E,GAAMp6B,OAAS,EAIrD,GAAIo/B,EAAAA,GAAQxoB,KAAKzP,GAAU,CACvB,IAAQ8jB,EAAegF,EAAKnd,cAApBmY,WACR,GAAIA,GAAcA,EAAWxK,OAAQ,CACjC,IAAM4e,EAAepU,EAAWxK,OAAO6e,UAAUlF,GACjD,GAAIiF,EAEAl4B,EADegzB,GAAWkF,IACNE,WAAWp4B,GAAW,IAElD,CACJ,CACA8oB,EAAKuK,YAAYJ,GAAQjzB,CAC7B,IAEI63B,GACAvxB,GAAAA,GAAMJ,QAAO,kBAAM2xB,EAAYjR,EAAOwB,EAAK,IAAE,GAAO,GAExD,IAAQvW,EAAmBiX,EAAKnd,cAAxBkG,eACRA,GAAkBA,EAAeyW,UAAU,aAAa,EAjCxD,CAkCJ,EAqCIwJ,OApCW,SAAClL,EAAOwB,GAEnB,IAAAiQ,EAAyEvP,EAAK9X,WAAtE4mB,EAAeS,EAAfT,gBAAiBU,EAAiBD,EAAjBC,kBAAmBC,EAAeF,EAAfE,gBAAiBC,EAAMH,EAANG,OAE7D,GAAKZ,GAAoB9O,EAAKmO,eAA9B,CAEA,IAAQ53B,EAAW+oB,EAAX/oB,OAER,GAAIi5B,GAA+C,OAA1BxP,EAAKqO,iBAM1B,OALArO,EAAKqO,iBA6UrB,SAA6B93B,GAA4B,IAApBo5B,EAAa9+B,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,GAC7CyU,EAAY,KACZ3R,KAAKC,IAAI2C,EAAO+d,GAAKqb,EACrBrqB,EAAY,IAEP3R,KAAKC,IAAI2C,EAAOjD,GAAKq8B,IAC1BrqB,EAAY,KAEhB,OAAOA,CACX,CAtVwCsqB,CAAoBr5B,QAEd,OAA1BypB,EAAKqO,kBACLoB,GAAmBA,EAAgBzP,EAAKqO,mBAKhDrO,EAAK6P,WAAW,IAAKvQ,EAAKlB,MAAO7nB,GACjCypB,EAAK6P,WAAW,IAAKvQ,EAAKlB,MAAO7nB,GAOjCypB,EAAKnd,cAAc8P,SAKnB+c,GAAUA,EAAO5R,EAAOwB,EAzBd,CA0Bd,EAMIiK,aALiB,SAACzL,EAAOwB,GAAI,OAAKU,EAAKviB,KAAKqgB,EAAOwB,EAAK,GAMzD,CAAEvT,mBAAoB9a,KAAK4R,cAAcitB,yBA5FlC,CA6Fd,GAAC,CAAA19B,IAAA,OAAArB,MACD,SAAK+sB,EAAOwB,GACR,IAAM8O,EAAan9B,KAAKm9B,WAExB,GADAn9B,KAAK4Q,SACAusB,EAAL,CAEA,IAAQn2B,EAAaqnB,EAAbrnB,SACRhH,KAAK8+B,eAAe93B,GACpB,IAAQ+3B,EAAc/+B,KAAKiX,WAAnB8nB,UACJA,GACAxyB,GAAAA,GAAMJ,QAAO,kBAAM4yB,EAAUlS,EAAOwB,EAAK,GALnC,CAOd,GAAC,CAAAltB,IAAA,SAAArB,MACD,WACIE,KAAKm9B,YAAa,EAClB,IAAA6B,EAAuCh/B,KAAK4R,cAApCmY,EAAUiV,EAAVjV,WAAYjS,EAAcknB,EAAdlnB,eAChBiS,IACAA,EAAWiU,oBAAqB,GAEpCh+B,KAAK29B,YAAc39B,KAAK29B,WAAWxF,MACnCn4B,KAAK29B,gBAAar5B,GACUtE,KAAKiX,WAAzB4mB,iBACgB79B,KAAKk9B,iBACzBl9B,KAAKk9B,iBACLl9B,KAAKk9B,eAAiB,MAE1BplB,GAAkBA,EAAeyW,UAAU,aAAa,EAC5D,GAAC,CAAAptB,IAAA,aAAArB,MACD,SAAWo5B,EAAM+F,EAAQ35B,GACrB,IAAQ2Z,EAASjf,KAAKiX,WAAdgI,KAER,GAAK3Z,GAAW45B,GAAWhG,EAAMja,EAAMjf,KAAKo9B,kBAA5C,CAEA,IAAM+B,EAAYn/B,KAAKi+B,mBAAmB/E,GACtCrzB,EAAO7F,KAAKs5B,YAAYJ,GAAQ5zB,EAAO4zB,GAEvCl5B,KAAKq9B,aAAer9B,KAAKq9B,YAAYnE,KACrCrzB,EPzKZ,SAA0BsnB,EAAK1oB,EAAgB84B,GAAS,IAArBlzB,EAAG5F,EAAH4F,IAAKlE,EAAG1B,EAAH0B,IASpC,YARY7B,IAAR+F,GAAqB8iB,EAAQ9iB,EAE7B8iB,EAAQoQ,GAAUhE,EAAAA,GAAAA,GAAIlvB,EAAK8iB,EAAOoQ,EAAQlzB,KAAO3H,KAAKyD,IAAIgnB,EAAO9iB,QAEpD/F,IAAR6B,GAAqBgnB,EAAQhnB,IAElCgnB,EAAQoQ,GAAUhE,EAAAA,GAAAA,GAAIpzB,EAAKgnB,EAAOoQ,EAAQp3B,KAAOzD,KAAK2H,IAAI8iB,EAAOhnB,IAE9DgnB,CACX,CO+JmBiS,CAAiBv5B,EAAM7F,KAAKq9B,YAAYnE,GAAOl5B,KAAKu9B,QAAQrE,KAEvEiG,EAAUhtB,IAAItM,EAPJ,CAQd,GAAC,CAAA1E,IAAA,qBAAArB,MACD,WAAqB,IAAAovB,EAAA,KACjBmQ,EAAyCr/B,KAAKiX,WAAtCqoB,EAAeD,EAAfC,gBAAiBlF,EAAWiF,EAAXjF,YACjB7a,GAAWvf,KAAK4R,cAAcmY,YAAc,CAAC,GAA7CxK,OACFggB,EAAkBv/B,KAAKq9B,YACzBiC,GAAmB7hB,EAAY6hB,GAC1Bt/B,KAAKq9B,cACNr9B,KAAKq9B,YAAcr9B,KAAKw/B,yBAKxBx/B,KAAKq9B,eADLiC,IAAmB/f,IP3JnC,SAAiC6e,EAASprB,GAAgC,IAA5B6nB,EAAG7nB,EAAH6nB,IAAKC,EAAI9nB,EAAJ8nB,KAAME,EAAMhoB,EAANgoB,OAAQD,EAAK/nB,EAAL+nB,MAC7D,MAAO,CACH14B,EAAGy3B,GAA4BsE,EAAU/7B,EAAGy4B,EAAMC,GAClD1X,EAAGyW,GAA4BsE,EAAU/a,EAAGwX,EAAKG,GAEzD,COuJmCyE,CAAwBlgB,EAAO6e,UAAWkB,GAMrEt/B,KAAKu9B,QPpGb,WAA0D,IAA9BnD,EAAWx6B,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAGs6B,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH73B,EAAG83B,GAAmBC,EAAa,OAAQ,SAC3C/W,EAAG8W,GAAmBC,EAAa,MAAO,UAElD,COyFuBsF,CAAmBtF,GAK9BmF,IAAoBv/B,KAAKq9B,aACzB9d,GACAvf,KAAKq9B,cACJr9B,KAAKs9B,uBACN3C,IAAS,SAACzB,GACFhK,EAAK+O,mBAAmB/E,KACxBhK,EAAKmO,YAAYnE,GP7HrC,SAA+B3Z,EAAQ8d,GACnC,IAAMsC,EAAsB,CAAC,EAO7B,YANwBr7B,IAApB+4B,EAAYhzB,MACZs1B,EAAoBt1B,IAAMgzB,EAAYhzB,IAAMkV,EAAOlV,UAE/B/F,IAApB+4B,EAAYl3B,MACZw5B,EAAoBx5B,IAAMk3B,EAAYl3B,IAAMoZ,EAAOlV,KAEhDs1B,CACX,COoH6CC,CAAsBrgB,EAAO6e,UAAUlF,GAAOhK,EAAKmO,YAAYnE,IAEhG,GAER,GAAC,CAAA/3B,IAAA,wBAAArB,MACD,WACI,IAAA+/B,EAAmE7/B,KAAKiX,WAA/ComB,EAAWwC,EAA5BP,gBAA8BQ,EAAwBD,EAAxBC,yBACtC,IAAKzC,IAAgB5f,EAAY4f,GAC7B,OAAO,EACX,IAAM0C,EAAqB1C,EAAYp3B,SACvC9B,EAAAA,GAAAA,GAAiC,OAAvB47B,EAA6B,0GACvC,IAAQhW,EAAe/pB,KAAK4R,cAApBmY,WAER,IAAKA,IAAeA,EAAWxK,OAC3B,OAAO,EACX,IAAMygB,ED5Nd,SAAwBjsB,EAASksB,EAAoBnlB,GACjD,IAAMolB,EAActD,GAAmB7oB,EAAS+G,GACxCqlB,EAAWF,EAAXE,OAKR,OAJIA,IACAhE,GAAc+D,EAAY79B,EAAG89B,EAAO76B,OAAOjD,GAC3C85B,GAAc+D,EAAY7c,EAAG8c,EAAO76B,OAAO+d,IAExC6c,CACX,CCoN+BE,CAAeL,EAAoBhW,EAAW+H,KAAM9xB,KAAK4R,cAAcitB,yBAC1FwB,EPtKZ,SAAiCjC,EAAW4B,GACxC,MAAO,CACH39B,EAAG03B,GAA4BqE,EAAU/7B,EAAG29B,EAAe39B,GAC3DghB,EAAG0W,GAA4BqE,EAAU/a,EAAG2c,EAAe3c,GAEnE,COiKkCid,CAAwBvW,EAAWxK,OAAO6e,UAAW4B,GAK/E,GAAIF,EAA0B,CAC1B,IAAMS,EAAkBT,EJ9NpC,SAAgC9sB,GAAW,IAAR3Q,EAAC2Q,EAAD3Q,EAAGghB,EAACrQ,EAADqQ,EAClC,MAAO,CAAEwX,IAAKxX,EAAEhZ,IAAK0wB,MAAO14B,EAAE8D,IAAK60B,OAAQ3X,EAAEld,IAAK20B,KAAMz4B,EAAEgI,IAC9D,CI4N6Dm2B,CAAwBH,IACzErgC,KAAKs9B,wBAA0BiD,EAC3BA,IACAF,EAAsBzF,GAAwB2F,GAEtD,CACA,OAAOF,CACX,GAAC,CAAAl/B,IAAA,iBAAArB,MACD,SAAekH,GAAU,IAAAy5B,EAAA,KACrBC,EAAoG1gC,KAAKiX,WAAjGgI,EAAIyhB,EAAJzhB,KAAM0hB,EAAYD,EAAZC,aAAcvG,EAAWsG,EAAXtG,YAAawG,EAAcF,EAAdE,eAAgBC,EAAgBH,EAAhBG,iBAAkBC,EAAmBJ,EAAnBI,oBACrEzD,EAAcr9B,KAAKq9B,aAAe,CAAC,EACnC0D,EAAqBpG,IAAS,SAACzB,GACjC,GAAKgG,GAAWhG,EAAMja,EAAMwhB,EAAKrD,kBAAjC,CAGA,IAAItnB,EAAcunB,GAAeA,EAAYnE,IAAU,CAAC,EACpD2H,IACA/qB,EAAa,CAAEzL,IAAK,EAAGlE,IAAK,IAOhC,IAAMgF,EAAkBivB,EAAc,IAAM,IACtCnvB,EAAgBmvB,EAAc,GAAK,IACnCzvB,GAAOnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACTyE,KAAM,UACNjH,SAAU25B,EAAe35B,EAASkyB,GAAQ,EAC1C/tB,gBAAAA,EACAF,cAAAA,EACAF,aAAc,IACd7B,UAAW,EACXC,UAAW,IACRy3B,GACA9qB,GAKP,OAAO2qB,EAAKO,wBAAwB9H,EAAMvuB,EA1B1C,CA2BJ,IAEA,OAAOoE,QAAQmD,IAAI6uB,GAAoBhwB,KAAK+vB,EAChD,GAAC,CAAA3/B,IAAA,0BAAArB,MACD,SAAwBo5B,EAAMpjB,GAC1B,IAAMqpB,EAAYn/B,KAAKi+B,mBAAmB/E,GAC1C,OAAOiG,EAAU7yB,OAAMuJ,EAAAA,GAAAA,GAAmBqjB,EAAMiG,EAAW,EAAGrpB,GAClE,GAAC,CAAA3U,IAAA,gBAAArB,MACD,WAAgB,IAAAmhC,EAAA,KACZtG,IAAS,SAACzB,GAAI,OAAK+H,EAAKhD,mBAAmB/E,GAAM1sB,MAAM,GAC3D,GACA,CAAArL,IAAA,qBAAArB,MAMA,SAAmBo5B,GACf,IAAMgI,EAAU,QAAUhI,EAAKtO,cACzB5M,EAAQhe,KAAK4R,cAAcqF,WAC3BkqB,EAAsBnjB,EAAMkjB,GAClC,OAAOC,GAEDnhC,KAAK4R,cAAcgG,SAASshB,GAAOlb,EAAMO,QAAUP,EAAMO,QAAQ2a,QAAQ50B,IAAc,EACjG,GAAC,CAAAnD,IAAA,eAAArB,MACD,SAAaqtB,GAAO,IAAAiU,EAAA,KAChBzG,IAAS,SAACzB,GAGN,GAAKgG,GAAWhG,EAFCkI,EAAKnqB,WAAdgI,KAEoBmiB,EAAKhE,kBAAjC,CAEA,IAAQrT,EAAeqX,EAAKxvB,cAApBmY,WACFoV,EAAYiC,EAAKnD,mBAAmB/E,GAC1C,GAAInP,GAAcA,EAAWxK,OAAQ,CACjC,IAAA8hB,EAAqBtX,EAAWxK,OAAO6e,UAAUlF,GAAzC7uB,EAAGg3B,EAAHh3B,IAAKlE,EAAGk7B,EAAHl7B,IACbg5B,EAAUhtB,IAAIgb,EAAM+L,IAAQK,EAAAA,GAAAA,GAAIlvB,EAAKlE,EAAK,IAC9C,CANU,CAOd,GACJ,GACA,CAAAhF,IAAA,iCAAArB,MAKA,WAAiC,IAAAwhC,EAAA,KAC7B,GAAKthC,KAAK4R,cAAc3L,QAAxB,CAEA,IAAAs7B,EAAkCvhC,KAAKiX,WAA/BgI,EAAIsiB,EAAJtiB,KAAMqgB,EAAeiC,EAAfjC,gBACNvV,EAAe/pB,KAAK4R,cAApBmY,WACR,GAAKtM,EAAY6hB,IAAqBvV,GAAe/pB,KAAKq9B,YAA1D,CAMAr9B,KAAKqS,gBAKL,IAAMmvB,EAAc,CAAEn/B,EAAG,EAAGghB,EAAG,GAC/BsX,IAAS,SAACzB,GACN,IAAMiG,EAAYmC,EAAKrD,mBAAmB/E,GAC1C,GAAIiG,EAAW,CACX,IAAMpzB,EAASozB,EAAUrgC,MACzB0iC,EAAYtI,GP5Q5B,SAAoBj4B,EAAQjC,GACxB,IAAIqK,EAAS,GACPo4B,EAAexI,GAAWh4B,GAC1BygC,EAAezI,GAAWj6B,GAOhC,OANI0iC,EAAeD,EACfp4B,GAAS8G,EAAAA,GAAAA,GAASnR,EAAOqL,IAAKrL,EAAOmH,IAAMs7B,EAAcxgC,EAAOoJ,KAE3Do3B,EAAeC,IACpBr4B,GAAS8G,EAAAA,GAAAA,GAASlP,EAAOoJ,IAAKpJ,EAAOkF,IAAMu7B,EAAc1iC,EAAOqL,OAE7D/C,EAAAA,GAAAA,GAAM,EAAG,EAAG+B,EACvB,COiQoC6d,CAAW,CAAE7c,IAAK0B,EAAQ5F,IAAK4F,GAAUu1B,EAAKjE,YAAYnE,GAClF,CACJ,IAIA,IAAQpV,EAAsB9jB,KAAK4R,cAAcqF,WAAzC6M,kBACR9jB,KAAK4R,cAAc3L,QAAQ8d,MAAMJ,UAAYG,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNiG,EAAW+H,MAAQ/H,EAAW+H,KAAK6P,eACnC5X,EAAW6X,eACX5hC,KAAK+9B,qBAKLpD,IAAS,SAACzB,GACN,GAAKgG,GAAWhG,EAAMja,EAAM,MAA5B,CAKA,IAAMkgB,EAAYmC,EAAKrD,mBAAmB/E,GAC1C2I,EAAqBP,EAAKjE,YAAYnE,GAA9B7uB,EAAGw3B,EAAHx3B,IAAKlE,EAAG07B,EAAH17B,IACbg5B,EAAUhtB,KAAIonB,EAAAA,GAAAA,GAAIlvB,EAAKlE,EAAKq7B,EAAYtI,IAN9B,CAOd,GAzCU,CAJA,CA8Cd,GAAC,CAAA/3B,IAAA,eAAArB,MACD,WAAe,IAAAgiC,EAAA,KACX,GAAK9hC,KAAK4R,cAAc3L,QAAxB,CAEA+2B,GAAoB7qB,IAAInS,KAAK4R,cAAe5R,MAC5C,IAIM+hC,EAAsB1U,GAJZrtB,KAAK4R,cAAc3L,QAIkB,eAAe,SAAC4mB,GACjE,IAAAmV,EAAsCF,EAAK7qB,WAAnCgI,EAAI+iB,EAAJ/iB,KAAIgjB,EAAAD,EAAE9b,aACdjH,SAD0B,IAAAgjB,GAAOA,IACTH,EAAKx1B,MAAMugB,EACvC,IACMqV,EAAyB,WAEvBzkB,EADwBqkB,EAAK7qB,WAAzBqoB,mBAEJwC,EAAKzE,YAAcyE,EAAKtC,wBAEhC,EACQzV,EAAe/pB,KAAK4R,cAApBmY,WACFoY,EAA4BpY,EAAW2C,iBAAiB,UAAWwV,GACrEnY,IAAeA,EAAWxK,SAC1BwK,EAAW+H,MAAQ/H,EAAW+H,KAAK6P,eACnC5X,EAAW6X,gBAEfM,IAKA,IAAME,EAAqB9V,GAAYhU,OAAQ,UAAU,kBAAMwpB,EAAKO,gCAAgC,IAK9FC,EAA2BvY,EAAW2C,iBAAiB,aAAc,SAAApS,GAAiC,IAA9B5S,EAAK4S,EAAL5S,MAAO66B,EAAgBjoB,EAAhBioB,iBAC7ET,EAAK3E,YAAcoF,IACnB5H,IAAS,SAACzB,GACN,IAAMsJ,EAAcV,EAAK7D,mBAAmB/E,GACvCsJ,IAELV,EAAKxI,YAAYJ,IAASxxB,EAAMwxB,GAAMM,UACtCgJ,EAAYrwB,IAAIqwB,EAAY1jC,MAAQ4I,EAAMwxB,GAAMM,WACpD,IACAsI,EAAKlwB,cAAc8P,SAE3B,IACA,OAAO,WACH0gB,IACAL,IACAI,IACAG,GAA4BA,GAChC,CAjDU,CAkDd,GAAC,CAAAnhC,IAAA,WAAArB,MACD,WACI,IAAMke,EAAQhe,KAAK4R,cAAcqF,WACjCwrB,EAA0JzkB,EAAlJiB,KAAAA,OAAI,IAAAwjB,GAAQA,EAAAC,EAAsI1kB,EAApIugB,kBAAAA,OAAiB,IAAAmE,GAAQA,EAAAC,EAA2G3kB,EAAzG6f,gBAAAA,OAAe,IAAA8E,GAAQA,EAAAC,EAAkF5kB,EAAhFshB,gBAAAA,OAAe,IAAAsD,GAAQA,EAAAC,EAAyD7kB,EAAvDoc,YAAAA,OAAW,IAAAyI,EAAG3I,GAAc2I,EAAAC,EAA2B9kB,EAAzB2iB,aAAAA,OAAY,IAAAmC,GAAOA,EACpJ,OAAAt5B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOwU,GAAK,IACRiB,KAAAA,EACAsf,kBAAAA,EACAV,gBAAAA,EACAyB,gBAAAA,EACAlF,YAAAA,EACAuG,aAAAA,GAER,KAAC1D,CAAA,CAzZ0B,GA2Z/B,SAASiC,GAAW7qB,EAAW4K,EAAMme,GACjC,QAAkB,IAATne,GAAiBA,IAAS5K,KACT,OAArB+oB,GAA6BA,IAAqB/oB,EAC3D,CCnb4E,IAEtE0uB,GAAW,SAAAtU,IAAAC,EAAAA,GAAAA,GAAAqU,EAAAtU,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAmU,GACb,SAAAA,EAAY/U,GAAM,IAAAe,EAIsC,OAJtC5T,EAAAA,GAAAA,GAAA,KAAA4nB,IACdhU,EAAAJ,EAAAnvB,KAAA,KAAMwuB,IACDgV,oBAAsB9gC,GAAAA,EAC3B6sB,EAAK2J,gBAAkBx2B,GAAAA,EACvB6sB,EAAKje,SAAW,IAAImsB,GAA0BjP,GAAMe,CACxD,CAaC,OAbAzT,EAAAA,GAAAA,GAAAynB,EAAA,EAAA5hC,IAAA,QAAArB,MACD,WAGI,IAAQmjC,EAAiBjjC,KAAKguB,KAAK/W,WAA3BgsB,aACJA,IACAjjC,KAAKgjC,oBAAsBC,EAAatxB,UAAU3R,KAAK8Q,WAE3D9Q,KAAK04B,gBAAkB14B,KAAK8Q,SAASoyB,gBAAkBhhC,GAAAA,CAC3D,GAAC,CAAAf,IAAA,UAAArB,MACD,WACIE,KAAKgjC,sBACLhjC,KAAK04B,iBACT,KAACqK,CAAA,CAnBY,CAAShV,ICEpBoV,GAAe,SAAC3W,GAAO,OAAK,SAACK,EAAOwB,GAClC7B,GACAjgB,GAAAA,GAAMJ,QAAO,kBAAMqgB,EAAQK,EAAOwB,EAAK,GAE/C,CAAC,EACK+U,GAAU,SAAA3U,IAAAC,EAAAA,GAAAA,GAAA0U,EAAA3U,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAwU,GACZ,SAAAA,IAAc,IAAArU,EAE4B,OAF5B5T,EAAAA,GAAAA,GAAA,KAAAioB,IACVrU,EAAAJ,EAAA5uB,MAAA,KAASH,YACJyjC,0BAA4BnhC,GAAAA,EAAK6sB,CAC1C,CA2BC,OA3BAzT,EAAAA,GAAAA,GAAA8nB,EAAA,EAAAjiC,IAAA,gBAAArB,MACD,SAAcwjC,GACVtjC,KAAKujC,QAAU,IAAItM,GAAWqM,EAAkBtjC,KAAKwjC,oBAAqB,CAAE1oB,mBAAoB9a,KAAKguB,KAAK6Q,yBAC9G,GAAC,CAAA19B,IAAA,oBAAArB,MACD,WAAoB,IAAAovB,EAAA,KAChBoB,EAA2DtwB,KAAKguB,KAAK/W,WAA7DwsB,EAAiBnT,EAAjBmT,kBAAmBC,EAAUpT,EAAVoT,WAAYC,EAAKrT,EAALqT,MAAOC,EAAQtT,EAARsT,SAC9C,MAAO,CACHnL,eAAgB0K,GAAaM,GAC7B3L,QAASqL,GAAaO,GACtB3L,OAAQ4L,EACRtL,MAAO,SAACxL,EAAOwB,UACJa,EAAKqU,QACRK,GACAr3B,GAAAA,GAAMJ,QAAO,kBAAMy3B,EAAS/W,EAAOwB,EAAK,GAEhD,EAER,GAAC,CAAAltB,IAAA,QAAArB,MACD,WAAQ,IAAA2gC,EAAA,KACJzgC,KAAKqjC,0BAA4BhW,GAAgBrtB,KAAKguB,KAAK/nB,QAAS,eAAe,SAAC4mB,GAAK,OAAK4T,EAAKoD,cAAchX,EAAM,GAC3H,GAAC,CAAA1rB,IAAA,SAAArB,MACD,WACIE,KAAKujC,SAAWvjC,KAAKujC,QAAQO,eAAe9jC,KAAKwjC,oBACrD,GAAC,CAAAriC,IAAA,UAAArB,MACD,WACIE,KAAKqjC,4BACLrjC,KAAKujC,SAAWvjC,KAAKujC,QAAQpL,KACjC,KAACiL,CAAA,CA/BW,CAASrV,ICNzB,IAAMgW,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQjL,GAC7B,OAAIA,EAAK/yB,MAAQ+yB,EAAK7uB,IACX,EACH85B,GAAUjL,EAAK/yB,IAAM+yB,EAAK7uB,KAAQ,GAC9C,CAQA,IAAM+5B,GAAsB,CACxBC,QAAS,SAACt4B,EAAQiiB,GACd,IAAKA,EAAKhvB,OACN,OAAO+M,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIob,EAAAA,GAAGzR,KAAK3J,GAIR,OAAOA,EAHPA,EAASsyB,WAAWtyB,EAK5B,CAKA,IAAM1J,EAAI6hC,GAAgBn4B,EAAQiiB,EAAKhvB,OAAOqD,GACxCghB,EAAI6gB,GAAgBn4B,EAAQiiB,EAAKhvB,OAAOqkB,GAC9C,MAAO,GAAP9e,OAAUlC,EAAC,MAAAkC,OAAK8e,EAAC,IACrB,G,UClCEihB,GAAmB,CACrBD,QAAS,SAACt4B,EAAMtH,GAAqC,IAAjC8/B,EAAS9/B,EAAT8/B,UAAWC,EAAe//B,EAAf+/B,gBACrBC,EAAW14B,EACX24B,EAASjvB,GAAAA,EAAQkvB,MAAM54B,GAE7B,GAAI24B,EAAO7kC,OAAS,EAChB,OAAO4kC,EACX,IAAMG,EAAWnvB,GAAAA,EAAQovB,kBAAkB94B,GACrCzG,EAA8B,kBAAdo/B,EAAO,GAAkB,EAAI,EAE7CI,EAASN,EAAgBniC,EAAEomB,MAAQ8b,EAAUliC,EAC7C0iC,EAASP,EAAgBnhB,EAAEoF,MAAQ8b,EAAUlhB,EACnDqhB,EAAO,EAAIp/B,IAAWw/B,EACtBJ,EAAO,EAAIp/B,IAAWy/B,EAOtB,IAAMC,GAAezL,EAAAA,GAAAA,GAAIuL,EAAQC,EAAQ,IAOzC,MALkC,kBAAvBL,EAAO,EAAIp/B,KAClBo/B,EAAO,EAAIp/B,IAAW0/B,GAEQ,kBAAvBN,EAAO,EAAIp/B,KAClBo/B,EAAO,EAAIp/B,IAAW0/B,GACnBJ,EAASF,EACpB,GCrBEO,GAAwB,SAAAC,IAAAxW,EAAAA,GAAAA,GAAAuW,EAAAC,GAAA,IAAAvW,GAAAC,EAAAA,GAAAA,GAAAqW,GAAA,SAAAA,IAAA,OAAA9pB,EAAAA,GAAAA,GAAA,KAAA8pB,GAAAtW,EAAA5uB,MAAA,KAAAH,UAAA,CAgGzB,OAhGyB0b,EAAAA,GAAAA,GAAA2pB,EAAA,EAAA9jC,IAAA,oBAAArB,MAM1B,WAAoB,I3DfGqlC,E2DeHpW,EAAA,KAChBqW,EAAoEplC,KAAKge,MAAjEpM,EAAawzB,EAAbxzB,cAAeyzB,EAAWD,EAAXC,YAAaC,EAAiBF,EAAjBE,kBAAmB1kB,EAAQwkB,EAARxkB,SAC/CmJ,EAAenY,EAAfmY,W3DjBWob,E2DkBDI,G3DjBtBlmC,OAAOwmB,OAAO3C,EAAiBiiB,G2DkBvBpb,IACIsb,EAAYG,OACZH,EAAYG,MAAM3zB,IAAIkY,GACtBub,GAAqBA,EAAkBvO,UAAYnW,GACnD0kB,EAAkBvO,SAAShN,GAE/BA,EAAW+H,KAAK2T,YAChB1b,EAAW2C,iBAAiB,qBAAqB,WAC7CqC,EAAK2W,cACT,IACA3b,EAAW4b,YAAUn8B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAChBugB,EAAWjhB,SAAO,IACrB6tB,eAAgB,kBAAM5H,EAAK2W,cAAc,MAGjD3B,GAAsBE,gBAAiB,CAC3C,GAAC,CAAA9iC,IAAA,0BAAArB,MACD,SAAwB0qB,GAAW,IAAA0E,EAAA,KAC/B0W,EAA6D5lC,KAAKge,MAA1D6nB,EAAgBD,EAAhBC,iBAAkBj0B,EAAag0B,EAAbh0B,cAAeqN,EAAI2mB,EAAJ3mB,KAAMyX,EAASkP,EAATlP,UACzC3M,EAAanY,EAAcmY,WACjC,OAAKA,GASLA,EAAW2M,UAAYA,EACnBzX,GACAuL,EAAUqb,mBAAqBA,QACVvhC,IAArBuhC,EACA9b,EAAW+b,aAGX9lC,KAAK0lC,eAELlb,EAAUkM,YAAcA,IACpBA,EACA3M,EAAWgc,UAELhc,EAAWic,YAMjBz5B,GAAAA,GAAM05B,YAAW,WACb,IAAMC,EAAQnc,EAAWoc,WACpBD,GAAUA,EAAME,QAAQvmC,QACzBqvB,EAAKwW,cAEb,KAGD,MAnCI,IAoCf,GAAC,CAAAvkC,IAAA,qBAAArB,MACD,WAAqB,IAAA2gC,EAAA,KACT1W,EAAe/pB,KAAKge,MAAMpM,cAA1BmY,WACJA,IACAA,EAAW+H,KAAK2T,YAChBY,gBAAe,YACNtc,EAAWuc,kBAAoBvc,EAAWwc,UAC3C9F,EAAKiF,cAEb,IAER,GAAC,CAAAvkC,IAAA,uBAAArB,MACD,WACI,IAAA0mC,EAA2ExmC,KAAKge,MAAxEpM,EAAa40B,EAAb50B,cAAeyzB,EAAWmB,EAAXnB,YAAgCoB,EAAcD,EAAjClB,kBAC5Bvb,EAAenY,EAAfmY,WACJA,IACAA,EAAW2c,4BACPrB,GAAeA,EAAYG,OAC3BH,EAAYG,MAAM5sB,OAAOmR,GACzB0c,GAAkBA,EAAeE,YACjCF,EAAeE,WAAW5c,GAEtC,GAAC,CAAA5oB,IAAA,eAAArB,MACD,WACI,IAAQ4lC,EAAiB1lC,KAAKge,MAAtB0nB,aACRA,GAAgBA,GACpB,GAAC,CAAAvkC,IAAA,SAAArB,MACD,WACI,OAAO,IACX,KAACmlC,CAAA,CAhGyB,CAAS2B,EAAAA,WAkGvC,SAASlmB,GAAc1C,GACnB,IAAA6oB,ECnFJ,WACI,IAAMvoB,GAAUI,EAAAA,EAAAA,YAAWpB,GAC3B,GAAgB,OAAZgB,EACA,MAAO,EAAC,EAAM,MAClB,IAAQoY,EAAwCpY,EAAxCoY,UAAWC,EAA6BrY,EAA7BqY,eAAgBI,EAAazY,EAAbyY,SAG7BvU,GAAKskB,EAAAA,EAAAA,SAGX,OAFAllB,EAAAA,EAAAA,YAAU,kBAAMmV,EAASvU,EAAG,GAAE,KAEtBkU,GAAaC,EAAiB,EAAC,EADlB,WAAH,OAASA,GAAkBA,EAAenU,EAAG,GACD,EAAC,EACnE,CDwEsCukB,GAAaC,GAAA3iC,EAAAA,GAAAA,GAAAwiC,EAAA,GAAxCnQ,EAASsQ,EAAA,GAAEtB,EAAYsB,EAAA,GACxB3B,GAAc3mB,EAAAA,EAAAA,YAAWgB,GAC/B,OAAQknB,EAAAA,cAA6B3B,IAAwBz7B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOwU,GAAK,IAAEqnB,YAAaA,EAAaC,mBAAmB5mB,EAAAA,EAAAA,YAAWiB,GAA2B+W,UAAWA,EAAWgP,aAAcA,IACtM,CACA,IAAMH,GAAyB,CAC3B0B,cAAYz9B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL46B,IAAmB,IACtB8C,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRC,oBAAqB/C,GACrBgD,qBAAsBhD,GACtBiD,uBAAwBjD,GACxBkD,wBAAyBlD,GACzBmD,UAAWjD,I,sBEzHTkD,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQ3nC,OACrB6nC,GAAW,SAAC5nC,GAAK,MAAsB,kBAAVA,EAAqBu+B,WAAWv+B,GAASA,CAAK,EAC3E6nC,GAAO,SAAC7nC,GAAK,MAAsB,kBAAVA,GAAsBqnB,EAAAA,GAAGzR,KAAK5V,EAAM,EA0CnE,SAAS8nC,GAAUljC,EAAQmjC,GACvB,YAA8BvjC,IAAvBI,EAAOmjC,GACRnjC,EAAOmjC,GACPnjC,EAAOuiC,YACjB,CAwBA,IAAMa,GAAkBC,GAAS,EAAG,GAAKlkC,GAAAA,IACnCmkC,GAAmBD,GAAS,GAAK,IAAM7lC,GAAAA,GAC7C,SAAS6lC,GAAS19B,EAAKlE,EAAKxB,GACxB,OAAO,SAACZ,GAEJ,OAAIA,EAAIsG,EACG,EACPtG,EAAIoC,EACG,EACJxB,GAAOwL,EAAAA,GAAAA,GAAS9F,EAAKlE,EAAKpC,GACrC,CACJ,CCrFA,SAASkkC,GAAa/O,EAAMgP,GACxBhP,EAAK7uB,IAAM69B,EAAW79B,IACtB6uB,EAAK/yB,IAAM+hC,EAAW/hC,GAC1B,CAMA,SAASgiC,GAAYpM,EAAKqM,GACtBH,GAAalM,EAAI15B,EAAG+lC,EAAU/lC,GAC9B4lC,GAAalM,EAAI1Y,EAAG+kB,EAAU/kB,EAClC,CCVA,SAASglB,GAAiBlb,EAAOqM,EAAW/Q,EAAO6Q,EAAasC,GAM5D,OAJAzO,EAAQuO,GADRvO,GAASqM,EACiB,EAAI/Q,EAAO6Q,QACpBh1B,IAAbs3B,IACAzO,EAAQuO,GAAWvO,EAAO,EAAIyO,EAAUtC,IAErCnM,CACX,CAsBA,SAASmb,GAAqBpP,EAAMmD,EAAU53B,EAA8B4E,EAAQk/B,GAAY,IAAAv1B,GAAA3O,EAAAA,GAAAA,GAAAI,EAAA,GAA/CtD,EAAG6R,EAAA,GAAEspB,EAAQtpB,EAAA,GAAEupB,EAASvpB,EAAA,IAlBzE,SAAyBkmB,GAA8F,IAAxFM,EAAS55B,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,EAAG6oB,EAAK7oB,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,EAAGyJ,EAAMzJ,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,GAAKg8B,EAAQh8B,UAAAC,OAAA,EAAAD,UAAA,QAAA0E,EAAE4jC,EAAUtoC,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAGs5B,EAAMqP,EAAU3oC,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAGs5B,EAM7G,GALIgF,EAAAA,GAAQxoB,KAAK8jB,KACbA,EAAY6E,WAAW7E,GAEvBA,GADyBD,EAAAA,GAAAA,GAAIgP,EAAWl+B,IAAKk+B,EAAWpiC,IAAKqzB,EAAY,KAC1C+O,EAAWl+B,KAErB,kBAAdmvB,EAAX,CAEA,IAAIF,GAAcC,EAAAA,GAAAA,GAAI2O,EAAW79B,IAAK69B,EAAW/hC,IAAKkD,GAClD6vB,IAASgP,IACT5O,GAAeE,GACnBN,EAAK7uB,IAAMg+B,GAAiBnP,EAAK7uB,IAAKmvB,EAAW/Q,EAAO6Q,EAAasC,GACrE1C,EAAK/yB,IAAMkiC,GAAiBnP,EAAK/yB,IAAKqzB,EAAW/Q,EAAO6Q,EAAasC,EAL3D,CAMd,CAMI4M,CAAgBtP,EAAMmD,EAAWl7B,GAAMk7B,EAAWC,GAAWD,EAAWE,GAAYF,EAAW5T,MAAOpf,EAAQk/B,EAClH,CAIA,IAAM9L,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAAS+L,GAAoB1M,EAAKM,EAAY+L,EAAWM,GACrDJ,GAAqBvM,EAAI15B,EAAGg6B,EAAYI,GAAO2L,EAAYA,EAAU/lC,OAAIiC,EAAWokC,EAAYA,EAAUrmC,OAAIiC,GAC9GgkC,GAAqBvM,EAAI1Y,EAAGgZ,EAAYK,GAAO0L,EAAYA,EAAU/kB,OAAI/e,EAAWokC,EAAYA,EAAUrlB,OAAI/e,EAClH,C,eCjDA,SAASqkC,GAAgBjhC,GACrB,OAA2B,IAApBA,EAAM8xB,WAAmC,IAAhB9xB,EAAM+gB,KAC1C,CACA,SAASmgB,GAAYlhC,GACjB,OAAOihC,GAAgBjhC,EAAMrF,IAAMsmC,GAAgBjhC,EAAM2b,EAC7D,CAOA,SAASwlB,GAAiBlhC,EAAGC,GACzB,OAAQlF,KAAKqN,MAAMpI,EAAEtF,EAAEgI,OAAS3H,KAAKqN,MAAMnI,EAAEvF,EAAEgI,MAC3C3H,KAAKqN,MAAMpI,EAAEtF,EAAE8D,OAASzD,KAAKqN,MAAMnI,EAAEvF,EAAE8D,MACvCzD,KAAKqN,MAAMpI,EAAE0b,EAAEhZ,OAAS3H,KAAKqN,MAAMnI,EAAEyb,EAAEhZ,MACvC3H,KAAKqN,MAAMpI,EAAE0b,EAAEld,OAASzD,KAAKqN,MAAMnI,EAAEyb,EAAEld,IAC/C,CACA,SAAS2iC,GAAY/M,GACjB,OAAO9C,GAAW8C,EAAI15B,GAAK42B,GAAW8C,EAAI1Y,EAC9C,C,eCpBM0lB,GAAS,WACX,SAAAA,KAAc5tB,EAAAA,GAAAA,GAAA,KAAA4tB,GACV/oC,KAAKomC,QAAU,EACnB,CAuGC,OAvGA9qB,EAAAA,GAAAA,GAAAytB,EAAA,EAAA5nC,IAAA,MAAArB,MACD,SAAIkuB,IACAgb,EAAAA,GAAAA,IAAchpC,KAAKomC,QAASpY,GAC5BA,EAAKib,gBACT,GAAC,CAAA9nC,IAAA,SAAArB,MACD,SAAOkuB,GAKH,IAJAkb,EAAAA,GAAAA,IAAWlpC,KAAKomC,QAASpY,GACrBA,IAAShuB,KAAKmpC,WACdnpC,KAAKmpC,cAAW7kC,GAEhB0pB,IAAShuB,KAAKopC,KAAM,CACpB,IAAMD,EAAWnpC,KAAKomC,QAAQpmC,KAAKomC,QAAQvmC,OAAS,GAChDspC,GACAnpC,KAAK+lC,QAAQoD,EAErB,CACJ,GAAC,CAAAhoC,IAAA,WAAArB,MACD,SAASkuB,GACL,IAMImb,EANEE,EAAcrpC,KAAKomC,QAAQkD,WAAU,SAACC,GAAM,OAAKvb,IAASub,CAAM,IACtE,GAAoB,IAAhBF,EACA,OAAO,EAKX,IAAK,IAAIjoC,EAAIioC,EAAajoC,GAAK,EAAGA,IAAK,CACnC,IAAMmoC,EAASvpC,KAAKomC,QAAQhlC,GAC5B,IAAyB,IAArBmoC,EAAO7S,UAAqB,CAC5ByS,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAnpC,KAAK+lC,QAAQoD,IACN,EAKf,GAAC,CAAAhoC,IAAA,UAAArB,MACD,SAAQkuB,EAAMwb,GACV,IAAML,EAAWnpC,KAAKopC,KAClBpb,IAASmb,IAEbnpC,KAAKmpC,SAAWA,EAChBnpC,KAAKopC,KAAOpb,EACZA,EAAKyb,OACDN,IACAA,EAAS/mB,UAAY+mB,EAASF,iBAC9Bjb,EAAKib,iBACLjb,EAAK0b,WAAaP,EACdK,IACAxb,EAAK0b,WAAWC,iBAAkB,GAElCR,EAASS,WACT5b,EAAK4b,SAAWT,EAASS,SACzB5b,EAAK4b,SAAS/lB,aACVslB,EAASU,iBAAmBV,EAAStlB,cAEzCmK,EAAK8D,MAAQ9D,EAAK8D,KAAKgY,aACvB9b,EAAK+b,eAAgB,IAGP,IADI/b,EAAKllB,QAAnBkhC,WAEJb,EAASc,QAerB,GAAC,CAAA9oC,IAAA,wBAAArB,MACD,WACIE,KAAKomC,QAAQxlC,SAAQ,SAACotB,GAClB,IAAQllB,EAA0BklB,EAA1BllB,QAASohC,EAAiBlc,EAAjBkc,aACjBphC,EAAQ6tB,gBAAkB7tB,EAAQ6tB,iBAC9BuT,GACAA,EAAaphC,QAAQ6tB,gBACjBuT,EAAaphC,QAAQ6tB,gBAEjC,GACJ,GAAC,CAAAx1B,IAAA,iBAAArB,MACD,WACIE,KAAKomC,QAAQxlC,SAAQ,SAACotB,GAClBA,EAAK5L,UAAY4L,EAAKib,gBAAe,EACzC,GACJ,GACA,CAAA9nC,IAAA,qBAAArB,MAIA,WACQE,KAAKopC,MAAQppC,KAAKopC,KAAKQ,WACvB5pC,KAAKopC,KAAKQ,cAAWtlC,EAE7B,KAACykC,CAAA,CA1GU,GCFf,SAASoB,GAAyBziC,EAAO68B,EAAW6F,GAChD,IAAIzmB,EAAY,GAOV0mB,EAAa3iC,EAAMrF,EAAEm3B,UAAY+K,EAAUliC,EAC3CioC,EAAa5iC,EAAM2b,EAAEmW,UAAY+K,EAAUlhB,EAWjD,IAVIgnB,GAAcC,KACd3mB,EAAY,eAAHpf,OAAkB8lC,EAAU,QAAA9lC,OAAO+lC,EAAU,YAMtC,IAAhB/F,EAAUliC,GAA2B,IAAhBkiC,EAAUlhB,IAC/BM,GAAa,SAAJpf,OAAa,EAAIggC,EAAUliC,EAAC,MAAAkC,OAAK,EAAIggC,EAAUlhB,EAAC,OAEzD+mB,EAAiB,CACjB,IAAQ9O,EAA6B8O,EAA7B9O,OAAQC,EAAqB6O,EAArB7O,QAASC,EAAY4O,EAAZ5O,QACrBF,IACA3X,GAAa,UAAJpf,OAAc+2B,EAAM,UAC7BC,IACA5X,GAAa,WAAJpf,OAAeg3B,EAAO,UAC/BC,IACA7X,GAAa,WAAJpf,OAAei3B,EAAO,SACvC,CAKA,IAAM+O,EAAgB7iC,EAAMrF,EAAEomB,MAAQ8b,EAAUliC,EAC1CmoC,EAAgB9iC,EAAM2b,EAAEoF,MAAQ8b,EAAUlhB,EAIhD,OAHsB,IAAlBknB,GAAyC,IAAlBC,IACvB7mB,GAAa,SAAJpf,OAAagmC,EAAa,MAAAhmC,OAAKimC,EAAa,MAElD7mB,GAAa,MACxB,CCvCA,IAAM8mB,GAAiB,SAAC9iC,EAAGC,GAAC,OAAKD,EAAE+iC,MAAQ9iC,EAAE8iC,KAAK,ECG5CC,GAAQ,WACV,SAAAA,KAAcxvB,EAAAA,GAAAA,GAAA,KAAAwvB,GACV3qC,KAAK0pB,SAAW,GAChB1pB,KAAK4qC,SAAU,CACnB,CAaC,OAbAtvB,EAAAA,GAAAA,GAAAqvB,EAAA,EAAAxpC,IAAA,MAAArB,MACD,SAAIoa,IACA8uB,EAAAA,GAAAA,IAAchpC,KAAK0pB,SAAUxP,GAC7Bla,KAAK4qC,SAAU,CACnB,GAAC,CAAAzpC,IAAA,SAAArB,MACD,SAAOoa,IACHgvB,EAAAA,GAAAA,IAAWlpC,KAAK0pB,SAAUxP,GAC1Bla,KAAK4qC,SAAU,CACnB,GAAC,CAAAzpC,IAAA,UAAArB,MACD,SAAQqT,GACJnT,KAAK4qC,SAAW5qC,KAAK0pB,SAAS1P,KAAKywB,IACnCzqC,KAAK4qC,SAAU,EACf5qC,KAAK0pB,SAAS9oB,QAAQuS,EAC1B,KAACw3B,CAAA,CAjBS,G,eCuBd,IAAME,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMjCroB,GAAK,EAKHsoB,GAAsB,CACxB78B,KAAM,kBACN88B,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,GAAoBzmC,GAA6F,IAA1F0mC,EAAoB1mC,EAApB0mC,qBAAsBC,EAAa3mC,EAAb2mC,cAAeC,EAAa5mC,EAAb4mC,cAAeC,EAAiB7mC,EAAjB6mC,kBAAmBC,EAAc9mC,EAAd8mC,eACnG,kBACI,SAAAC,IAAuH,IAAAzc,EAAA,KAA3GlL,EAAYjkB,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGohB,EAAMphB,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAqB,OAAlBwrC,QAA4C,IAAlBA,OAA2B,EAASA,KAAejwB,EAAAA,GAAAA,GAAA,KAAAqwB,GAIjHxrC,KAAKwiB,GAAKA,KAIVxiB,KAAKyrC,YAAc,EAOnBzrC,KAAK0pB,SAAW,IAAIhY,IAKpB1R,KAAK8I,QAAU,CAAC,EAMhB9I,KAAK0rC,iBAAkB,EACvB1rC,KAAKg+B,oBAAqB,EAO1Bh+B,KAAK+pC,eAAgB,EAKrB/pC,KAAK2rC,mBAAoB,EAKzB3rC,KAAK4rC,yBAA0B,EAK/B5rC,KAAK6rC,kBAAmB,EAIxB7rC,KAAK8rC,uBAAwB,EAC7B9rC,KAAK+rC,uBAAwB,EAK7B/rC,KAAK8pC,YAAa,EAIlB9pC,KAAKgsC,OAAQ,EAKbhsC,KAAKisC,YAAa,EAIlBjsC,KAAKksC,sBAAuB,EAS5BlsC,KAAKukC,UAAY,CAAEliC,EAAG,EAAGghB,EAAG,GAI5BrjB,KAAKmsC,cAAgB,IAAItpB,IACzB7iB,KAAKosC,iBAAkB,EAEvBpsC,KAAKqsC,iBAAkB,EACvBrsC,KAAKssC,kBAAoB,WACjBvd,EAAK+a,aACL/a,EAAK+a,YAAa,EAClB/a,EAAKwd,oBAEb,EAMAvsC,KAAKwsC,iBAAmB,WCjJpC,IAAgBC,EDsJA3B,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZlc,EAAK2d,MAAM9rC,QAAQ+rC,IACnB5d,EAAK2d,MAAM9rC,QAAQgsC,IACnB7d,EAAK2d,MAAM9rC,QAAQisC,IACnB9d,EAAK2d,MAAM9rC,QAAQksC,IC7JnBL,ED8JO3B,GC7JfxyB,OAAOy0B,aACPz0B,OAAOy0B,YAAYC,OAAOP,ED6JtB,EACAzsC,KAAKitC,cAAe,EACpBjtC,KAAKktC,WAAY,EACjBltC,KAAKmtC,kBAAoB,EAKzBntC,KAAKotC,YAAc,IAAIvqB,IACvB7iB,KAAK6jB,aAAeA,EACpB7jB,KAAK8xB,KAAO9Q,EAASA,EAAO8Q,MAAQ9Q,EAAShhB,KAC7CA,KAAKqtC,KAAOrsB,EAAS,GAAHzc,QAAA6K,EAAAA,GAAAA,GAAO4R,EAAOqsB,MAAI,CAAErsB,IAAU,GAChDhhB,KAAKghB,OAASA,EACdhhB,KAAK0qC,MAAQ1pB,EAASA,EAAO0pB,MAAQ,EAAI,EACzC,IAAK,IAAItpC,EAAI,EAAGA,EAAIpB,KAAKqtC,KAAKxtC,OAAQuB,IAClCpB,KAAKqtC,KAAKjsC,GAAG8qC,sBAAuB,EAEpClsC,KAAK8xB,OAAS9xB,OACdA,KAAK0sC,MAAQ,IAAI/B,GACzB,CAglCC,OAhlCArvB,EAAAA,GAAAA,GAAAkwB,EAAA,EAAArqC,IAAA,mBAAArB,MACD,SAAiBme,EAAMuO,GAInB,OAHKxsB,KAAKmsC,cAAc14B,IAAIwK,IACxBje,KAAKmsC,cAAch6B,IAAI8L,EAAM,IAAIqvB,GAAAA,GAE9BttC,KAAKmsC,cAAcrtC,IAAImf,GAAMpM,IAAI2a,EAC5C,GAAC,CAAArrB,IAAA,kBAAArB,MACD,SAAgBme,GAC6C,IAAzD,IAAMsvB,EAAsBvtC,KAAKmsC,cAAcrtC,IAAImf,GAAMuvB,EAAA5tC,UAAAC,OADpC4tC,EAAI,IAAAvqC,MAAAsqC,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,EAAA,GAAA9tC,UAAA8tC,GAEzBH,GAAuBA,EAAoBpzB,OAAMpa,MAA1BwtC,EAA8BE,EACzD,GAAC,CAAAtsC,IAAA,eAAArB,MACD,SAAame,GACT,OAAOje,KAAKmsC,cAAc14B,IAAIwK,EAClC,GACA,CAAA9c,IAAA,QAAArB,MAGA,SAAMsiB,GAAqD,IAAA8M,EAAA,KAA3C6a,EAAanqC,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAGI,KAAK8xB,KAAKsa,gBACtC,IAAIpsC,KAAKoiB,SAAT,CEpMZ,IAAsBrO,EFsMV/T,KAAKgsC,OEtMKj4B,EFsMgBqO,aErMRurB,YAAkC,QAApB55B,EAAQqY,QFsMxCpsB,KAAKoiB,SAAWA,EAChB,IAAAwrB,EAA4C5tC,KAAK8I,QAAzC8X,EAAQgtB,EAARhtB,SAAUrB,EAAMquB,EAANruB,OAAQ3N,EAAag8B,EAAbh8B,cAS1B,GARIA,IAAkBA,EAAc3L,SAChC2L,EAAcU,MAAM8P,GAExBpiB,KAAK8xB,KAAK4a,MAAM76B,IAAI7R,MACpBA,KAAKghB,QAAUhhB,KAAKghB,OAAO0I,SAAS7X,IAAI7R,MACpC+pC,IAAkBxqB,GAAUqB,KAC5B5gB,KAAK+pC,eAAgB,GAErBoB,EAAsB,CACtB,IAAI0C,EACEC,EAAsB,WAAH,OAAU5e,EAAK4C,KAAKia,uBAAwB,CAAK,EAC1EZ,EAAqB/oB,GAAU,WAC3B8M,EAAK4C,KAAKia,uBAAwB,EAClC8B,GAAeA,IACfA,EGlNpB,SAAe16B,EAAU46B,GACrB,IAAMzhC,EAAQO,YAAYH,MACpBshC,EAAe,SAAfA,EAAYvpC,GAAsB,IAC9BwL,EADuBxL,EAAT4H,UACQC,EACxB2D,GAAW89B,KACXthC,EAAAA,GAAAA,IAAYuhC,GACZ76B,EAASlD,EAAU89B,GAE3B,EAEA,OADAxhC,GAAAA,GAAM0f,KAAK+hB,GAAc,GAClB,kBAAMvhC,EAAAA,GAAAA,IAAYuhC,EAAa,CAC1C,CHuMkCpgC,CAAMkgC,EAAqB,KACrC/J,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C9U,EAAKwd,MAAM9rC,QAAQqtC,IAE3B,GACJ,CACIrtB,GACA5gB,KAAK8xB,KAAKoc,mBAAmBttB,EAAU5gB,OAGd,IAAzBA,KAAK8I,QAAQoL,SACbtC,IACCgP,GAAYrB,IACbvf,KAAK0sB,iBAAiB,aAAa,SAAA1Z,GAA+E,IAA5EtL,EAAKsL,EAALtL,MAAO66B,EAAgBvvB,EAAhBuvB,iBAAkB4L,EAAwBn7B,EAAxBm7B,yBAAkCC,EAASp7B,EAAjBuM,OACrF,GAAI2P,EAAKmf,yBAGL,OAFAnf,EAAKlwB,YAASsF,OACd4qB,EAAKof,oBAAiBhqC,GAI1B,IAAMiqC,EAAmBrf,EAAKpmB,QAAQgN,YAClClE,EAAcwD,wBACdo5B,GACJC,EAA+D78B,EAAcqF,WAArEy3B,EAAsBD,EAAtBC,uBAAwBC,EAAyBF,EAAzBE,0BAK1BC,GAAiB1f,EAAK2f,eACvBhG,GAAiB3Z,EAAK2f,aAAcT,IACrCD,EAMEW,GAAgCvM,GAAoB4L,EAC1D,GAAIjf,EAAKpmB,QAAQimC,YACZ7f,EAAKwa,YAAcxa,EAAKwa,WAAWtnB,UACpC0sB,GACCvM,IACIqM,IAAkB1f,EAAKoX,kBAAoB,CAC5CpX,EAAKwa,aACLxa,EAAKgb,aAAehb,EAAKwa,WACzBxa,EAAKgb,aAAaA,kBAAe5lC,GAErC4qB,EAAK8f,mBAAmBtnC,EAAOonC,GAC/B,IAAMG,GAAgBzlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACfwM,EAAAA,GAAAA,GAAmBu4B,EAAkB,WAAS,IACjD//B,OAAQkgC,EACRhgC,WAAYigC,KAEZ/8B,EAAc8G,oBACdwW,EAAKpmB,QAAQimC,cACbE,EAAiBrhC,MAAQ,EACzBqhC,EAAiBhhC,MAAO,GAE5BihB,EAAK4P,eAAemQ,EACxB,MAOS1M,GACD0L,GAAgB/e,GAEhBA,EAAKqX,UAAYrX,EAAKpmB,QAAQ6tB,gBAC9BzH,EAAKpmB,QAAQ6tB,iBAGrBzH,EAAK2f,aAAeT,CACxB,GA5FM,CA8Fd,GAAC,CAAAjtC,IAAA,UAAArB,MACD,WACIE,KAAK8I,QAAQ8X,UAAY5gB,KAAK8lC,aAC9B9lC,KAAK8xB,KAAK4a,MAAM9zB,OAAO5Y,MACvB,IAAMkmC,EAAQlmC,KAAKmmC,WACnBD,GAASA,EAAMttB,OAAO5Y,MACtBA,KAAKghB,QAAUhhB,KAAKghB,OAAO0I,SAAS5X,OAAO9R,MAC3CA,KAAKoiB,cAAW9d,GAChBmI,EAAAA,GAAAA,IAAYzM,KAAKwsC,iBACrB,GACA,CAAArrC,IAAA,cAAArB,MACA,WACIE,KAAK8rC,uBAAwB,CACjC,GAAC,CAAA3qC,IAAA,gBAAArB,MACD,WACIE,KAAK8rC,uBAAwB,CACjC,GAAC,CAAA3qC,IAAA,kBAAArB,MACD,WACI,OAAOE,KAAK8rC,uBAAyB9rC,KAAK+rC,qBAC9C,GAAC,CAAA5qC,IAAA,yBAAArB,MACD,WACI,OAAQE,KAAKg+B,oBACRh+B,KAAKghB,QAAUhhB,KAAKghB,OAAOqtB,2BAC5B,CACR,GACA,CAAAltC,IAAA,cAAArB,MACA,WACQE,KAAKkvC,oBAETlvC,KAAK8pC,YAAa,EAClB9pC,KAAK0sC,OAAS1sC,KAAK0sC,MAAM9rC,QAAQuuC,IACjCnvC,KAAKyrC,cACT,GAAC,CAAAtqC,IAAA,uBAAArB,MACD,WACI,IAAQ8R,EAAkB5R,KAAK8I,QAAvB8I,cACR,OAAOA,GAAiBA,EAAcqF,WAAW6M,iBACrD,GAAC,CAAA3iB,IAAA,aAAArB,MACD,WAAyC,IAA9BsvC,IAAqBxvC,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,KAAAA,UAAA,GAE5B,GADAI,KAAK8xB,KAAKsa,iBAAkB,EACxBpsC,KAAK8xB,KAAKod,kBACVlvC,KAAK8I,QAAQ6tB,gBAAkB32B,KAAK8I,QAAQ6tB,sBAIhD,IADC32B,KAAK8xB,KAAKgY,YAAc9pC,KAAK8xB,KAAKud,eAC/BrvC,KAAK+pC,cAAT,CAEA/pC,KAAK+pC,eAAgB,EACrB,IAAK,IAAI3oC,EAAI,EAAGA,EAAIpB,KAAKqtC,KAAKxtC,OAAQuB,IAAK,CACvC,IAAM4sB,EAAOhuB,KAAKqtC,KAAKjsC,GACvB4sB,EAAKke,sBAAuB,EAC5Ble,EAAK2T,aAAa,YACd3T,EAAKllB,QAAQimC,YACb/gB,EAAK8X,YAAW,EAExB,CACA,IAAAwJ,EAA6BtvC,KAAK8I,QAA1B8X,EAAQ0uB,EAAR1uB,SAAUrB,EAAM+vB,EAAN/vB,OAClB,QAAiBjb,IAAbsc,GAA2BrB,EAA/B,CAEA,IAAMuE,EAAoB9jB,KAAKuvC,uBAC/BvvC,KAAKwvC,2BAA6B1rB,EAC5BA,EAAkB9jB,KAAK6jB,aAAc,SACrCvf,EACNtE,KAAKyvC,iBACLL,GAAyBpvC,KAAK0vC,gBAAgB,aANpC,CAZA,CAmBd,GAAC,CAAAvuC,IAAA,SAAArB,MACD,WAMI,GALAE,KAAKqsC,iBAAkB,EACErsC,KAAKkvC,kBAQ1B,OAHAlvC,KAAK2vC,gBACL3vC,KAAKusC,yBACLvsC,KAAK0sC,MAAM9rC,QAAQgvC,IAGlB5vC,KAAK8pC,YACN9pC,KAAK0sC,MAAM9rC,QAAQivC,IAEvB7vC,KAAK8pC,YAAa,EAIlB9pC,KAAK0sC,MAAM9rC,QAAQkvC,IAKnB9vC,KAAK0sC,MAAM9rC,QAAQghC,IAKnB5hC,KAAK0sC,MAAM9rC,QAAQmvC,IACnB/vC,KAAKusC,oBAML,IAAM7/B,EAAMG,YAAYH,MACxBC,GAAAA,GAAUjF,OAAQJ,EAAAA,GAAAA,GAAM,EAAG,IAAO,GAAIoF,EAAMC,GAAAA,GAAUN,WACtDM,GAAAA,GAAUN,UAAYK,EACtBC,GAAAA,GAAUC,cAAe,EACzBoP,GAAAA,GAAM7P,OAAOoP,QAAQ5O,GAAAA,IACrBqP,GAAAA,GAAMg0B,UAAUz0B,QAAQ5O,GAAAA,IACxBqP,GAAAA,GAAM0F,OAAOnG,QAAQ5O,GAAAA,IACrBA,GAAAA,GAAUC,cAAe,CAC7B,GAAC,CAAAzL,IAAA,YAAArB,MACD,WAAY,IAAA2gC,EAAA,KACHzgC,KAAKqsC,kBACNrsC,KAAKqsC,iBAAkB,EACvBhG,gBAAe,kBAAM5F,EAAKt0B,QAAQ,IAE1C,GAAC,CAAAhL,IAAA,oBAAArB,MACD,WACIE,KAAK0sC,MAAM9rC,QAAQqvC,IACnBjwC,KAAKotC,YAAYxsC,QAAQsvC,GAC7B,GAAC,CAAA/uC,IAAA,2BAAArB,MACD,WACIyM,GAAAA,GAAMyjC,UAAUhwC,KAAKwsC,kBAAkB,GAAO,EAClD,GAAC,CAAArrC,IAAA,4BAAArB,MACD,WAA4B,IAAAmhC,EAAA,KAMxB10B,GAAAA,GAAM05B,YAAW,WACThF,EAAK8I,cACL9I,EAAKnP,KAAK2T,YAGVxE,EAAKnP,KAAKwa,mBAElB,GACJ,GACA,CAAAnrC,IAAA,iBAAArB,MAGA,YACQE,KAAK4pC,UAAa5pC,KAAKoiB,WAE3BpiB,KAAK4pC,SAAW5pC,KAAKmwC,UACzB,GAAC,CAAAhvC,IAAA,eAAArB,MACD,WACI,GAAKE,KAAKoiB,WAGVpiB,KAAK2hC,eACC3hC,KAAK8I,QAAQsnC,qBAAuBpwC,KAAKumC,UAC1CvmC,KAAK+pC,eADV,CAWA,GAAI/pC,KAAK0pC,aAAe1pC,KAAK0pC,WAAWtnB,SACpC,IAAK,IAAIhhB,EAAI,EAAGA,EAAIpB,KAAKqtC,KAAKxtC,OAAQuB,IAAK,CAC1BpB,KAAKqtC,KAAKjsC,GAClBugC,cACT,CAEJ,IAAM0O,EAAarwC,KAAKuf,OACxBvf,KAAKuf,OAASvf,KAAKmwC,SAAQ,GAC3BnwC,KAAKswC,gBAAkB5V,KACvB16B,KAAK+pC,eAAgB,EACrB/pC,KAAKwkC,qBAAkBlgC,EACvBtE,KAAK0vC,gBAAgB,UAAW1vC,KAAKuf,OAAO6e,WAC5C,IAAQxsB,EAAkB5R,KAAK8I,QAAvB8I,cACRA,GACIA,EAAcuI,OAAO,gBAAiBna,KAAKuf,OAAO6e,UAAWiS,EAAaA,EAAWjS,eAAY95B,EAtBrG,CAuBJ,GAAC,CAAAnD,IAAA,eAAArB,MACD,WAAgC,IAAnBywC,EAAK3wC,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,UACb4wC,EAAmBhgC,QAAQxQ,KAAK8I,QAAQ2nC,cAAgBzwC,KAAKoiB,UAC7DpiB,KAAKmgC,QACLngC,KAAKmgC,OAAOsL,cAAgBzrC,KAAK8xB,KAAK2Z,aACtCzrC,KAAKmgC,OAAOoQ,QAAUA,IACtBC,GAAmB,GAEnBA,IACAxwC,KAAKmgC,OAAS,CACVsL,YAAazrC,KAAK8xB,KAAK2Z,YACvB8E,MAAAA,EACAG,OAAQpF,EAAkBtrC,KAAKoiB,UAC/B9c,OAAQ+lC,EAAcrrC,KAAKoiB,WAGvC,GAAC,CAAAjhB,IAAA,iBAAArB,MACD,WACI,GAAKyrC,EAAL,CAEA,IAAMoF,EAAmB3wC,KAAK+pC,eAAiB/pC,KAAKksC,qBAC9C0E,EAAgB5wC,KAAKwkC,kBAAoBoE,GAAY5oC,KAAKwkC,iBAC1D1gB,EAAoB9jB,KAAKuvC,uBACzBsB,EAAyB/sB,EACzBA,EAAkB9jB,KAAK6jB,aAAc,SACrCvf,EACAwsC,EAA8BD,IAA2B7wC,KAAKwvC,2BAChEmB,IACCC,GACG1sB,GAAalkB,KAAK6jB,eAClBitB,KACJvF,EAAevrC,KAAKoiB,SAAUyuB,GAC9B7wC,KAAKksC,sBAAuB,EAC5BlsC,KAAKipC,iBAdC,CAgBd,GAAC,CAAA9nC,IAAA,UAAArB,MACD,WAAgC,IAm9BtBi8B,EAn9BFgV,IAAenxC,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,KAAAA,UAAA,GACboxC,EAAUhxC,KAAKogC,iBACjBhC,EAAYp+B,KAAKixC,oBAAoBD,GAUzC,OAJID,IACA3S,EAAYp+B,KAAK+wC,gBAAgB3S,IA28B7C8S,IADcnV,EAx8BGqC,GAy8BH/7B,GACd6uC,GAAUnV,EAAI1Y,GAz8BC,CACHooB,YAAazrC,KAAK8xB,KAAK2Z,YACvB0F,YAAaH,EACb5S,UAAAA,EACAva,aAAc,CAAC,EACf5iB,OAAQjB,KAAKwiB,GAErB,GAAC,CAAArhB,IAAA,iBAAArB,MACD,WACI,IAAQ8R,EAAkB5R,KAAK8I,QAAvB8I,cACR,IAAKA,EACD,OAAO8oB,KACX,IAAMqB,EAAMnqB,EAAcgrB,qBAElBuD,EAAWngC,KAAK8xB,KAAhBqO,OAKR,OAJIA,IACAhE,GAAcJ,EAAI15B,EAAG89B,EAAO76B,OAAOjD,GACnC85B,GAAcJ,EAAI1Y,EAAG8c,EAAO76B,OAAO+d,IAEhC0Y,CACX,GAAC,CAAA56B,IAAA,sBAAArB,MACD,SAAoBi8B,GAChB,IAAMqV,EAAmB1W,KACzByN,GAAYiJ,EAAkBrV,GAK9B,IAAK,IAAI36B,EAAI,EAAGA,EAAIpB,KAAKqtC,KAAKxtC,OAAQuB,IAAK,CACvC,IAAM4sB,EAAOhuB,KAAKqtC,KAAKjsC,GACf++B,EAAoBnS,EAApBmS,OAAQr3B,EAAYklB,EAAZllB,QAChB,GAAIklB,IAAShuB,KAAK8xB,MAAQqO,GAAUr3B,EAAQ2nC,aAAc,CAKtD,GAAItQ,EAAOuQ,OAAQ,CACfvI,GAAYiJ,EAAkBrV,GAC9B,IAAgBsV,EAAerxC,KAAK8xB,KAA5BqO,OAKJkR,IACAlV,GAAciV,EAAiB/uC,GAAIgvC,EAAW/rC,OAAOjD,GACrD85B,GAAciV,EAAiB/tB,GAAIguB,EAAW/rC,OAAO+d,GAE7D,CACA8Y,GAAciV,EAAiB/uC,EAAG89B,EAAO76B,OAAOjD,GAChD85B,GAAciV,EAAiB/tB,EAAG8c,EAAO76B,OAAO+d,EACpD,CACJ,CACA,OAAO+tB,CACX,GAAC,CAAAjwC,IAAA,iBAAArB,MACD,SAAei8B,GAA4B,IAAvBuV,EAAa1xC,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,IAAAA,UAAA,GACvB2xC,EAAiB7W,KACvByN,GAAYoJ,EAAgBxV,GAC5B,IAAK,IAAI36B,EAAI,EAAGA,EAAIpB,KAAKqtC,KAAKxtC,OAAQuB,IAAK,CACvC,IAAM4sB,EAAOhuB,KAAKqtC,KAAKjsC,IAClBkwC,GACDtjB,EAAKllB,QAAQ2nC,cACbziB,EAAKmS,QACLnS,IAASA,EAAK8D,MACd6K,GAAa4U,EAAgB,CACzBlvC,GAAI2rB,EAAKmS,OAAO76B,OAAOjD,EACvBghB,GAAI2K,EAAKmS,OAAO76B,OAAO+d,IAG1Ba,GAAa8J,EAAKnK,eAEvB8Y,GAAa4U,EAAgBvjB,EAAKnK,aACtC,CAIA,OAHIK,GAAalkB,KAAK6jB,eAClB8Y,GAAa4U,EAAgBvxC,KAAK6jB,cAE/B0tB,CACX,GAAC,CAAApwC,IAAA,kBAAArB,MACD,SAAgBi8B,GACZ,IAAMyV,EAAsB9W,KAC5ByN,GAAYqJ,EAAqBzV,GACjC,IAAK,IAAI36B,EAAI,EAAGA,EAAIpB,KAAKqtC,KAAKxtC,OAAQuB,IAAK,CACvC,IAAM4sB,EAAOhuB,KAAKqtC,KAAKjsC,GACvB,GAAK4sB,EAAK5L,UAEL8B,GAAa8J,EAAKnK,cAAvB,CAEAqX,GAASlN,EAAKnK,eAAiBmK,EAAKyhB,iBACpC,IAAM/G,EAAYhO,KAElByN,GAAYO,EADI1a,EAAKoS,kBAErBqI,GAAoB+I,EAAqBxjB,EAAKnK,aAAcmK,EAAK4b,SAAW5b,EAAK4b,SAASxL,eAAY95B,EAAWokC,EALrG,CAMhB,CAIA,OAHIxkB,GAAalkB,KAAK6jB,eAClB4kB,GAAoB+I,EAAqBxxC,KAAK6jB,cAE3C2tB,CACX,GAAC,CAAArwC,IAAA,iBAAArB,MACD,SAAe4H,GACX1H,KAAKyxC,YAAc/pC,EACnB1H,KAAK8xB,KAAK4f,2BACV1xC,KAAK2rC,mBAAoB,CAC7B,GAAC,CAAAxqC,IAAA,aAAArB,MACD,SAAWgJ,GACP9I,KAAK8I,SAAOU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLxJ,KAAK8I,SACLA,GAAO,IACVkhC,eAAiC1lC,IAAtBwE,EAAQkhC,WAA0BlhC,EAAQkhC,WAE7D,GAAC,CAAA7oC,IAAA,oBAAArB,MACD,WACIE,KAAKmgC,YAAS77B,EACdtE,KAAKuf,YAASjb,EACdtE,KAAK4pC,cAAWtlC,EAChBtE,KAAKwvC,gCAA6BlrC,EAClCtE,KAAKyxC,iBAAcntC,EACnBtE,KAAKhB,YAASsF,EACdtE,KAAK+pC,eAAgB,CACzB,GAAC,CAAA5oC,IAAA,qCAAArB,MACD,WACSE,KAAK2xC,gBAQN3xC,KAAK2xC,eAAeC,2BACpBjlC,GAAAA,GAAUN,WACVrM,KAAK2xC,eAAe/E,oBAAmB,EAE/C,GAAC,CAAAzrC,IAAA,qBAAArB,MACD,WAA+C,IACvCmnB,EADW4qB,EAAkBjyC,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,IAAAA,UAAA,GAO3BwpC,EAAOppC,KAAK8xC,UAClB9xC,KAAK2rC,oBAAsB3rC,KAAK2rC,kBAAoBvC,EAAKuC,mBACzD3rC,KAAK6rC,mBAAqB7rC,KAAK6rC,iBAAmBzC,EAAKyC,kBACvD7rC,KAAK4rC,0BAA4B5rC,KAAK4rC,wBAA0BxC,EAAKwC,yBACrE,IAAMmG,EAAWvhC,QAAQxQ,KAAKkqC,eAAiBlqC,OAASopC,EAUxD,MALkByI,GACbE,GAAY/xC,KAAK4rC,yBAClB5rC,KAAK2rC,oBACmB,QAAtB1kB,EAAKjnB,KAAKghB,cAA2B,IAAPiG,OAAgB,EAASA,EAAG0kB,oBAC5D3rC,KAAKgyC,gCACT,CAEA,IAAAC,EAA6BjyC,KAAK8I,QAA1ByW,EAAM0yB,EAAN1yB,OAAQqB,EAAQqxB,EAARrxB,SAIhB,GAAK5gB,KAAKuf,SAAYA,GAAUqB,GAAhC,CASA,GAPA5gB,KAAK4xC,yBAA2BjlC,GAAAA,GAAUN,WAOrCrM,KAAKyxC,cAAgBzxC,KAAKsuC,eAAgB,CAE3C,IAAMqD,EAAiB3xC,KAAKkyC,6BACxBP,GACAA,EAAepyB,QACY,IAA3Bvf,KAAKmtC,mBACLntC,KAAK2xC,eAAiBA,EACtB3xC,KAAKmyC,qCACLnyC,KAAKsuC,eAAiB5T,KACtB16B,KAAKoyC,qBAAuB1X,KAC5Bb,GAAqB75B,KAAKoyC,qBAAsBpyC,KAAKuf,OAAO6e,UAAWuT,EAAepyB,OAAO6e,WAC7F+J,GAAYnoC,KAAKsuC,eAAgBtuC,KAAKoyC,uBAGtCpyC,KAAK2xC,eAAiB3xC,KAAKsuC,oBAAiBhqC,CAEpD,CAKA,GAAKtE,KAAKsuC,gBAAmBtuC,KAAKyxC,YAAlC,CxBtqBZ,IAAyBzyC,EAAQ26B,EAAU3Y,EwB+sB/B,GApCKhhB,KAAKhB,SACNgB,KAAKhB,OAAS07B,KACd16B,KAAKqyC,qBAAuB3X,MAK5B16B,KAAKsuC,gBACLtuC,KAAKoyC,sBACLpyC,KAAK2xC,gBACL3xC,KAAK2xC,eAAe3yC,QACpBgB,KAAKmyC,qCxBtrBInzC,EwBurBOgB,KAAKhB,OxBvrBJ26B,EwBurBY35B,KAAKsuC,exBvrBPttB,EwBurBuBhhB,KAAK2xC,eAAe3yC,OxBtrBlF06B,GAAiB16B,EAAOqD,EAAGs3B,EAASt3B,EAAG2e,EAAO3e,GAC9Cq3B,GAAiB16B,EAAOqkB,EAAGsW,EAAStW,EAAGrC,EAAOqC,IwB0rB7BrjB,KAAKyxC,aACNjhC,QAAQxQ,KAAKkqC,cAEblqC,KAAKhB,OAASgB,KAAKsyC,eAAetyC,KAAKuf,OAAO6e,WAG9C+J,GAAYnoC,KAAKhB,OAAQgB,KAAKuf,OAAO6e,WAEzCtC,GAAc97B,KAAKhB,OAAQgB,KAAKyxC,cAMhCtJ,GAAYnoC,KAAKhB,OAAQgB,KAAKuf,OAAO6e,WAKrCp+B,KAAKgyC,+BAAgC,CACrChyC,KAAKgyC,gCAAiC,EACtC,IAAML,EAAiB3xC,KAAKkyC,6BACxBP,GACAnhC,QAAQmhC,EAAezH,gBACnB15B,QAAQxQ,KAAKkqC,gBAChByH,EAAe7oC,QAAQ2nC,cACxBkB,EAAe3yC,QACY,IAA3BgB,KAAKmtC,mBACLntC,KAAK2xC,eAAiBA,EACtB3xC,KAAKmyC,qCACLnyC,KAAKsuC,eAAiB5T,KACtB16B,KAAKoyC,qBAAuB1X,KAC5Bb,GAAqB75B,KAAKoyC,qBAAsBpyC,KAAKhB,OAAQ2yC,EAAe3yC,QAC5EmpC,GAAYnoC,KAAKsuC,eAAgBtuC,KAAKoyC,uBAGtCpyC,KAAK2xC,eAAiB3xC,KAAKsuC,oBAAiBhqC,CAEpD,CAIAwmC,GAAoBE,sBA/DV,CA9BA,CANA,CAoGd,GAAC,CAAA7pC,IAAA,6BAAArB,MACD,WACI,GAAKE,KAAKghB,SACNka,GAASl7B,KAAKghB,OAAO6C,gBACrBwX,GAAer7B,KAAKghB,OAAO6C,cAG/B,OAAI7jB,KAAKghB,OAAOuxB,eACLvyC,KAAKghB,OAGLhhB,KAAKghB,OAAOkxB,4BAE3B,GAAC,CAAA/wC,IAAA,eAAArB,MACD,WACI,OAAO0Q,SAASxQ,KAAKsuC,gBACjBtuC,KAAKyxC,aACLzxC,KAAK8I,QAAQimC,aACb/uC,KAAKuf,OACb,GAAC,CAAApe,IAAA,iBAAArB,MACD,WACI,IAAImnB,EACEmiB,EAAOppC,KAAK8xC,UACZC,EAAWvhC,QAAQxQ,KAAKkqC,eAAiBlqC,OAASopC,EACpDoJ,GAAU,EAuBd,IAlBIxyC,KAAK2rC,oBAA6C,QAAtB1kB,EAAKjnB,KAAKghB,cAA2B,IAAPiG,OAAgB,EAASA,EAAG0kB,sBACtF6G,GAAU,GAMVT,IACC/xC,KAAK4rC,yBAA2B5rC,KAAK6rC,oBACtC2G,GAAU,GAMVxyC,KAAK4xC,2BAA6BjlC,GAAAA,GAAUN,YAC5CmmC,GAAU,IAEVA,EAAJ,CAEA,IAAAC,EAA6BzyC,KAAK8I,QAA1ByW,EAAMkzB,EAANlzB,OAAQqB,EAAQ6xB,EAAR7xB,SAWhB,GANA5gB,KAAK0rC,gBAAkBl7B,QAASxQ,KAAKghB,QAAUhhB,KAAKghB,OAAO0qB,iBACvD1rC,KAAKsmC,kBACLtmC,KAAK0yC,kBACJ1yC,KAAK0rC,kBACN1rC,KAAKyxC,YAAczxC,KAAKsuC,oBAAiBhqC,GAExCtE,KAAKuf,SAAYA,GAAUqB,GAAhC,CAMAunB,GAAYnoC,KAAKswC,gBAAiBtwC,KAAKuf,OAAO6e,WAI9C,IAAMuU,EAAiB3yC,KAAKukC,UAAUliC,EAChCuwC,EAAiB5yC,KAAKukC,UAAUlhB,GlBjyBlD,SAAyB0Y,EAAKwI,EAAWsO,GAAsC,IAA5BC,EAAkBlzC,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,IAAAA,UAAA,GAC3DmzC,EAAaF,EAAShzC,OAC5B,GAAKkzC,EAAL,CAIA,IAAI/kB,EACAtmB,EAFJ68B,EAAUliC,EAAIkiC,EAAUlhB,EAAI,EAG5B,IAAK,IAAIjiB,EAAI,EAAGA,EAAI2xC,EAAY3xC,IAAK,CAEjCsG,GADAsmB,EAAO6kB,EAASzxC,IACHojC,gBAKb,IAAMpiB,EAAW4L,EAAK5L,SAClBA,GACAA,EAAS2B,OACkB,aAA3B3B,EAAS2B,MAAMivB,UAGfF,GACA9kB,EAAKllB,QAAQ2nC,cACbziB,EAAKmS,QACLnS,IAASA,EAAK8D,MACd6K,GAAaZ,EAAK,CACd15B,GAAI2rB,EAAKmS,OAAO76B,OAAOjD,EACvBghB,GAAI2K,EAAKmS,OAAO76B,OAAO+d,IAG3B3b,IAEA68B,EAAUliC,GAAKqF,EAAMrF,EAAEomB,MACvB8b,EAAUlhB,GAAK3b,EAAM2b,EAAEoF,MAEvBqT,GAAcC,EAAKr0B,IAEnBorC,GAAsB5uB,GAAa8J,EAAKnK,eACxC8Y,GAAaZ,EAAK/N,EAAKnK,cAE/B,CAKA0gB,EAAUliC,EAAI25B,GAAcuI,EAAUliC,GACtCkiC,EAAUlhB,EAAI2Y,GAAcuI,EAAUlhB,EA3C5B,CA4Cd,CkBuvBY4vB,CAAgBjzC,KAAKswC,gBAAiBtwC,KAAKukC,UAAWvkC,KAAKqtC,KAAM0E,IAK7D3I,EAAK7pB,QACJ6pB,EAAKpqC,QACgB,IAArBgB,KAAKukC,UAAUliC,GAAgC,IAArBrC,KAAKukC,UAAUlhB,IAC1C+lB,EAAKpqC,OAASoqC,EAAK7pB,OAAO6e,WAE9B,IAAQp/B,EAAWoqC,EAAXpqC,OACR,GAAKA,EAAL,CAaKgB,KAAKwkC,kBACNxkC,KAAKwkC,gBAAkB/J,KACvBz6B,KAAKkzC,6BAA+BzY,MAExC,IAAM0Y,EAA0BnzC,KAAKozC,oBAUrC3Z,GAAaz5B,KAAKwkC,gBAAiBxkC,KAAKswC,gBAAiBtxC,EAAQgB,KAAK6jB,cACtE7jB,KAAKozC,oBAAsBjJ,GAAyBnqC,KAAKwkC,gBAAiBxkC,KAAKukC,WAC3EvkC,KAAKozC,sBAAwBD,GAC7BnzC,KAAKukC,UAAUliC,IAAMswC,GACrB3yC,KAAKukC,UAAUlhB,IAAMuvB,IACrB5yC,KAAKitC,cAAe,EACpBjtC,KAAKipC,iBACLjpC,KAAK0vC,gBAAgB,mBAAoB1wC,IAK7C8rC,GAAoBG,wBA3BpB,MANQjrC,KAAKozC,sBACLpzC,KAAKwkC,gBAAkB/J,KACvBz6B,KAAKozC,oBAAsB,OAC3BpzC,KAAKipC,iBAnCH,CAbA,CA+Ed,GAAC,CAAA9nC,IAAA,OAAArB,MACD,WACIE,KAAKktC,WAAY,CAErB,GAAC,CAAA/rC,IAAA,OAAArB,MACD,WACIE,KAAKktC,WAAY,CAErB,GAAC,CAAA/rC,IAAA,iBAAArB,MACD,WAAiC,IAAlBuzC,IAASzzC,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,KAAAA,UAAA,GAEpB,GADAI,KAAK8I,QAAQmgC,gBAAkBjpC,KAAK8I,QAAQmgC,iBACxCoK,EAAW,CACX,IAAMnN,EAAQlmC,KAAKmmC,WACnBD,GAASA,EAAM+C,gBACnB,CACIjpC,KAAKkqC,eAAiBlqC,KAAKkqC,aAAa9nB,WACxCpiB,KAAKkqC,kBAAe5lC,EAE5B,GAAC,CAAAnD,IAAA,qBAAArB,MACD,SAAmB4H,GAA6C,IAAA05B,EAAA,KAAtC0N,EAA4BlvC,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,IAAAA,UAAA,GAC5CgqC,EAAW5pC,KAAK4pC,SAChB0J,EAAuB1J,EACvBA,EAAS/lB,aACT,CAAC,EACD0vB,GAAW/pC,EAAAA,EAAAA,GAAA,GAAQxJ,KAAK6jB,cACxB4tB,EAAchX,KACfz6B,KAAK2xC,gBACL3xC,KAAK2xC,eAAe7oC,QAAQimC,aAC7B/uC,KAAKsuC,eAAiBtuC,KAAKoyC,0BAAuB9tC,GAEtDtE,KAAKgyC,gCAAkClD,EACvC,IAWI0E,EAXEC,EAAiB/Y,KAGjBgZ,GAFiB9J,EAAWA,EAAS3oC,YAASqD,MAC/BtE,KAAKuf,OAASvf,KAAKuf,OAAOte,YAASqD,GAElD4hC,EAAQlmC,KAAKmmC,WACbwN,GAAgBzN,GAASA,EAAME,QAAQvmC,QAAU,EACjD+zC,EAAyBpjC,QAAQkjC,IAClCC,IAC0B,IAA3B3zC,KAAK8I,QAAQkhC,YACZhqC,KAAKqtC,KAAKtkC,KAAK8qC,KACpB7zC,KAAKmtC,kBAAoB,EAEzBntC,KAAK8zC,eAAiB,SAAC/nC,GACnB,ILr6BGpE,EAAGC,EKy6CNmsC,EAAQ39B,EAAM49B,EAAIjwC,EApgBZoM,EAAWpE,EAAS,IAC1BkoC,GAAaxC,EAAYpvC,EAAGqF,EAAMrF,EAAG8N,GACrC8jC,GAAaxC,EAAYpuB,EAAG3b,EAAM2b,EAAGlT,GACrCixB,EAAK8S,eAAezC,GAChBrQ,EAAKkN,gBACLlN,EAAKgR,sBACLhR,EAAK7hB,QACL6hB,EAAKuQ,gBACLvQ,EAAKuQ,eAAepyB,SACpBsa,GAAqB4Z,EAAgBrS,EAAK7hB,OAAO6e,UAAWgD,EAAKuQ,eAAepyB,OAAO6e,WA2f3F2V,EA1fW3S,EAAKkN,eA0fRl4B,EA1fwBgrB,EAAKgR,qBA0fvB4B,EA1f6CP,EA0fzC1vC,EA1fyDoM,EA2fvFgkC,GAAQJ,EAAO1xC,EAAG+T,EAAK/T,EAAG2xC,EAAG3xC,EAAG0B,GAChCowC,GAAQJ,EAAO1wB,EAAGjN,EAAKiN,EAAG2wB,EAAG3wB,EAAGtf,GAvfZyvC,ILp7BL7rC,EKq7Bey5B,EAAKkN,eLr7BjB1mC,EKq7BiC4rC,ELp7B3C7rC,EAAEtF,EAAEgI,MAAQzC,EAAEvF,EAAEgI,KACpB1C,EAAEtF,EAAE8D,MAAQyB,EAAEvF,EAAE8D,KAChBwB,EAAE0b,EAAEhZ,MAAQzC,EAAEyb,EAAEhZ,KAChB1C,EAAE0b,EAAEld,MAAQyB,EAAEyb,EAAEld,OKk7BAi7B,EAAKuK,mBAAoB,GAExB6H,IACDA,EAAqB9Y,MACzByN,GAAYqL,EAAoBpS,EAAKkN,iBAErCoF,IACAtS,EAAKyI,gBAAkB0J,ER37B3C,SAAmBv0C,EAAQo1C,EAAQhL,EAAMj5B,EAAUyjC,EAAwBD,GACnEC,GACA50C,EAAOq1C,SAAU9a,EAAAA,GAAAA,GAAI,OAEJj1B,IAAjB8kC,EAAKiL,QAAwBjL,EAAKiL,QAAU,EAAGvM,GAAgB33B,IAC/DnR,EAAOs1C,aAAc/a,EAAAA,GAAAA,QAAuBj1B,IAAnB8vC,EAAOC,QAAwBD,EAAOC,QAAU,EAAG,EAAGrM,GAAiB73B,KAE3FwjC,IACL30C,EAAOq1C,SAAU9a,EAAAA,GAAAA,QAAuBj1B,IAAnB8vC,EAAOC,QAAwBD,EAAOC,QAAU,OAAoB/vC,IAAjB8kC,EAAKiL,QAAwBjL,EAAKiL,QAAU,EAAGlkC,IAK3H,IAAK,IAAI/O,EAAI,EAAGA,EAAIqmC,GAAYrmC,IAAK,CACjC,IAAMmzC,EAAc,SAAHhwC,OAAYijC,GAAQpmC,GAAE,UACnCozC,EAAe5M,GAAUwM,EAAQG,GACjCE,EAAa7M,GAAUwB,EAAMmL,QACZjwC,IAAjBkwC,QAA6ClwC,IAAfmwC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACA9M,GAAK6M,KAAkB7M,GAAK8M,IAE5Bz1C,EAAOu1C,GAAe7xC,KAAKyD,KAAIozB,EAAAA,GAAAA,GAAImO,GAAS8M,GAAe9M,GAAS+M,GAAatkC,GAAW,IACxF+tB,EAAAA,GAAQxoB,KAAK++B,IAAevW,EAAAA,GAAQxoB,KAAK8+B,MACzCx1C,EAAOu1C,IAAgB,MAI3Bv1C,EAAOu1C,GAAeE,EAE9B,EAIIL,EAAO9Y,QAAU8N,EAAK9N,UACtBt8B,EAAOs8B,QAAS/B,EAAAA,GAAAA,GAAI6a,EAAO9Y,QAAU,EAAG8N,EAAK9N,QAAU,EAAGnrB,GAElE,CQo5BoBukC,CAAUnB,EAAaD,EAAsBlS,EAAKvd,aAAc1T,EAAUyjC,EAAwBD,IAEtGvS,EAAKtP,KAAK4f,2BACVtQ,EAAK6H,iBACL7H,EAAK+L,kBAAoBh9B,CAC7B,EACAnQ,KAAK8zC,eAAe9zC,KAAK8I,QAAQimC,WAAa,IAAO,EACzD,GAAC,CAAA5tC,IAAA,iBAAArB,MACD,SAAegJ,GAAS,IAAAw4B,EAAA,KACpBthC,KAAK0vC,gBAAgB,kBACrB1vC,KAAKsmC,kBAAoBtmC,KAAKsmC,iBAAiB95B,OAC3CxM,KAAKkqC,cAAgBlqC,KAAKkqC,aAAa5D,kBACvCtmC,KAAKkqC,aAAa5D,iBAAiB95B,OAEnCxM,KAAK0yC,oBACLjmC,EAAAA,GAAAA,IAAYzM,KAAK0yC,kBACjB1yC,KAAK0yC,sBAAmBpuC,GAO5BtE,KAAK0yC,iBAAmBnmC,GAAAA,GAAMJ,QAAO,WACjC43B,GAAsBC,wBAAyB,EAC/C1C,EAAKgF,iBI39BrB,SAA4BxmC,EAAO0E,EAAWsE,GAC1C,IAAM6rC,GAAgBhvB,EAAAA,EAAAA,GAAc7lB,GAASA,GAAQ0iC,EAAAA,GAAAA,IAAY1iC,GAEjE,OADA60C,EAAcroC,OAAMuJ,EAAAA,GAAAA,GAAmB,GAAI8+B,EAAenwC,EAAWsE,IAC9D6rC,EAAc7gC,SACzB,CJu9BwC8gC,CAAmB,EAh8BnC,KAg8BqDprC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtDV,GAAO,IACV6F,SAAU,SAAC5C,GACPu1B,EAAKwS,eAAe/nC,GACpBjD,EAAQ6F,UAAY7F,EAAQ6F,SAAS5C,EACzC,EACA2C,WAAY,WACR5F,EAAQ4F,YAAc5F,EAAQ4F,aAC9B4yB,EAAKuT,mBACT,KAEAvT,EAAK4I,eACL5I,EAAK4I,aAAa5D,iBAAmBhF,EAAKgF,kBAE9ChF,EAAKoR,sBAAmBpuC,CAC5B,GACJ,GAAC,CAAAnD,IAAA,oBAAArB,MACD,WACQE,KAAKkqC,eACLlqC,KAAKkqC,aAAa5D,sBAAmBhiC,EACrCtE,KAAKkqC,aAAaP,qBAAkBrlC,GAExC,IAAM4hC,EAAQlmC,KAAKmmC,WACnBD,GAASA,EAAM4O,wBACf90C,KAAKkqC,aACDlqC,KAAKsmC,iBACDtmC,KAAK6pC,qBACDvlC,EACZtE,KAAK0vC,gBAAgB,oBACzB,GAAC,CAAAvuC,IAAA,kBAAArB,MACD,WACQE,KAAKsmC,mBACLtmC,KAAK8zC,gBAAkB9zC,KAAK8zC,eAh+BpB,KAi+BR9zC,KAAKsmC,iBAAiB95B,QAE1BxM,KAAK60C,mBACT,GAAC,CAAA1zC,IAAA,0BAAArB,MACD,WACI,IAAMspC,EAAOppC,KAAK8xC,UACZO,EAAuDjJ,EAAvDiJ,qBAAsBrzC,EAAiCoqC,EAAjCpqC,OAAQugB,EAAyB6pB,EAAzB7pB,OAAQsE,EAAiBulB,EAAjBvlB,aAC5C,GAAKwuB,GAAyBrzC,GAAWugB,EAAzC,CAOA,GAAIvf,OAASopC,GACTppC,KAAKuf,QACLA,GACAw1B,GAA0B/0C,KAAK8I,QAAQksC,cAAeh1C,KAAKuf,OAAO6e,UAAW7e,EAAO6e,WAAY,CAChGp/B,EAASgB,KAAKhB,QAAU07B,KACxB,IAAMua,EAAUhc,GAAWj5B,KAAKuf,OAAO6e,UAAU/7B,GACjDrD,EAAOqD,EAAEgI,IAAM++B,EAAKpqC,OAAOqD,EAAEgI,IAC7BrL,EAAOqD,EAAE8D,IAAMnH,EAAOqD,EAAEgI,IAAM4qC,EAC9B,IAAMC,EAAUjc,GAAWj5B,KAAKuf,OAAO6e,UAAU/a,GACjDrkB,EAAOqkB,EAAEhZ,IAAM++B,EAAKpqC,OAAOqkB,EAAEhZ,IAC7BrL,EAAOqkB,EAAEld,IAAMnH,EAAOqkB,EAAEhZ,IAAM6qC,CAClC,CACA/M,GAAYkK,EAAsBrzC,GAMlC29B,GAAa0V,EAAsBxuB,GAOnC4V,GAAaz5B,KAAKkzC,6BAA8BlzC,KAAKswC,gBAAiB+B,EAAsBxuB,EA/BlF,CAgCd,GAAC,CAAA1iB,IAAA,qBAAArB,MACD,SAAmB8gB,EAAUoN,GACpBhuB,KAAKotC,YAAY35B,IAAImN,IACtB5gB,KAAKotC,YAAYj7B,IAAIyO,EAAU,IAAImoB,IAEzB/oC,KAAKotC,YAAYtuC,IAAI8hB,GAC7B/O,IAAImc,GACV,IAAM7C,EAAS6C,EAAKllB,QAAQqsC,uBAC5BnnB,EAAK+X,QAAQ,CACTjwB,WAAYqV,EAASA,EAAOrV,gBAAaxR,EACzCklC,sBAAuBre,GAAUA,EAAOiqB,4BAClCjqB,EAAOiqB,4BAA4BpnB,QACnC1pB,GAEd,GAAC,CAAAnD,IAAA,SAAArB,MACD,WACI,IAAMomC,EAAQlmC,KAAKmmC,WACnB,OAAOD,GAAQA,EAAMkD,OAASppC,IAClC,GAAC,CAAAmB,IAAA,UAAArB,MACD,WACI,IAAImnB,EAEJ,OADqBjnB,KAAK8I,QAAlB8X,WACsC,QAA1BqG,EAAKjnB,KAAKmmC,kBAA+B,IAAPlf,OAAgB,EAASA,EAAGmiB,OAAgBppC,IACtG,GAAC,CAAAmB,IAAA,cAAArB,MACD,WACI,IAAImnB,EAEJ,OADqBjnB,KAAK8I,QAAlB8X,SACqC,QAA1BqG,EAAKjnB,KAAKmmC,kBAA+B,IAAPlf,OAAgB,EAASA,EAAGkiB,cAAW7kC,CAChG,GAAC,CAAAnD,IAAA,WAAArB,MACD,WACI,IAAQ8gB,EAAa5gB,KAAK8I,QAAlB8X,SACR,GAAIA,EACA,OAAO5gB,KAAK8xB,KAAKsb,YAAYtuC,IAAI8hB,EACzC,GAAC,CAAAzf,IAAA,UAAArB,MACD,WAAiE,IAAAwa,EAAA1a,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAApDqsC,EAAU3xB,EAAV2xB,WAAYn2B,EAAUwE,EAAVxE,WAAY0zB,EAAqBlvB,EAArBkvB,sBACxBtD,EAAQlmC,KAAKmmC,WACfD,GACAA,EAAMH,QAAQ/lC,KAAMwpC,GACpByC,IACAjsC,KAAKwkC,qBAAkBlgC,EACvBtE,KAAKisC,YAAa,GAElBn2B,GACA9V,KAAK2lC,WAAW,CAAE7vB,WAAAA,GAC1B,GAAC,CAAA3U,IAAA,WAAArB,MACD,WACI,IAAMomC,EAAQlmC,KAAKmmC,WACnB,QAAID,GACOA,EAAMF,SAAShmC,KAK9B,GAAC,CAAAmB,IAAA,gBAAArB,MACD,WACI,IAAQ8R,EAAkB5R,KAAK8I,QAAvB8I,cACR,GAAKA,EAAL,CAGA,IAAIyjC,GAAY,EAKRxxB,EAAiBjS,EAAjBiS,aAQR,IAPIA,EAAayX,QACbzX,EAAa0X,SACb1X,EAAa2X,SACb3X,EAAayxB,WACbD,GAAY,GAGXA,EAAL,CAIA,IAFA,IAAME,EAAc,CAAC,EAEZn0C,EAAI,EAAGA,EAAIypC,GAAchrC,OAAQuB,IAAK,CAC3C,IAAMD,EAAM,SAAW0pC,GAAczpC,GAEjCyiB,EAAa1iB,KACbo0C,EAAYp0C,GAAO0iB,EAAa1iB,GAChCyQ,EAAc4jC,eAAer0C,EAAK,GAE1C,CAKA,IAAK,IAAMA,KAFXyQ,EAAc8P,SAEI6zB,EACd3jC,EAAc4jC,eAAer0C,EAAKo0C,EAAYp0C,IAIlDyQ,EAAcq3B,gBApBJ,CAhBA,CAqCd,GAAC,CAAA9nC,IAAA,sBAAArB,MACD,WAAoC,IAC5BmnB,EAAIwuB,EADQ3rB,EAASlqB,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGvB81C,EAAS,CAAC,EAChB,IAAK11C,KAAKoiB,UAAYpiB,KAAKgsC,MACvB,OAAO0J,EACX,IAAK11C,KAAKktC,UACN,MAAO,CAAEyI,WAAY,UAGrBD,EAAOC,WAAa,GAExB,IAAM7xB,EAAoB9jB,KAAKuvC,uBAC/B,GAAIvvC,KAAKisC,WAQL,OAPAjsC,KAAKisC,YAAa,EAClByJ,EAAOrB,QAAU,GACjBqB,EAAOE,cACH9qB,GAAmBhB,EAAU8rB,gBAAkB,GACnDF,EAAO/xB,UAAYG,EACbA,EAAkB9jB,KAAK6jB,aAAc,IACrC,OACC6xB,EAEX,IAAMtM,EAAOppC,KAAK8xC,UAClB,IAAK9xC,KAAKwkC,kBAAoBxkC,KAAKuf,SAAW6pB,EAAKpqC,OAAQ,CACvD,IAAM62C,EAAc,CAAC,EAerB,OAdI71C,KAAK8I,QAAQ8X,WACbi1B,EAAYxB,aACsB/vC,IAA9BtE,KAAK6jB,aAAawwB,QACZr0C,KAAK6jB,aAAawwB,QAClB,EACVwB,EAAYD,cACR9qB,GAAmBhB,EAAU8rB,gBAAkB,IAEnD51C,KAAKitC,eAAiB/oB,GAAalkB,KAAK6jB,gBACxCgyB,EAAYlyB,UAAYG,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN9jB,KAAKitC,cAAe,GAEjB4I,CACX,CACA,IAAMC,EAAiB1M,EAAKS,iBAAmBT,EAAKvlB,aACpD7jB,KAAK+1C,0BACLL,EAAO/xB,UAAYwmB,GAAyBnqC,KAAKkzC,6BAA8BlzC,KAAKukC,UAAWuR,GAC3FhyB,IACA4xB,EAAO/xB,UAAYG,EAAkBgyB,EAAgBJ,EAAO/xB,YAEhE,IAAAqyB,EAAiBh2C,KAAKwkC,gBAAdniC,EAAC2zC,EAAD3zC,EAAGghB,EAAC2yB,EAAD3yB,EA+BX,IAAK,IAAMliB,KA9BXu0C,EAAOzxB,gBAAkB,GAAH1f,OAAiB,IAAXlC,EAAEgH,OAAY,MAAA9E,OAAgB,IAAX8e,EAAEha,OAAY,OACzD+/B,EAAKS,gBAKL6L,EAAOrB,QACHjL,IAASppC,KACiG,QAAnGy1C,EAAuC,QAAjCxuB,EAAK6uB,EAAezB,eAA4B,IAAPptB,EAAgBA,EAAKjnB,KAAK6jB,aAAawwB,eAA4B,IAAPoB,EAAgBA,EAAK,EACjIz1C,KAAK2pC,gBACD3pC,KAAK6jB,aAAawwB,QAClByB,EAAexB,YAO7BoB,EAAOrB,QACHjL,IAASppC,UACwBsE,IAA3BwxC,EAAezB,QACXyB,EAAezB,QACf,QAC2B/vC,IAA/BwxC,EAAexB,YACXwB,EAAexB,YACf,EAKApxB,EACd,QAA4B5e,IAAxBwxC,EAAe30C,GAAnB,CAEA,IAAA80C,EAA6B/yB,EAAgB/hB,GAArCkjC,EAAO4R,EAAP5R,QAAS6C,EAAO+O,EAAP/O,QAOXgP,EAAiC,SAArBR,EAAO/xB,UACnBmyB,EAAe30C,GACfkjC,EAAQyR,EAAe30C,GAAMioC,GACnC,GAAIlC,EAEA,IADA,IAAMiP,EAAMjP,EAAQrnC,OACXuB,EAAI,EAAGA,EAAI+0C,EAAK/0C,IACrBs0C,EAAOxO,EAAQ9lC,IAAM80C,OAIzBR,EAAOv0C,GAAO+0C,CAlBN,CAgChB,OANIl2C,KAAK8I,QAAQ8X,WACb80B,EAAOE,cACHxM,IAASppC,KACH8qB,GAAmBhB,EAAU8rB,gBAAkB,GAC/C,QAEPF,CACX,GAAC,CAAAv0C,IAAA,gBAAArB,MACD,WACIE,KAAK0pC,WAAa1pC,KAAK4pC,cAAWtlC,CACtC,GACA,CAAAnD,IAAA,YAAArB,MACA,WACIE,KAAK8xB,KAAK4a,MAAM9rC,SAAQ,SAACotB,GAAW,IAAI/G,EAAI,OAAwC,QAAhCA,EAAK+G,EAAKsY,wBAAqC,IAAPrf,OAAgB,EAASA,EAAGza,MAAQ,IAChIxM,KAAK8xB,KAAK4a,MAAM9rC,QAAQgvC,IACxB5vC,KAAK8xB,KAAKsb,YAAY3xB,OAC1B,KAAC+vB,CAAA,CAttCL,EAwtCJ,CACA,SAAS5J,GAAa5T,GAClBA,EAAK4T,cACT,CACA,SAASmO,GAAmB/hB,GACxB,IAAI/G,EACE2iB,GAAuC,QAA1B3iB,EAAK+G,EAAK0b,kBAA+B,IAAPziB,OAAgB,EAASA,EAAG2iB,WAAa5b,EAAK4b,SACnG,GAAI5b,EAAKuY,UACLvY,EAAKzO,QACLqqB,GACA5b,EAAKooB,aAAa,aAAc,CAChC,IAAAC,EAA2DroB,EAAKzO,OAA7CA,EAAM82B,EAAjBjY,UAAgCkY,EAAcD,EAA3BlF,YACnB6D,EAAkBhnB,EAAKllB,QAAvBksC,cACFjD,EAAWnI,EAAS3oC,SAAW+sB,EAAKzO,OAAOte,OAG3B,SAAlB+zC,EACAra,IAAS,SAACzB,GACN,IAAMqd,EAAexE,EACfnI,EAASuH,YAAYjY,GACrB0Q,EAASxL,UAAUlF,GACnBr5B,EAASo5B,GAAWsd,GAC1BA,EAAalsC,IAAMkV,EAAO2Z,GAAM7uB,IAChCksC,EAAapwC,IAAMowC,EAAalsC,IAAMxK,CAC1C,IAEKk1C,GAA0BC,EAAepL,EAASxL,UAAW7e,IAClEob,IAAS,SAACzB,GACN,IAAMqd,EAAexE,EACfnI,EAASuH,YAAYjY,GACrB0Q,EAASxL,UAAUlF,GACnBr5B,EAASo5B,GAAW1Z,EAAO2Z,IACjCqd,EAAapwC,IAAMowC,EAAalsC,IAAMxK,EAIlCmuB,EAAKsgB,iBAAmBtgB,EAAKsY,mBAC7BtY,EAAK2d,mBAAoB,EACzB3d,EAAKsgB,eAAepV,GAAM/yB,IACtB6nB,EAAKsgB,eAAepV,GAAM7uB,IAAMxK,EAE5C,IAEJ,IAAM22C,EAAc/b,KACpBhB,GAAa+c,EAAaj3B,EAAQqqB,EAASxL,WAC3C,IAAMqY,EAAchc,KAChBsX,EACAtY,GAAagd,EAAazoB,EAAKskB,eAAegE,GAAgB,GAAO1M,EAASuH,aAG9E1X,GAAagd,EAAal3B,EAAQqqB,EAASxL,WAE/C,IAAMmE,GAAoBqG,GAAY4N,GAClCrI,GAA2B,EAC/B,IAAKngB,EAAK0b,WAAY,CAClB,IAAMiI,EAAiB3jB,EAAKkkB,6BAK5B,GAAIP,IAAmBA,EAAejI,WAAY,CAC9C,IAAkBgN,EAAyC/E,EAAnD/H,SAAkC+M,EAAiBhF,EAAzBpyB,OAClC,GAAIm3B,GAAkBC,EAAc,CAChC,IAAMC,EAAmBlc,KACzBb,GAAqB+c,EAAkBhN,EAASxL,UAAWsY,EAAetY,WAC1E,IAAMqV,EAAiB/Y,KACvBb,GAAqB4Z,EAAgBl0B,EAAQo3B,EAAavY,WACrDyK,GAAiB+N,EAAkBnD,KACpCtF,GAA2B,GAE3BwD,EAAe7oC,QAAQimC,aACvB/gB,EAAKsgB,eAAiBmF,EACtBzlB,EAAKokB,qBAAuBwE,EAC5B5oB,EAAK2jB,eAAiBA,EAE9B,CACJ,CACJ,CACA3jB,EAAK0hB,gBAAgB,YAAa,CAC9BnwB,OAAAA,EACAqqB,SAAAA,EACAliC,MAAO+uC,EACPD,YAAAA,EACAjU,iBAAAA,EACA4L,yBAAAA,GAER,MACK,GAAIngB,EAAKuY,SAAU,CACpB,IAAQ5P,EAAmB3I,EAAKllB,QAAxB6tB,eACRA,GAAkBA,GACtB,CAMA3I,EAAKllB,QAAQgN,gBAAaxR,CAC9B,CACA,SAASqoC,GAAoB3e,GAIzB8c,GAAoBC,aACf/c,EAAKhN,SAQLgN,EAAKukB,iBACNvkB,EAAK2d,kBAAoB3d,EAAKhN,OAAO2qB,mBAOzC3d,EAAK4d,0BAA4B5d,EAAK4d,wBAA0Bp7B,QAAQwd,EAAK2d,mBACzE3d,EAAKhN,OAAO2qB,mBACZ3d,EAAKhN,OAAO4qB,0BAChB5d,EAAK6d,mBAAqB7d,EAAK6d,iBAAmB7d,EAAKhN,OAAO6qB,kBAClE,CACA,SAASiB,GAAgB9e,GACrBA,EAAK2d,kBACD3d,EAAK4d,wBACD5d,EAAK6d,kBACD,CAChB,CACA,SAASoE,GAAcjiB,GACnBA,EAAKiiB,eACT,CACA,SAASL,GAAkB5hB,GACvBA,EAAK4hB,mBACT,CACA,SAASC,GAAmB7hB,GACxBA,EAAK+b,eAAgB,CACzB,CACA,SAAS+F,GAAoB9hB,GACzB,IAAQpc,EAAkBoc,EAAKllB,QAAvB8I,cACJA,GAAiBA,EAAcqF,WAAW4/B,uBAC1CjlC,EAAcuI,OAAO,uBAEzB6T,EAAKud,gBACT,CACA,SAAS0C,GAAgBjgB,GACrBA,EAAKigB,kBACLjgB,EAAKyjB,YAAczjB,EAAKsgB,eAAiBtgB,EAAKhvB,YAASsF,EACvD0pB,EAAK2d,mBAAoB,CAC7B,CACA,SAASiB,GAAmB5e,GACxBA,EAAK4e,oBACT,CACA,SAASC,GAAe7e,GACpBA,EAAK6e,gBACT,CACA,SAASsC,GAAcnhB,GACnBA,EAAKmhB,eACT,CACA,SAASe,GAAoBhK,GACzBA,EAAM4Q,oBACV,CACA,SAAS7C,GAAaF,EAAQrsC,EAAO3D,GACjCgwC,EAAOva,WAAYD,EAAAA,GAAAA,GAAI7xB,EAAM8xB,UAAW,EAAGz1B,GAC3CgwC,EAAOtrB,OAAQ8Q,EAAAA,GAAAA,GAAI7xB,EAAM+gB,MAAO,EAAG1kB,GACnCgwC,EAAO1qC,OAAS3B,EAAM2B,OACtB0qC,EAAOza,YAAc5xB,EAAM4xB,WAC/B,CACA,SAAS6a,GAAQJ,EAAQ39B,EAAM49B,EAAIjwC,GAC/BgwC,EAAO1pC,KAAMkvB,EAAAA,GAAAA,GAAInjB,EAAK/L,IAAK2pC,EAAG3pC,IAAKtG,GACnCgwC,EAAO5tC,KAAMozB,EAAAA,GAAAA,GAAInjB,EAAKjQ,IAAK6tC,EAAG7tC,IAAKpC,EACvC,CAKA,SAAS8vC,GAAoB7lB,GACzB,OAAQA,EAAK6b,sBAAwDvlC,IAArC0pB,EAAK6b,gBAAgByK,WACzD,CACA,IAAM9F,GAA0B,CAC5B3pC,SAAU,IACV5B,KAAM,CAAC,GAAK,EAAG,GAAK,IAElB8zC,GAAoB,SAACC,GAAM,MAA0B,qBAAdC,WACzCA,UAAUC,UAAUnuB,cAAc9F,SAAS+zB,EAAO,EAMhDG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEr0C,KAAKqN,MACL7N,GAAAA,EACN,SAASgvC,GAAUhY,GAEfA,EAAK7uB,IAAM8sC,GAAWje,EAAK7uB,KAC3B6uB,EAAK/yB,IAAMgxC,GAAWje,EAAK/yB,IAC/B,CAKA,SAAS4uC,GAA0BC,EAAepL,EAAUrqB,GACxD,MAA0B,aAAlBy1B,GACe,oBAAlBA,IACI7b,GAAO2P,GAAYc,GAAWd,GAAYvpB,GAAS,GAChE,CKh9CA,IAAM63B,GAAyBlM,GAAqB,CAChDC,qBAAsB,SAACztB,EAAKvD,GAAM,OAAKmS,GAAY5O,EAAK,SAAUvD,EAAO,EACzEkxB,cAAe,iBAAO,CAClBhpC,EAAGoS,SAAS4iC,gBAAgBC,YAAc7iC,SAAS8iC,KAAKD,WACxDj0B,EAAG5O,SAAS4iC,gBAAgBG,WAAa/iC,SAAS8iC,KAAKC,UAC1D,EACDlM,kBAAmB,kBAAM,CAAI,ICN3BrL,GAAqB,CACvBh6B,aAAS3B,GAEPmzC,GAAqBvM,GAAqB,CAC5CG,cAAe,SAACjpB,GAAQ,MAAM,CAC1B/f,EAAG+f,EAASk1B,WACZj0B,EAAGjB,EAASo1B,UACf,EACDpM,cAAe,WACX,IAAKnL,GAAmBh6B,QAAS,CAC7B,IAAMyxC,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAaplC,MAAMgG,QACnBo/B,EAAa/R,WAAW,CAAE8K,cAAc,IACxCxQ,GAAmBh6B,QAAUyxC,CACjC,CACA,OAAOzX,GAAmBh6B,OAC9B,EACAslC,eAAgB,SAACnpB,EAAUtiB,GACvBsiB,EAAS2B,MAAMJ,eAAsBrf,IAAVxE,EAAsBA,EAAQ,MAC7D,EACAwrC,kBAAmB,SAAClpB,GAAQ,OAAK5R,QAAuD,UAA/C8H,OAAOq/B,iBAAiBv1B,GAAUw1B,SAAqB,IClB9F34B,GAAO,CACTI,IAAK,CACD0O,QAASqV,IAEbnkB,KAAM,CACF8O,QAASgV,GACTyI,eAAgBiM,GAChB/2B,cAAAA,K,qCCCFm3B,GAAwB,uDAQ9B,IAAMC,GAAW,EACjB,SAASC,GAAiB9xC,EAAS8N,GAAoB,IAAX22B,EAAK9qC,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,GAChDuE,EAAAA,GAAAA,GAAUumC,GAASoN,GAAU,yDAAFvzC,OAA2D0B,EAAO,yDAC7F,IAAA+xC,EAVJ,SAA0B/xC,GACtB,IAAMgyC,EAAQJ,GAAsBK,KAAKjyC,GACzC,IAAKgyC,EACD,MAAO,CAAC,GACZ,IAAAE,GAAA9zC,EAAAA,GAAAA,GAA4B4zC,EAAK,GACjC,MAAO,CADOE,EAAA,GAAUA,EAAA,GAE5B,CAI8BC,CAAiBnyC,GAAQoyC,GAAAh0C,EAAAA,GAAAA,GAAA2zC,EAAA,GAA5CM,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEtB,GAAKC,EAAL,CAGA,IAAMt/B,EAAWV,OAAOq/B,iBAAiB5jC,GAASykC,iBAAiBF,GACnE,GAAIt/B,EAAU,CACV,IAAMy/B,EAAUz/B,EAASiM,OACzB,OAAOyzB,EAAAA,GAAAA,GAAkBD,GAAWpa,WAAWoa,GAAWA,CAC9D,CACK,OAAIE,EAAAA,EAAAA,IAAmBJ,GAEjBR,GAAiBQ,EAAUxkC,EAAS22B,EAAQ,GAG5C6N,CAZD,CAcd,CAMA,SAASK,GAAoBhnC,EAAanN,EAAiBiT,GAAe,IAAzB1Y,EAAMK,OAAAwmB,OAAA,IC/CxC,SAAmCgzB,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,sBAAwBD,EAC/D,CD6CuDE,CAAAt0C,GAAAA,IAC7CsP,EAAUnC,EAAc3L,QAC9B,KAAM8N,aAAmBV,SACrB,MAAO,CAAErU,OAAAA,EAAQ0Y,cAAAA,GAiBrB,IAAK,IAAMvW,KAdPuW,IACAA,GAAalO,EAAAA,EAAAA,GAAA,GAAQkO,IAGzB9F,EAAclN,OAAO9D,SAAQ,SAACd,GAC1B,IAAMmG,EAAUnG,EAAMhB,MACtB,IAAK65C,EAAAA,EAAAA,IAAmB1yC,GAAxB,CAEA,IAAM+S,EAAW++B,GAAiB9xC,EAAS8N,GACvCiF,GACAlZ,EAAMqS,IAAI6G,EAHJ,CAId,IAGkBha,EAAQ,CACtB,IAAMiH,EAAUjH,EAAOmC,GACvB,IAAKw3C,EAAAA,EAAAA,IAAmB1yC,GAAxB,CAEA,IAAM+S,EAAW++B,GAAiB9xC,EAAS8N,GACtCiF,IAGLha,EAAOmC,GAAO6X,EACTtB,IACDA,EAAgB,CAAC,QAIMpT,IAAvBoT,EAAcvW,KACduW,EAAcvW,GAAO8E,GAZb,CAchB,CACA,MAAO,CAAEjH,OAAAA,EAAQ0Y,cAAAA,EACrB,C,0BE9EMshC,GAAiB,IAAItnC,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEEunC,GAAkB,SAAC93C,GAAG,OAAK63C,GAAevlC,IAAItS,EAAI,EAIlD+3C,GAAgB,SAAC3tC,GAAC,OAAKA,IAAM4tC,GAAAA,IAAU5tC,IAAM4b,EAAAA,EAAE,EAC/CiyB,GAAmB,SAACC,EAAQC,GAAG,OAAKjb,WAAWgb,EAAOE,MAAM,MAAMD,GAAK,EACvEE,GAAyB,SAACC,EAAMC,GAAI,OAAK,SAACC,EAAKl1C,GAAoB,IAAhBkf,EAASlf,EAATkf,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAMi2B,EAAWj2B,EAAUs0B,MAAM,sBACjC,GAAI2B,EACA,OAAOR,GAAiBQ,EAAS,GAAIF,GAGrC,IAAML,EAAS11B,EAAUs0B,MAAM,oBAC/B,OAAIoB,EACOD,GAAiBC,EAAO,GAAII,GAG5B,CAGnB,CAAC,EACKI,GAAgB,IAAInoC,IAAI,CAAC,IAAK,IAAK,MACnCooC,GAAgCr2B,EAAAA,EAAmBjjB,QAAO,SAACW,GAAG,OAAM04C,GAAcpmC,IAAItS,EAAI,IAehG,IAAM44C,GAAmB,CAErB1xB,MAAO,SAAArV,EAAAsH,GAAA,IAAGjY,EAAC2Q,EAAD3Q,EAAC23C,EAAA1/B,EAAM2/B,YAAAA,OAAW,IAAAD,EAAG,IAAGA,EAAAE,EAAA5/B,EAAE6/B,aAAAA,OAAY,IAAAD,EAAG,IAAGA,EAAA,OAAO73C,EAAE8D,IAAM9D,EAAEgI,IAAMg0B,WAAW4b,GAAe5b,WAAW8b,EAAa,EAC/H5xB,OAAQ,SAAA6xB,EAAAC,GAAA,IAAGh3B,EAAC+2B,EAAD/2B,EAACi3B,EAAAD,EAAME,WAAAA,OAAU,IAAAD,EAAG,IAAGA,EAAAE,EAAAH,EAAEI,cAAAA,OAAa,IAAAD,EAAG,IAAGA,EAAA,OAAOn3B,EAAEld,IAAMkd,EAAEhZ,IAAMg0B,WAAWkc,GAAclc,WAAWoc,EAAc,EAChI5f,IAAK,SAAC8e,EAAKe,GAAA,IAAI7f,EAAG6f,EAAH7f,IAAG,OAAOwD,WAAWxD,EAAI,EACxCC,KAAM,SAAC6e,EAAKgB,GAAA,IAAI7f,EAAI6f,EAAJ7f,KAAI,OAAOuD,WAAWvD,EAAK,EAC3CE,OAAQ,SAAA4f,EAAAC,GAAA,IAAGx3B,EAACu3B,EAADv3B,EAAOwX,EAAGggB,EAAHhgB,IAAG,OAAOwD,WAAWxD,IAAQxX,EAAEld,IAAMkd,EAAEhZ,IAAI,EAC7D0wB,MAAO,SAAA+f,EAAAC,GAAA,IAAG14C,EAACy4C,EAADz4C,EAAOy4B,EAAIigB,EAAJjgB,KAAI,OAAOuD,WAAWvD,IAASz4B,EAAE8D,IAAM9D,EAAEgI,IAAI,EAE9DhI,EAAGm3C,GAAuB,EAAG,IAC7Bn2B,EAAGm2B,GAAuB,EAAG,KAGjCO,GAAiBiB,WAAajB,GAAiB13C,EAC/C03C,GAAiBkB,WAAalB,GAAiB12B,EAC/C,IA6BM63B,GAAmC,SAACtpC,EAAe5S,GAA4C,IAApCqK,EAAMzJ,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG8X,EAAa9X,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3FZ,GAAMwK,EAAAA,EAAAA,GAAA,GAAQxK,GACd0Y,GAAalO,EAAAA,EAAAA,GAAA,GAAQkO,GACrB,IAAMyjC,EAAuB97C,OAAOgB,KAAKrB,GAAQwB,OAAOy4C,IAGpDmC,EAAyB,GACzBC,GAAsC,EACpCC,EAAuB,GAkF7B,GAjFAH,EAAqBv6C,SAAQ,SAACO,GAC1B,IAAMrB,EAAQ8R,EAAcgG,SAASzW,GACrC,GAAKyQ,EAAc2pC,SAASp6C,GAA5B,CAEA,IAGIq6C,EAHAplC,EAAO/M,EAAOlI,GACds6C,GAAWC,EAAAA,GAAAA,GAAuBtlC,GAChC49B,EAAKh1C,EAAOmC,GAMlB,IAAIwZ,EAAAA,GAAAA,GAAkBq5B,GAAK,CACvB,IAAM2H,EAAe3H,EAAGn0C,OAClB+7C,EAAsB,OAAV5H,EAAG,GAAc,EAAI,EACvC59B,EAAO49B,EAAG4H,GACVH,GAAWC,EAAAA,GAAAA,GAAuBtlC,GAClC,IAAK,IAAIhV,EAAIw6C,EAAWx6C,EAAIu6C,GAKV,OAAV3H,EAAG5yC,GAL+BA,IAOjCo6C,GAMDr3C,EAAAA,GAAAA,IAAUu3C,EAAAA,GAAAA,GAAuB1H,EAAG5yC,MAAQo6C,EAAQ,2CALpDA,GAASE,EAAAA,GAAAA,GAAuB1H,EAAG5yC,KACnC+C,EAAAA,GAAAA,GAAUq3C,IAAWC,GAChBvC,GAAcuC,IAAavC,GAAcsC,GAAU,gEAMpE,MAEIA,GAASE,EAAAA,GAAAA,GAAuB1H,GAEpC,GAAIyH,IAAaD,EAGb,GAAItC,GAAcuC,IAAavC,GAAcsC,GAAS,CAClD,IAAMv1C,EAAUnG,EAAMhB,MACC,kBAAZmH,GACPnG,EAAMqS,IAAIksB,WAAWp4B,IAEP,kBAAP+tC,EACPh1C,EAAOmC,GAAOk9B,WAAW2V,GAEpB9wC,MAAMC,QAAQ6wC,IAAOwH,IAAWr0B,EAAAA,KACrCnoB,EAAOmC,GAAO6yC,EAAG9uC,IAAIm5B,YAE7B,MACuB,OAAbod,QAAkC,IAAbA,OAAsB,EAASA,EAAS93B,aACvD,OAAX63B,QAA8B,IAAXA,OAAoB,EAASA,EAAO73B,aAC9C,IAATvN,GAAqB,IAAP49B,GAGF,IAAT59B,EACAtW,EAAMqS,IAAIqpC,EAAO73B,UAAUvN,IAG3BpX,EAAOmC,GAAOs6C,EAAS93B,UAAUqwB,IAMhCqH,IACDD,EAvIpB,SAAyCxpC,GACrC,IAAMiqC,EAAoB,GAW1B,OAVA/B,GAA8Bl5C,SAAQ,SAACO,GACnC,IAAMrB,EAAQ8R,EAAcgG,SAASzW,QACvBmD,IAAVxE,IACA+7C,EAAkBn7C,KAAK,CAACS,EAAKrB,EAAMhB,QACnCgB,EAAMqS,IAAIhR,EAAIoU,WAAW,SAAW,EAAI,GAEhD,IAEIsmC,EAAkBh8C,QAClB+R,EAAc8P,SACXm6B,CACX,CA2HwBC,CAAgClqC,GACpCypC,GAAsC,GAE1CC,EAAqB56C,KAAKS,GAC1BuW,EAAcvW,QACamD,IAAvBoT,EAAcvW,GACRuW,EAAcvW,GACdnC,EAAOmC,GACjBrB,EAAMi8C,KAAK/H,GA1ET,CA6Ed,IACIsH,EAAqBz7C,OAAQ,CAC7B,IAAMm8C,EAAUV,EAAqBh6C,QAAQ,WAAa,EACpDgX,OAAO2jC,YACP,KACAC,EA3HmB,SAACl9C,EAAQ4S,EAAeuqC,GACrD,IAAMC,EAAaxqC,EAAcgrB,qBAC3B7oB,EAAUnC,EAAc3L,QACxBo2C,EAAuB1E,iBAAiB5jC,GACtCi/B,EAAYqJ,EAAZrJ,QACF3pC,EAAS,CAAC,EAGA,SAAZ2pC,GACAphC,EAAc4jC,eAAe,UAAWx2C,EAAOg0C,SAAW,SAK9DmJ,EAAYv7C,SAAQ,SAACO,GACjBkI,EAAOlI,GAAO44C,GAAiB54C,GAAKi7C,EAAYC,EACpD,IAEAzqC,EAAc8P,SACd,IAAM46B,EAAa1qC,EAAcgrB,qBAQjC,OAPAuf,EAAYv7C,SAAQ,SAACO,GAGjB,IAAMrB,EAAQ8R,EAAcgG,SAASzW,GACrCrB,GAASA,EAAMi8C,KAAK1yC,EAAOlI,IAC3BnC,EAAOmC,GAAO44C,GAAiB54C,GAAKm7C,EAAYD,EACpD,IACOr9C,CACX,CA+FgCu9C,CAAyBv9C,EAAQ4S,EAAe0pC,GAaxE,OAXIF,EAAuBv7C,QACvBu7C,EAAuBx6C,SAAQ,SAAA47C,GAAkB,IAAAC,GAAAp4C,EAAAA,GAAAA,GAAAm4C,EAAA,GAAhBr7C,EAAGs7C,EAAA,GAAE38C,EAAK28C,EAAA,GACvC7qC,EAAcgG,SAASzW,GAAKgR,IAAIrS,EACpC,IAGJ8R,EAAc8P,SAEVX,EAAAA,GAAyB,OAAZi7B,GACb1jC,OAAOokC,SAAS,CAAE7hB,IAAKmhB,IAEpB,CAAEh9C,OAAQk9C,EAAiBxkC,cAAAA,EACtC,CAEI,MAAO,CAAE1Y,OAAAA,EAAQ0Y,cAAAA,EAEzB,EAQA,SAASilC,GAAe/qC,EAAe5S,EAAQqK,EAAQqO,GACnD,OA3MqB,SAAC1Y,GACtB,OAAOK,OAAOgB,KAAKrB,GAAQ+J,KAAKkwC,GACpC,CAyMW2D,CAAiB59C,GAClBk8C,GAAiCtpC,EAAe5S,EAAQqK,EAAQqO,GAChE,CAAE1Y,OAAAA,EAAQ0Y,cAAAA,EACpB,CC5NA,ICNMmlC,GAAuB,CAAE52C,QAAS,MAClC62C,GAA2B,CAAE72C,SAAS,G,aCF5C,IAAM82C,GAAqB,IAAIzrB,Q,kCCoBzB0rB,GAAe39C,OAAOgB,KAAKmf,GAC3By9B,GAAcD,GAAan9C,OAC3Bq9C,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkBr/B,EAAaje,OAK/Bu9C,GAAa,WACf,SAAAA,EAAA34C,GAAiG,IAAAsqB,EAAA,KAAnF/N,EAAMvc,EAANuc,OAAQhD,EAAKvZ,EAALuZ,MAAOkD,EAAezc,EAAfyc,gBAAiBC,EAAmB1c,EAAnB0c,oBAAqBL,EAAWrc,EAAXqc,YAAgBhY,EAAOlJ,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACub,EAAAA,GAAAA,GAAA,KAAAiiC,GAK3Fp9C,KAAKiG,QAAU,KAIfjG,KAAK0pB,SAAW,IAAIhY,IAIpB1R,KAAKke,eAAgB,EACrBle,KAAK+d,uBAAwB,EAQ7B/d,KAAK0Y,mBAAqB,KAM1B1Y,KAAK0E,OAAS,IAAIme,IAIlB7iB,KAAKqgB,SAAW,CAAC,EAKjBrgB,KAAKq9C,mBAAqB,IAAIx6B,IAM9B7iB,KAAKs9C,iBAAmB,CAAC,EAIzBt9C,KAAKu9C,OAAS,CAAC,EAMfv9C,KAAKw9C,uBAAyB,CAAC,EAC/Bx9C,KAAKy9C,aAAe,kBAAM1uB,EAAK5U,OAAO,SAAU4U,EAAKlL,aAAa,EAClE7jB,KAAK0hB,OAAS,WACLqN,EAAK9oB,UAEV8oB,EAAK2uB,eACL3uB,EAAK4uB,eAAe5uB,EAAK9oB,QAAS8oB,EAAK3E,YAAa2E,EAAK/Q,MAAM+F,MAAOgL,EAAKhF,YAC/E,EACA/pB,KAAKipC,eAAiB,kBAAM18B,GAAAA,GAAMmV,OAAOqN,EAAKrN,QAAQ,GAAO,EAAK,EAClE,IAAQmC,EAA8B/C,EAA9B+C,aAAcuG,EAAgBtJ,EAAhBsJ,YACtBpqB,KAAK6jB,aAAeA,EACpB7jB,KAAK49C,YAAUp0C,EAAAA,EAAAA,GAAA,GAAQqa,GACvB7jB,KAAK69C,cAAgB7/B,EAAMO,SAAO/U,EAAAA,EAAAA,GAAA,GAAQqa,GAAiB,CAAC,EAC5D7jB,KAAKoqB,YAAcA,EACnBpqB,KAAKghB,OAASA,EACdhhB,KAAKge,MAAQA,EACbhe,KAAKkhB,gBAAkBA,EACvBlhB,KAAK0qC,MAAQ1pB,EAASA,EAAO0pB,MAAQ,EAAI,EACzC1qC,KAAKmhB,oBAAsBA,EAC3BnhB,KAAK8I,QAAUA,EACf9I,KAAK+d,sBAAwBA,EAAsBC,GACnDhe,KAAKke,cAAgBA,EAAcF,GAC/Bhe,KAAKke,gBACLle,KAAKsZ,gBAAkB,IAAI5H,KAE/B1R,KAAKq1B,uBAAyB7kB,QAAQwQ,GAAUA,EAAO/a,SAWvD,IAAA63C,EAA+C99C,KAAKuqB,4BAA4BvM,EAAO,CAAC,GAAhFrG,EAAUmmC,EAAVnmC,WAAeomC,GAAmB/8C,EAAAA,EAAAA,GAAA88C,EAAA10C,IAC1C,IAAK,IAAMjI,KAAO48C,EAAqB,CACnC,IAAMj+C,EAAQi+C,EAAoB58C,QACRmD,IAAtBuf,EAAa1iB,KAAsBwkB,EAAAA,EAAAA,GAAc7lB,KACjDA,EAAMqS,IAAI0R,EAAa1iB,IAAM,IACzBwX,EAAAA,GAAAA,GAAwBhB,IACxBA,EAAW9F,IAAI1Q,GAG3B,CACJ,CA+WC,OA9WDma,EAAAA,GAAAA,GAAA8hC,EAAA,EAAAj8C,IAAA,8BAAArB,MAOA,SAA4Bk+C,EAAQC,GAChC,MAAO,CAAC,CACZ,GAAC,CAAA98C,IAAA,QAAArB,MACD,SAAMsiB,GAAU,IAAA8M,EAAA,KACZlvB,KAAKiG,QAAUmc,EACf26B,GAAmB5qC,IAAIiQ,EAAUpiB,MAC7BA,KAAK+pB,aAAe/pB,KAAK+pB,WAAW3H,UACpCpiB,KAAK+pB,WAAWzX,MAAM8P,GAEtBpiB,KAAKghB,QAAUhhB,KAAKke,gBAAkBle,KAAK+d,wBAC3C/d,KAAKk+C,sBAAwBl+C,KAAKghB,OAAOm9B,gBAAgBn+C,OAE7DA,KAAK0E,OAAO9D,SAAQ,SAACd,EAAOqB,GAAG,OAAK+tB,EAAKkvB,kBAAkBj9C,EAAKrB,EAAM,IACjEg9C,GAAyB72C,SC1JtC,WAEI,GADA62C,GAAyB72C,SAAU,EAC9B8a,EAAAA,EAEL,GAAIzI,OAAO+lC,WAAY,CACnB,IAAMC,EAAmBhmC,OAAO+lC,WAAW,4BACrCE,EAA8B,WAAH,OAAU1B,GAAqB52C,QAAUq4C,EAAiBrvB,OAAO,EAClGqvB,EAAiBE,YAAYD,GAC7BA,GACJ,MAEI1B,GAAqB52C,SAAU,CAEvC,CD8IYw4C,GAEJz+C,KAAK0Y,mBAC4B,UAA7B1Y,KAAKmhB,sBAE8B,WAA7BnhB,KAAKmhB,qBAED07B,GAAqB52C,SAI/BjG,KAAKghB,QACLhhB,KAAKghB,OAAO0I,SAAS7X,IAAI7R,MAC7BA,KAAKmM,OAAOnM,KAAKge,MAAOhe,KAAKkhB,gBACjC,GAAC,CAAA/f,IAAA,UAAArB,MACD,WAQI,IAAK,IAAMqB,KAPX47C,GAAmBjrC,OAAO9R,KAAKiG,SAC/BjG,KAAK+pB,YAAc/pB,KAAK+pB,WAAW1H,WACnC5V,EAAAA,GAAAA,IAAYzM,KAAKy9C,eACjBhxC,EAAAA,GAAAA,IAAYzM,KAAK0hB,QACjB1hB,KAAKq9C,mBAAmBz8C,SAAQ,SAACgY,GAAM,OAAKA,GAAQ,IACpD5Y,KAAKk+C,uBAAyBl+C,KAAKk+C,wBACnCl+C,KAAKghB,QAAUhhB,KAAKghB,OAAO0I,SAAS5X,OAAO9R,MACzBA,KAAKu9C,OACnBv9C,KAAKu9C,OAAOp8C,GAAKsa,QAErB,IAAK,IAAMta,KAAOnB,KAAKqgB,SACnBrgB,KAAKqgB,SAASlf,GAAKkhB,UAEvBriB,KAAKiG,QAAU,IACnB,GAAC,CAAA9E,IAAA,oBAAArB,MACD,SAAkBqB,EAAKrB,GAAO,IAAA2gC,EAAA,KACpBie,EAAmBppC,EAAAA,EAAe7B,IAAItS,GACtCw9C,EAAiB7+C,EAAM8+C,GAAG,UAAU,SAACC,GACvCpe,EAAK5c,aAAa1iB,GAAO09C,EACzBpe,EAAKziB,MAAMrP,UACPpC,GAAAA,GAAMJ,OAAOs0B,EAAKgd,cAAc,GAAO,GACvCiB,GAAoBje,EAAK1W,aACzB0W,EAAK1W,WAAW8hB,kBAAmB,EAE3C,IACMiT,EAAwBh/C,EAAM8+C,GAAG,gBAAiB5+C,KAAKipC,gBAC7DjpC,KAAKq9C,mBAAmBlrC,IAAIhR,GAAK,WAC7Bw9C,IACAG,GACJ,GACJ,GAAC,CAAA39C,IAAA,mBAAArB,MACD,SAAiBi/C,GAIb,OAAK/+C,KAAKiG,SACLjG,KAAKg/C,0BACNh/C,KAAKiO,OAAS8wC,EAAM9wC,KAGjBjO,KAAKg/C,yBAAyBh/C,KAAKiG,QAAS84C,EAAM94C,SAF9C,CAGf,GAAC,CAAA9E,IAAA,eAAArB,MACD,SAAAkT,EAA6CgP,EAAUhC,EAAmB+B,GAetE,IAfgG,IAC5Fk9B,EACAv+B,EAF4FugB,EAAA,KAAxEie,GAALlsC,EAAR0W,UAA0B1oB,EAAAA,EAAAA,GAAAgS,EAAAmsC,KAe5B/9C,EAAI,EAAGA,EAAI67C,GAAa77C,IAAK,CAClC,IAAM6c,EAAO++B,GAAa57C,GAC1Bg+C,EAA2G5/B,EAAmBvB,GAAtHwB,EAAS2/B,EAAT3/B,UAAoB4/B,EAAkBD,EAA3BrxB,QAA6Byd,EAAc4T,EAAd5T,eAA+B8T,EAAsBF,EAArC1+B,cAC5D8qB,IACAyT,EAA4BzT,GAC5B/rB,EAAUy/B,MACLl/C,KAAKqgB,SAASpC,IAASohC,IACxBr/C,KAAKqgB,SAASpC,GAAQ,IAAIohC,EAAmBr/C,OAE7Cs/C,IACA5+B,EAAgB4+B,GAG5B,CACA,IAAKt/C,KAAK+pB,YAAck1B,EAA2B,CAC/Cj/C,KAAK+pB,WAAa,IAAIk1B,EAA0Bj/C,KAAK6jB,aAAc7jB,KAAKghB,QAAUhhB,KAAKghB,OAAO+I,YAC9F,IAAQnJ,EAAuEs+B,EAAvEt+B,SAAUrB,EAA6D2/B,EAA7D3/B,OAAQN,EAAqDigC,EAArDjgC,KAAMqgB,EAA+C4f,EAA/C5f,gBAAiBmR,EAA8ByO,EAA9BzO,aAAc1B,EAAgBmQ,EAAhBnQ,WAC/D/uC,KAAK+pB,WAAW4b,WAAW,CACvB/kB,SAAAA,EACArB,OAAAA,EACA6wB,oBAAqB5/B,QAAQyO,IACxBqgB,GAAmB7hB,EAAY6hB,GACpC1tB,cAAe5R,KACfipC,eAAgB,kBAAMhI,EAAKgI,gBAAgB,EAQ3C+L,cAAiC,kBAAXz1B,EAAsBA,EAAS,OACrD41B,uBAAwBpzB,EACxB0uB,aAAAA,EACA1B,WAAAA,GAER,CACA,OAAOruB,CACX,GAAC,CAAAvf,IAAA,iBAAArB,MACD,WACI,IAAK,IAAMqB,KAAOnB,KAAKqgB,SAAU,CAC7B,IAAMk/B,EAAUv/C,KAAKqgB,SAASlf,GAC1Bo+C,EAAQtxB,UACRsxB,EAAQpzC,UAGRozC,EAAQjtC,QACRitC,EAAQtxB,WAAY,EAE5B,CACJ,GAAC,CAAA9sB,IAAA,eAAArB,MACD,WACIE,KAAKw/C,MAAMx/C,KAAKoqB,YAAapqB,KAAK6jB,aAAc7jB,KAAK8I,QAAS9I,KAAKge,MACvE,GACA,CAAA7c,IAAA,qBAAArB,MAKA,WACI,OAAOE,KAAKiG,QACNjG,KAAKy/C,2BAA2Bz/C,KAAKiG,QAASjG,KAAKge,OACnD0c,IACV,GAAC,CAAAv5B,IAAA,iBAAArB,MACD,SAAeqB,GACX,OAAOnB,KAAK6jB,aAAa1iB,EAC7B,GAAC,CAAAA,IAAA,iBAAArB,MACD,SAAeqB,EAAKrB,GAChBE,KAAK6jB,aAAa1iB,GAAOrB,CAC7B,GACA,CAAAqB,IAAA,uBAAArB,MAOA,SAAqBd,GAA0B,IAAlB0gD,IAAS9/C,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,KAAAA,UAAA,GAClC,OAAOI,KAAK2/C,iCAAiC3gD,EAAQgB,KAAKge,MAAO0hC,EACrE,GACA,CAAAv+C,IAAA,SAAArB,MAIA,SAAOke,EAAOkD,IACNlD,EAAM8F,mBAAqB9jB,KAAKge,MAAM8F,oBACtC9jB,KAAKipC,iBAETjpC,KAAKwqB,UAAYxqB,KAAKge,MACtBhe,KAAKge,MAAQA,EACbhe,KAAK62B,oBAAsB72B,KAAKkhB,gBAChClhB,KAAKkhB,gBAAkBA,EAIvB,IAAK,IAAI9f,EAAI,EAAGA,EAAI87C,GAAkBr9C,OAAQuB,IAAK,CAC/C,IAAMD,EAAM+7C,GAAkB97C,GAC1BpB,KAAKw9C,uBAAuBr8C,KAC5BnB,KAAKw9C,uBAAuBr8C,YACrBnB,KAAKw9C,uBAAuBr8C,IAEvC,IAAMy+C,EAAW5hC,EAAM,KAAO7c,GAC1By+C,IACA5/C,KAAKw9C,uBAAuBr8C,GAAOnB,KAAK4+C,GAAGz9C,EAAKy+C,GAExD,CACA5/C,KAAKs9C,iBE5Ub,SAAqCvpC,EAASlO,EAAMmuB,GAChD,IAAQrc,EAAe9R,EAAf8R,WACR,IAAK,IAAMxW,KAAO0E,EAAM,CACpB,IAAMg6C,EAAYh6C,EAAK1E,GACjB2+C,EAAY9rB,EAAK7yB,GACvB,IAAIwkB,EAAAA,EAAAA,GAAck6B,GAKd9rC,EAAQgsC,SAAS5+C,EAAK0+C,IAClBlnC,EAAAA,GAAAA,GAAwBhB,IACxBA,EAAW9F,IAAI1Q,QAUlB,IAAIwkB,EAAAA,EAAAA,GAAcm6B,GAKnB/rC,EAAQgsC,SAAS5+C,GAAKqhC,EAAAA,GAAAA,IAAYqd,EAAW,CAAEtrC,MAAOR,MAClD4E,EAAAA,GAAAA,GAAwBhB,IACxBA,EAAWiB,OAAOzX,QAGrB,GAAI2+C,IAAcD,EAMnB,GAAI9rC,EAAQwnC,SAASp6C,GAAM,CACvB,IAAM6+C,EAAgBjsC,EAAQ6D,SAASzW,IAEtC6+C,EAAcxnC,aAAewnC,EAAc7tC,IAAI0tC,EACpD,KACK,CACD,IAAMhB,EAAc9qC,EAAQksC,eAAe9+C,GAC3C4S,EAAQgsC,SAAS5+C,GAAKqhC,EAAAA,GAAAA,SAA4Bl+B,IAAhBu6C,EAA4BA,EAAcgB,EAAW,CAAEtrC,MAAOR,IACpG,CAER,CAEA,IAAK,IAAM5S,KAAO6yB,OACI1vB,IAAduB,EAAK1E,IACL4S,EAAQmsC,YAAY/+C,GAE5B,OAAO0E,CACX,CFqRgCs6C,CAA4BngD,KAAMA,KAAKuqB,4BAA4BvM,EAAOhe,KAAKwqB,WAAYxqB,KAAKs9C,kBACpHt9C,KAAKogD,wBACLpgD,KAAKogD,wBAEb,GAAC,CAAAj/C,IAAA,WAAArB,MACD,WACI,OAAOE,KAAKge,KAChB,GACA,CAAA7c,IAAA,aAAArB,MAGA,SAAWme,GACP,OAAOje,KAAKge,MAAMG,SAAWne,KAAKge,MAAMG,SAASF,QAAQ3Z,CAC7D,GACA,CAAAnD,IAAA,uBAAArB,MAGA,WACI,OAAOE,KAAKge,MAAMlI,UACtB,GAAC,CAAA3U,IAAA,wBAAArB,MACD,WACI,OAAOE,KAAKge,MAAMlD,kBACtB,GAAC,CAAA3Z,IAAA,wBAAArB,MACD,WACI,OAAOE,KAAKke,cACNle,KACAA,KAAKghB,OACDhhB,KAAKghB,OAAOq/B,6BACZ/7C,CACd,GAAC,CAAAnD,IAAA,oBAAArB,MACD,WACI,GAD2BF,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,IAAAA,UAAA,GAEvB,OAAOI,KAAKghB,OAAShhB,KAAKghB,OAAO6T,yBAAsBvwB,EAE3D,IAAKtE,KAAK+d,sBAAuB,CAC7B,IAAMO,EAAUte,KAAKghB,QACfhhB,KAAKghB,OAAO6T,qBACZ,CAAC,EAIP,YAH2BvwB,IAAvBtE,KAAKge,MAAMO,UACXD,EAAQC,QAAUve,KAAKge,MAAMO,SAE1BD,CACX,CAEA,IADA,IAAMA,EAAU,CAAC,EACRld,EAAI,EAAGA,EAAI+7C,GAAiB/7C,IAAK,CACtC,IAAM6c,EAAOH,EAAa1c,GACpByd,EAAO7e,KAAKge,MAAMC,IACpBN,EAAekB,KAAkB,IAATA,KACxBP,EAAQL,GAAQY,EAExB,CACA,OAAOP,CACX,GACA,CAAAnd,IAAA,kBAAArB,MAGA,SAAgBoa,GACZ,IAAMomC,EAAqBtgD,KAAKqgD,wBAChC,GAAIC,EAGA,OAFAA,EAAmBhnC,iBACfgnC,EAAmBhnC,gBAAgBzH,IAAIqI,GACpC,kBAAMomC,EAAmBhnC,gBAAgBxH,OAAOoI,EAAM,CAErE,GACA,CAAA/Y,IAAA,WAAArB,MAGA,SAASqB,EAAKrB,GAENA,IAAUE,KAAK0E,OAAO5F,IAAIqC,KAC1BnB,KAAKkgD,YAAY/+C,GACjBnB,KAAKo+C,kBAAkBj9C,EAAKrB,IAEhCE,KAAK0E,OAAOyN,IAAIhR,EAAKrB,GACrBE,KAAK6jB,aAAa1iB,GAAOrB,EAAMhB,KACnC,GACA,CAAAqC,IAAA,cAAArB,MAGA,SAAYqB,GACRnB,KAAK0E,OAAOoN,OAAO3Q,GACnB,IAAMo/C,EAAcvgD,KAAKq9C,mBAAmBv+C,IAAIqC,GAC5Co/C,IACAA,IACAvgD,KAAKq9C,mBAAmBvrC,OAAO3Q,WAE5BnB,KAAK6jB,aAAa1iB,GACzBnB,KAAKwgD,2BAA2Br/C,EAAKnB,KAAKoqB,YAC9C,GACA,CAAAjpB,IAAA,WAAArB,MAGA,SAASqB,GACL,OAAOnB,KAAK0E,OAAO+O,IAAItS,EAC3B,GAAC,CAAAA,IAAA,WAAArB,MACD,SAASqB,EAAKs/C,GACV,GAAIzgD,KAAKge,MAAMtZ,QAAU1E,KAAKge,MAAMtZ,OAAOvD,GACvC,OAAOnB,KAAKge,MAAMtZ,OAAOvD,GAE7B,IAAIrB,EAAQE,KAAK0E,OAAO5F,IAAIqC,GAK5B,YAJcmD,IAAVxE,QAAwCwE,IAAjBm8C,IACvB3gD,GAAQ0iC,EAAAA,GAAAA,IAAYie,EAAc,CAAElsC,MAAOvU,OAC3CA,KAAK+/C,SAAS5+C,EAAKrB,IAEhBA,CACX,GACA,CAAAqB,IAAA,YAAArB,MAKA,SAAUqB,GACN,IAAI8lB,EACJ,YAAkC3iB,IAA3BtE,KAAK6jB,aAAa1iB,IAAuBnB,KAAKiG,QAES,QAAvDghB,EAAKjnB,KAAK0gD,uBAAuB1gD,KAAKge,MAAO7c,UAAyB,IAAP8lB,EAAgBA,EAAKjnB,KAAK2gD,sBAAsB3gD,KAAKiG,QAAS9E,EAAKnB,KAAK8I,SADxI9I,KAAK6jB,aAAa1iB,EAE5B,GACA,CAAAA,IAAA,gBAAArB,MAIA,SAAcqB,EAAKrB,GACfE,KAAK49C,WAAWz8C,GAAOrB,CAC3B,GACA,CAAAqB,IAAA,gBAAArB,MAIA,SAAcqB,GACV,IAAI8lB,EACI1I,EAAYve,KAAKge,MAAjBO,QACFqiC,EAAsC,kBAAZriC,GAA2C,kBAAZA,EACD,QAAvD0I,GAAK8E,EAAAA,GAAAA,GAAwB/rB,KAAKge,MAAOO,UAA6B,IAAP0I,OAAgB,EAASA,EAAG9lB,QAC5FmD,EAIN,GAAIia,QAAgCja,IAArBs8C,EACX,OAAOA,EAMX,IAAM5hD,EAASgB,KAAK0gD,uBAAuB1gD,KAAKge,MAAO7c,GACvD,YAAemD,IAAXtF,IAAyB2mB,EAAAA,EAAAA,GAAc3mB,QAMRsF,IAA5BtE,KAAK69C,cAAc18C,SACDmD,IAArBs8C,OACEt8C,EACAtE,KAAK49C,WAAWz8C,GARXnC,CASf,GAAC,CAAAmC,IAAA,KAAArB,MACD,SAAGysB,EAAWpZ,GAIV,OAHKnT,KAAKu9C,OAAOhxB,KACbvsB,KAAKu9C,OAAOhxB,GAAa,IAAI+gB,GAAAA,GAE1BttC,KAAKu9C,OAAOhxB,GAAW1a,IAAIsB,EACtC,GAAC,CAAAhS,IAAA,SAAArB,MACD,SAAOysB,GACH,GAAIvsB,KAAKu9C,OAAOhxB,GAAY,SAAAs0B,EAAArT,EAAA5tC,UAAAC,OADX4tC,EAAI,IAAAvqC,MAAAsqC,EAAA,EAAAA,EAAA,KAAAsT,EAAA,EAAAA,EAAAtT,EAAAsT,IAAJrT,EAAIqT,EAAA,GAAAlhD,UAAAkhD,IAEjBD,EAAA7gD,KAAKu9C,OAAOhxB,IAAWpS,OAAMpa,MAAA8gD,EAAIpT,EACrC,CACJ,KAAC2P,CAAA,CAndc,G,kCGhCb2D,GAAgB,SAAAC,IAAAtyB,EAAAA,GAAAA,GAAAqyB,EAAAC,GAAA,IAAAryB,GAAAC,EAAAA,GAAAA,GAAAmyB,GAAA,SAAAA,IAAA,OAAA5lC,EAAAA,GAAAA,GAAA,KAAA4lC,GAAApyB,EAAA5uB,MAAA,KAAAH,UAAA,CAwCjB,OAxCiB0b,EAAAA,GAAAA,GAAAylC,EAAA,EAAA5/C,IAAA,2BAAArB,MAClB,SAAyB6H,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEs5C,wBAAwBr5C,GAAS,GAAK,CACnD,GAAC,CAAAzG,IAAA,yBAAArB,MACD,SAAuBke,EAAO7c,GAC1B,OAAO6c,EAAM+F,MAAQ/F,EAAM+F,MAAM5iB,QAAOmD,CAC5C,GAAC,CAAAnD,IAAA,6BAAArB,MACD,SAA2BqB,EAAGsD,GAAmB,IAAfuf,EAAIvf,EAAJuf,KAAMD,EAAKtf,EAALsf,aAC7BC,EAAK7iB,UACL4iB,EAAM5iB,EACjB,GAAC,CAAAA,IAAA,mCAAArB,MACD,SAAAkT,EAAAsH,EAAgG2T,GAAW,IAAxEnY,EAAU9C,EAAV8C,WAAY4B,EAAa1E,EAAb0E,cAAkB1Y,GAAMgC,EAAAA,EAAAA,GAAAgS,EAAA5J,IAAM2c,EAAezL,EAAfyL,gBACrE1c,GAAS63C,EAAAA,GAAAA,IAAUliD,EAAQ8W,GAAc,CAAC,EAAG9V,MAYjD,GARI+lB,IACIrO,IACAA,EAAgBqO,EAAgBrO,IAChC1Y,IACAA,EAAS+mB,EAAgB/mB,IACzBqK,IACAA,EAAS0c,EAAgB1c,KAE7B4kB,EAAW,EACXkzB,EAAAA,GAAAA,IAAwBnhD,KAAMhB,EAAQqK,GACtC,IAAM+3C,EN5BM,SAACxvC,EAAe5S,EAAQqK,EAAQqO,GACpD,IAAMsB,EAAW4/B,GAAoBhnC,EAAe5S,EAAQ0Y,GAG5D,OAAOilC,GAAe/qC,EAFtB5S,EAASga,EAASha,OAE2BqK,EAD7CqO,EAAgBsB,EAAStB,cAE7B,CMuB2B2pC,CAAgBrhD,KAAMhB,EAAQqK,EAAQqO,GACrDA,EAAgB0pC,EAAO1pC,cACvB1Y,EAASoiD,EAAOpiD,MACpB,CACA,OAAAwK,EAAAA,EAAAA,GAAA,CACIsM,WAAAA,EACA4B,cAAAA,GACG1Y,EAEX,KAAC+hD,CAAA,CAxCiB,CAAS3D,ICQ9B,IACKkE,GAAiB,SAAAC,IAAA7yB,EAAAA,GAAAA,GAAA4yB,EAAAC,GAAA,IAAA5yB,GAAAC,EAAAA,GAAAA,GAAA0yB,GAAA,SAAAA,IAAA,OAAAnmC,EAAAA,GAAAA,GAAA,KAAAmmC,GAAA3yB,EAAA5uB,MAAA,KAAAH,UAAA,CAsClB,OAtCkB0b,EAAAA,GAAAA,GAAAgmC,EAAA,EAAAngD,IAAA,wBAAArB,MACnB,SAAsBsiB,EAAUjhB,GAC5B,GAAImU,EAAAA,EAAe7B,IAAItS,GAAM,CACzB,IAAMqgD,GAAcC,EAAAA,GAAAA,GAAoBtgD,GACxC,OAAOqgD,GAAcA,EAAY/8B,SAAe,CACpD,CAEI,IAVc1Q,EAUR2tC,GAVQ3tC,EAUyBqO,EATxC9J,OAAOq/B,iBAAiB5jC,IAUjBjU,IAASukB,EAAAA,EAAAA,IAAkBljB,GAC3BugD,EAAclJ,iBAAiBr3C,GAC/BugD,EAAcvgD,KAAS,EAC7B,MAAwB,kBAAVrB,EAAqBA,EAAMmlB,OAASnlB,CAE1D,GAAC,CAAAqB,IAAA,6BAAArB,MACD,SAA2BsiB,EAAQ3d,GAC/B,OAAOm4B,GAAmBxa,EAD2B3d,EAAlBqW,mBAEvC,GAAC,CAAA3Z,IAAA,QAAArB,MACD,SAAMsqB,EAAavG,EAAc/a,EAASkV,GACtC4F,EAAgBwG,EAAavG,EAAc/a,EAASkV,EAAM8F,kBAC9D,GAAC,CAAA3iB,IAAA,8BAAArB,MACD,SAA4Bke,EAAOwM,GAC/B,OAAOD,GAA4BvM,EAAOwM,EAC9C,GAAC,CAAArpB,IAAA,yBAAArB,MACD,WAAyB,IAAAivB,EAAA,KACjB/uB,KAAK2hD,oBACL3hD,KAAK2hD,2BACE3hD,KAAK2hD,mBAEhB,IAAQj4B,EAAa1pB,KAAKge,MAAlB0L,UACJ/D,EAAAA,EAAAA,GAAc+D,KACd1pB,KAAK2hD,kBAAoBj4B,EAASk1B,GAAG,UAAU,SAAC7yC,GACxCgjB,EAAK9oB,UACL8oB,EAAK9oB,QAAQ27C,YAAc,GAAHr9C,OAAMwH,GACtC,IAER,GAAC,CAAA5K,IAAA,iBAAArB,MACD,SAAesiB,EAAUgI,EAAaN,EAAWC,GAC7CF,GAAWzH,EAAUgI,EAAaN,EAAWC,EACjD,KAACu3B,CAAA,CAtCkB,CAASP,I,sBCF1Bc,GAAgB,SAAAN,IAAA7yB,EAAAA,GAAAA,GAAAmzB,EAAAN,GAAA,IAAA5yB,GAAAC,EAAAA,GAAAA,GAAAizB,GAClB,SAAAA,IAAc,IAAA9yB,EAEY,OAFZ5T,EAAAA,GAAAA,GAAA,KAAA0mC,IACV9yB,EAAAJ,EAAA5uB,MAAA,KAASH,YACJ4nB,UAAW,EAAMuH,CAC1B,CA2BC,OA3BAzT,EAAAA,GAAAA,GAAAumC,EAAA,EAAA1gD,IAAA,yBAAArB,MACD,SAAuBke,EAAO7c,GAC1B,OAAO6c,EAAM7c,EACjB,GAAC,CAAAA,IAAA,wBAAArB,MACD,SAAsBsiB,EAAUjhB,GAC5B,GAAImU,EAAAA,EAAe7B,IAAItS,GAAM,CACzB,IAAMqgD,GAAcC,EAAAA,GAAAA,GAAoBtgD,GACxC,OAAOqgD,GAAcA,EAAY/8B,SAAe,CACpD,CAEA,OADAtjB,EAAO+oB,GAAoBzW,IAAItS,GAA0BA,GAAnBiW,EAAAA,GAAAA,GAAYjW,GAC3CihB,EAAS0/B,aAAa3gD,EACjC,GAAC,CAAAA,IAAA,6BAAArB,MACD,WACI,OAAO46B,IACX,GAAC,CAAAv5B,IAAA,8BAAArB,MACD,SAA4Bke,EAAOwM,GAC/B,OAAOD,GAA4BvM,EAAOwM,EAC9C,GAAC,CAAArpB,IAAA,QAAArB,MACD,SAAMsqB,EAAavG,EAAc/a,EAASkV,GACtCuJ,GAAc6C,EAAavG,EAAc/a,EAAS9I,KAAKwnB,SAAUxJ,EAAM8F,kBAC3E,GAAC,CAAA3iB,IAAA,iBAAArB,MACD,SAAesiB,EAAUgI,EAAaN,EAAWC,GAC7CI,GAAU/H,EAAUgI,EAAaN,EAAWC,EAChD,GAAC,CAAA5oB,IAAA,QAAArB,MACD,SAAMsiB,GACFpiB,KAAKwnB,SAAWA,GAASpF,EAASgK,UAClCxtB,EAAAA,GAAAA,IAAAmjD,EAAAA,GAAAA,GAAAF,EAAAviD,WAAA,cAAAE,KAAA,KAAY4iB,EAChB,KAACy/B,CAAA,CA/BiB,CAASd,ICPzBiB,GAAyB,SAAC5hC,EAAWtX,GACvC,OAAOka,EAAe5C,GAChB,IAAIyhC,GAAiB/4C,EAAS,CAAE8b,4BAA4B,IAC5D,IAAI08B,GAAkBx4C,EAAS,CAAE8b,4BAA4B,GACvE,ECLMrF,GAAS,CACXA,OAAQ,CACJisB,eAAgBiM,GAChB/2B,cAAAA,KCGFV,IAAiBxW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBwI,IACA8hB,IACA7U,IACAM,IAQD0iC,GAAuBx/B,GAAkB,SAACrC,EAAW+K,GAAM,OChBjE,SAA+B/K,EAAS3b,EAAkCub,EAAmBC,GAAqB,IAAAiiC,EAAAz9C,EAAtE4kB,mBAAAA,OAAkB,IAAA64B,GAAQA,EAC5DC,EAAan/B,EAAe5C,GAC5B4L,GACAK,GACN,OAAA7iB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO24C,GAAU,IACbniC,kBAAAA,EACAE,UAAWkJ,GAAgBC,GAC3BpJ,oBAAAA,EACAG,UAAAA,GAER,CDKsEgiC,CAAsBhiC,EAAW+K,EAAQnL,GAAmBgiC,GAAuB,G,uDElBzJ,IAAM5qC,EAAc,SAACirC,GAAG,OAAKA,EAAIC,QAAQ,kBAAmB,SAASv5B,aAAa,C,wGCHlF,IAAMw5B,EAAwB,SAACjK,GAAK,OAAK,SAACn3C,GAAG,MAAoB,kBAARA,GAAoBA,EAAIoU,WAAW+iC,EAAM,GAC5Fj0B,EAAoBk+B,EAAsB,MAC1C5J,EAAqB4J,EAAsB,UAC3CC,EAAmB,+E,wFCCzB,SAASjsC,EAAkBpV,EAAKrB,GAC5B,IAAI2iD,GAAmBhB,EAAAA,EAAAA,GAAoBtgD,GAI3C,OAHIshD,IAAqBjiD,EAAAA,IACrBiiD,EAAmBhtC,EAAAA,GAEhBgtC,EAAiBlsC,kBAClBksC,EAAiBlsC,kBAAkBzW,QACnCwE,CACV,C,mGCLMo+C,GAAiBl5C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB+a,EAAAA,GAAgB,IAEnBo+B,MAAAA,EAAAA,EACAC,gBAAiBD,EAAAA,EACjBE,aAAcF,EAAAA,EACdxuC,KAAMwuC,EAAAA,EACNG,OAAQH,EAAAA,EAERI,YAAaJ,EAAAA,EACbK,eAAgBL,EAAAA,EAChBM,iBAAkBN,EAAAA,EAClBO,kBAAmBP,EAAAA,EACnBQ,gBAAiBR,EAAAA,EACjBniD,OAAAA,EAAAA,EACA4iD,aAAc5iD,EAAAA,IAKZihD,EAAsB,SAACtgD,GAAG,OAAKuhD,EAAkBvhD,EAAI,C,gHCnBrDkiD,EAAsB,CAAClK,EAAAA,GAAQhyB,EAAAA,GAAI+W,EAAAA,GAASolB,EAAAA,GAASC,EAAAA,GAAIC,EAAAA,GCLlD,CACT9tC,KAAM,SAACnK,GAAC,MAAW,SAANA,CAAY,EACzBo5B,MAAO,SAACp5B,GAAC,OAAKA,CAAC,IDObmwC,EAAyB,SAACnwC,GAAC,OAAK83C,EAAoBI,MAAKC,EAAAA,EAAAA,GAAcn4C,GAAG,C,yFEV1Eo4C,GAAGn6C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACF2vC,EAAAA,IAAM,IACTx1B,UAAWjhB,KAAKqN,QCAdwU,EAAmB,CAErBq/B,YAAaz8B,EAAAA,GACb08B,eAAgB18B,EAAAA,GAChB28B,iBAAkB38B,EAAAA,GAClB48B,kBAAmB58B,EAAAA,GACnB68B,gBAAiB78B,EAAAA,GACjB8f,aAAc9f,EAAAA,GACd88B,OAAQ98B,EAAAA,GACRggB,oBAAqBhgB,EAAAA,GACrBigB,qBAAsBjgB,EAAAA,GACtBmgB,wBAAyBngB,EAAAA,GACzBkgB,uBAAwBlgB,EAAAA,GAExBkB,MAAOlB,EAAAA,GACP+8B,SAAU/8B,EAAAA,GACVoB,OAAQpB,EAAAA,GACRg9B,UAAWh9B,EAAAA,GACX5N,KAAM4N,EAAAA,GACN0T,IAAK1T,EAAAA,GACL4T,MAAO5T,EAAAA,GACP6T,OAAQ7T,EAAAA,GACR2T,KAAM3T,EAAAA,GAENi9B,QAASj9B,EAAAA,GACTozB,WAAYpzB,EAAAA,GACZgzB,aAAchzB,EAAAA,GACdszB,cAAetzB,EAAAA,GACf8yB,YAAa9yB,EAAAA,GACb2L,OAAQ3L,EAAAA,GACRk9B,UAAWl9B,EAAAA,GACXm9B,YAAan9B,EAAAA,GACbo9B,aAAcp9B,EAAAA,GACdq9B,WAAYr9B,EAAAA,GAEZmU,OAAQgoB,EAAAA,GACR/nB,QAAS+nB,EAAAA,GACT9nB,QAAS8nB,EAAAA,GACThO,QAASgO,EAAAA,GACT76B,MAAAA,EAAAA,GACA0S,OAAQ1S,EAAAA,GACR2S,OAAQ3S,EAAAA,GACRg8B,OAAQh8B,EAAAA,GACRi8B,KAAMpB,EAAAA,GACNqB,MAAOrB,EAAAA,GACPsB,MAAOtB,EAAAA,GACPtsB,SAAU7P,EAAAA,GACV6zB,WAAY7zB,EAAAA,GACZ8zB,WAAY9zB,EAAAA,GACZ09B,WAAY19B,EAAAA,GACZ9kB,EAAG8kB,EAAAA,GACH9D,EAAG8D,EAAAA,GACH7D,EAAG6D,EAAAA,GACH29B,YAAa39B,EAAAA,GACb5D,qBAAsB4D,EAAAA,GACtBktB,QAAS0Q,EAAAA,GACT3/B,QAAS4/B,EAAAA,GACT1/B,QAAS0/B,EAAAA,GACTx/B,QAAS2B,EAAAA,GAET89B,OAAQtB,EAERuB,YAAaH,EAAAA,GACbI,cAAeJ,EAAAA,GACfK,WAAYzB,E,uDCjEhB,IAAMD,EAAgB,SAACn4C,GAAC,OAAK,SAAC0C,GAAI,OAAKA,EAAKyH,KAAKnK,EAAE,E,8ECAnD,IAAMkY,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEnO,EAAiB,IAAI5D,IAAI+R,E,qECP/B,SAASxK,EAAerH,EAAe1N,EAAYgV,GAC/C,IAAM8E,EAAQpM,EAAcqF,WAC5B,OAAO8U,EAAAA,EAAAA,GAAwB/N,EAAO9Z,OAAuBI,IAAX4U,EAAuBA,EAAS8E,EAAM9E,OAf5F,SAAoBtH,GAChB,IAAM3L,EAAU,CAAC,EAEjB,OADA2L,EAAclN,OAAO9D,SAAQ,SAACd,EAAOqB,GAAG,OAAM8E,EAAQ9E,GAAOrB,EAAMhB,KAAK,IACjEmH,CACX,CAWoGo/C,CAAWzzC,GAP/G,SAAqBA,GACjB,IAAM5K,EAAW,CAAC,EAElB,OADA4K,EAAclN,OAAO9D,SAAQ,SAACd,EAAOqB,GAAG,OAAM6F,EAAS7F,GAAOrB,EAAM8W,aAAa,IAC1E5P,CACX,CAG+H4P,CAAYhF,GAC3I,C,uBCrBA,SAASma,EAAwB/N,EAAO9Z,EAAYgV,GAAkD,IAA1CosC,EAAa1lD,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG4K,EAAe5K,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAsB/F,MAlB0B,oBAAfsE,IACPA,EAAaA,OAAsBI,IAAX4U,EAAuBA,EAAS8E,EAAM9E,OAAQosC,EAAe96C,IAM/D,kBAAftG,IACPA,EAAa8Z,EAAMG,UAAYH,EAAMG,SAASja,IAOxB,oBAAfA,IACPA,EAAaA,OAAsBI,IAAX4U,EAAuBA,EAAS8E,EAAM9E,OAAQosC,EAAe96C,IAElFtG,CACX,C,yRCfMqhD,EAAa,GAAHhhD,QAAA6K,EAAAA,EAAAA,GAAOi0C,EAAAA,GAAmB,CAAEV,EAAAA,EAAOltC,EAAAA,IAI7C+vC,EAAgB,SAACj6C,GAAC,OAAKg6C,EAAW9B,MAAKC,EAAAA,EAAAA,GAAcn4C,GAAG,E,2CCC9D,SAASk6C,EAAe7zC,EAAezQ,EAAKrB,GACpC8R,EAAc2pC,SAASp6C,GACvByQ,EAAcgG,SAASzW,GAAKgR,IAAIrS,GAGhC8R,EAAcmuC,SAAS5+C,GAAKqhC,EAAAA,EAAAA,IAAY1iC,GAEhD,CACA,SAAS+Y,EAAUjH,EAAe1N,GAC9B,IAAM8U,GAAWC,EAAAA,EAAAA,GAAerH,EAAe1N,GAC/CO,EAAyDuU,EAAWpH,EAAc4F,qBAAqBwB,GAAU,GAAS,CAAC,EAAC0sC,EAAAjhD,EAAtHiT,cAAAA,OAAa,IAAAguC,EAAG,CAAC,EAACA,EAAsB1mD,GAAtByF,EAAEqR,YAA0B9U,EAAAA,EAAAA,GAAAyD,EAAA2E,IAEpD,IAAK,IAAMjI,KADXnC,GAAMwK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQxK,GAAW0Y,GACC,CAEtB+tC,EAAe7zC,EAAezQ,GADhBwkD,EAAAA,EAAAA,GAA6B3mD,EAAOmC,IAEtD,CACJ,CACA,SAASykD,EAAYh0C,EAAei0C,IACTz2C,EAAAA,EAAAA,GAAIy2C,GAAex2C,UAC3BzO,SAAQ,SAACO,GACpB,IAAM4X,EAAUnH,EAAck0C,WAAW3kD,GACzC4X,GAAWF,EAAUjH,EAAemH,GAChCnH,EAAc0H,iBACd1H,EAAc0H,gBAAgB1Y,SAAQ,SAACsZ,GACnC0rC,EAAY1rC,EAAO2rC,EACvB,GAER,GACJ,CACA,SAASzzC,EAAUR,EAAe1N,GAC9B,OAAIhB,MAAMC,QAAQe,GACP0hD,EAAYh0C,EAAe1N,GAEP,kBAAfA,EACL0hD,EAAYh0C,EAAe,CAAC1N,SAGnC2U,EAAUjH,EAAe1N,EAEjC,CACA,SAASi9C,EAAwBvvC,EAAe5S,EAAQqK,GACpD,IAAI4d,EAAIwuB,EACFsQ,EAAe1mD,OAAOgB,KAAKrB,GAAQwB,QAAO,SAACW,GAAG,OAAMyQ,EAAc2pC,SAASp6C,EAAI,IAC/E6kD,EAAeD,EAAalmD,OAClC,GAAKmmD,EAEL,IAAK,IAAI5kD,EAAI,EAAGA,EAAI4kD,EAAc5kD,IAAK,CACnC,IAAMD,EAAM4kD,EAAa3kD,GACnB6kD,EAAcjnD,EAAOmC,GACvBrB,EAAQ,KAKRoD,MAAMC,QAAQ8iD,KACdnmD,EAAQmmD,EAAY,IAOV,OAAVnmD,IACAA,EAAoG,QAA3F21C,EAA4B,QAAtBxuB,EAAK5d,EAAOlI,UAAyB,IAAP8lB,EAAgBA,EAAKrV,EAAcs0C,UAAU/kD,UAAyB,IAAPs0C,EAAgBA,EAAKz2C,EAAOmC,SAM9HmD,IAAVxE,GAAiC,OAAVA,IAEN,kBAAVA,KACN44C,EAAAA,EAAAA,GAAkB54C,KAAU8V,EAAAA,EAAAA,GAAkB9V,IAE/CA,EAAQu+B,WAAWv+B,IAEb0lD,EAAc1lD,IAAU2V,EAAAA,EAAQC,KAAKuwC,KAC3CnmD,GAAQyW,EAAAA,EAAAA,GAAkBpV,EAAK8kD,IAEnCr0C,EAAcmuC,SAAS5+C,GAAKqhC,EAAAA,EAAAA,IAAY1iC,EAAO,CAAEyU,MAAO3C,UACpCtN,IAAhB+E,EAAOlI,KACPkI,EAAOlI,GAAOrB,GAEJ,OAAVA,GACA8R,EAAcu0C,cAAchlD,EAAKrB,GACzC,CACJ,CACA,SAASsmD,EAAwBjlD,EAAK2U,GAClC,GAAKA,EAGL,OADwBA,EAAW3U,IAAQ2U,EAAoB,SAAKA,GAC7CM,IAC3B,CACA,SAAS8qC,EAAUliD,EAAQ8W,EAAYlE,GACnC,IAAMvI,EAAS,CAAC,EAChB,IAAK,IAAMlI,KAAOnC,EAAQ,CACtB,IAAMqnD,EAAmBD,EAAwBjlD,EAAK2U,GACtD,QAAyBxR,IAArB+hD,EACAh9C,EAAOlI,GAAOklD,MAEb,CACD,IAAMvmD,EAAQ8R,EAAcgG,SAASzW,GACjCrB,IACAuJ,EAAOlI,GAAOrB,EAAMhB,MAE5B,CACJ,CACA,OAAOuK,CACX,C,uBCzHA,SAAS2/B,EAAcsd,EAAKC,IACG,IAAvBD,EAAIhlD,QAAQilD,IACZD,EAAI5lD,KAAK6lD,EACjB,CACA,SAASrd,EAAWod,EAAKC,GACrB,IAAM/qC,EAAQ8qC,EAAIhlD,QAAQilD,GACtB/qC,GAAS,GACT8qC,EAAI3gD,OAAO6V,EAAO,EAC1B,C,+GCRA,IAAMlU,EAAQ,SAAC+C,EAAKlE,EAAKoF,GAAC,OAAK7I,KAAK2H,IAAI3H,KAAKyD,IAAIoF,EAAGlB,GAAMlE,EAAI,C,4FCE1DgB,EAAUjF,EAAAA,EACViC,EAAYjC,EAAAA,C,uHCFhB,SAASskD,EAASziD,EAAG0iD,EAAGrmD,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACD2D,EAAc,GAAT0iD,EAAI1iD,GAAS3D,EACzBA,EAAI,GACGqmD,EACPrmD,EAAI,EAAI,EACD2D,GAAK0iD,EAAI1iD,IAAM,EAAI,EAAI3D,GAAK,EAChC2D,CACX,C,iCCHM2iD,EAAiB,SAACtwC,EAAM49B,EAAIzoC,GAC9B,IAAMo7C,EAAWvwC,EAAOA,EACxB,OAAO1T,KAAKgG,KAAKhG,KAAKyD,IAAI,EAAGoF,GAAKyoC,EAAKA,EAAK2S,GAAYA,GAC5D,EACMC,EAAa,CAACC,EAAAA,EAAKC,EAAAA,EAAMC,EAAAA,GAE/B,SAASC,EAAOrE,GACZ,IAFkBp3C,EAEZ0C,GAFY1C,EAEQo3C,EAFFiE,EAAWnD,MAAK,SAACx1C,GAAI,OAAKA,EAAKyH,KAAKnK,EAAE,MAG9DpH,EAAAA,EAAAA,GAAUqM,QAAQvC,GAAO,IAAF1J,OAAMo+C,EAAK,yEAClC,IAAIsE,EAAQh5C,EAAK02B,MAAMge,GAKvB,OAJI10C,IAAS84C,EAAAA,IAETE,EDRR,SAAmBxiD,GAAwC,IAArCyiD,EAAGziD,EAAHyiD,IAAKC,EAAU1iD,EAAV0iD,WAAYC,EAAS3iD,EAAT2iD,UAAWrC,EAAKtgD,EAALsgD,MAC9CmC,GAAO,IAEPE,GAAa,IACb,IAAIC,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAJ,GAAc,IAQT,CACD,IAAMV,EAAIW,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCpjD,EAAI,EAAIqjD,EAAYX,EAC1BY,EAAMb,EAASziD,EAAG0iD,EAAGS,EAAM,EAAI,GAC/BI,EAAQd,EAASziD,EAAG0iD,EAAGS,GACvBK,EAAOf,EAASziD,EAAG0iD,EAAGS,EAAM,EAAI,EACpC,MAVIG,EAAMC,EAAQC,EAAOH,EAWzB,MAAO,CACHC,IAAK3kD,KAAKqN,MAAY,IAANs3C,GAChBC,MAAO5kD,KAAKqN,MAAc,IAARu3C,GAClBC,KAAM7kD,KAAKqN,MAAa,IAAPw3C,GACjBxC,MAAAA,EAER,CCjBgByC,CAAWP,IAEhBA,CACX,CACA,IAAMQ,EAAW,SAACrxC,EAAM49B,GACpB,IAAM0T,EAAWV,EAAO5wC,GAClBuxC,EAASX,EAAOhT,GAChB4T,GAAOp+C,EAAAA,EAAAA,GAAA,GAAQk+C,GACrB,OAAO,SAACn8C,GAKJ,OAJAq8C,EAAQP,IAAMX,EAAegB,EAASL,IAAKM,EAAON,IAAK97C,GACvDq8C,EAAQN,MAAQZ,EAAegB,EAASJ,MAAOK,EAAOL,MAAO/7C,GAC7Dq8C,EAAQL,KAAOb,EAAegB,EAASH,KAAMI,EAAOJ,KAAMh8C,GAC1Dq8C,EAAQ7C,OAAQxrB,EAAAA,EAAAA,GAAImuB,EAAS3C,MAAO4C,EAAO5C,MAAOx5C,GAC3Cu7C,EAAAA,EAAKnjC,UAAUikC,EAC1B,CACJ,E,mBC9BMC,EAAe,SAACx+C,EAAQrK,GAAM,OAAK,SAAC+E,GAAC,SAAAQ,OAAQR,EAAI,EAAI/E,EAASqK,EAAM,CAAE,EAC5E,SAASy+C,EAASz+C,EAAQrK,GACtB,MAAsB,kBAAXqK,EACA,SAACkC,GAAC,OAAKguB,EAAAA,EAAAA,GAAIlwB,EAAQrK,EAAQuM,EAAE,EAE/Bo3C,EAAAA,EAAMjtC,KAAKrM,GACTo+C,EAASp+C,EAAQrK,GAGjBqK,EAAOkM,WAAW,QACnBsyC,EAAax+C,EAAQrK,GACrB+oD,EAAW1+C,EAAQrK,EAEjC,CACA,IAAMgpD,EAAW,SAAC5xC,EAAM49B,GACpB,IAAMD,GAAM3kC,EAAAA,EAAAA,GAAOgH,GACb6xC,EAAYlU,EAAOl0C,OACnBqoD,EAAa9xC,EAAKlR,KAAI,SAACijD,EAAU/mD,GAAC,OAAK0mD,EAASK,EAAUnU,EAAG5yC,GAAG,IACtE,OAAO,SAACmK,GACJ,IAAK,IAAInK,EAAI,EAAGA,EAAI6mD,EAAW7mD,IAC3B2yC,EAAO3yC,GAAK8mD,EAAW9mD,GAAGmK,GAE9B,OAAOwoC,CACX,CACJ,EACMqU,EAAY,SAAC/+C,EAAQrK,GACvB,IAAM+0C,GAAMvqC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQH,GAAWrK,GACzBkpD,EAAa,CAAC,EACpB,IAAK,IAAM/mD,KAAO4yC,OACMzvC,IAAhB+E,EAAOlI,SAAsCmD,IAAhBtF,EAAOmC,KACpC+mD,EAAW/mD,GAAO2mD,EAASz+C,EAAOlI,GAAMnC,EAAOmC,KAGvD,OAAO,SAACoK,GACJ,IAAK,IAAMpK,KAAO+mD,EACdnU,EAAO5yC,GAAO+mD,EAAW/mD,GAAKoK,GAElC,OAAOwoC,CACX,CACJ,EACMgU,EAAa,SAAC1+C,EAAQrK,GACxB,IAAM4lC,EAAWnvB,EAAAA,EAAQovB,kBAAkB7lC,GACrCqpD,GAAcC,EAAAA,EAAAA,GAAoBj/C,GAClCk/C,GAAcD,EAAAA,EAAAA,GAAoBtpD,GAIxC,OAHuBqpD,EAAYG,UAAYD,EAAYC,SACvDH,EAAYI,YAAcF,EAAYE,WACtCJ,EAAYK,YAAcH,EAAYG,YAE/B75B,EAAAA,EAAAA,GAAKm5B,EAASK,EAAY3jD,OAAQ6jD,EAAY7jD,QAASkgC,KAG9Dz9B,EAAAA,EAAAA,IAAQ,EAAM,mBAAF5C,OAAqB8E,EAAM,WAAA9E,OAAUvF,EAAM,6KAChD6oD,EAAax+C,EAAQrK,GAEpC,E,oBCnDM2pD,EAAY,SAACvyC,EAAM49B,GAAE,OAAK,SAACjwC,GAAC,OAAKw1B,EAAAA,EAAAA,GAAInjB,EAAM49B,EAAIjwC,EAAE,GAgBvD,SAAS6kD,EAAa7U,EAAQ9wC,EAAM4lD,GAIhC,IAHA,IAhBwBt9C,EAgBlBu9C,EAAS,GACTC,EAAeF,IAhBJ,kBADOt9C,EAiB+BwoC,EAAO,IAfnD4U,EAEW,kBAANp9C,EACLo3C,EAAAA,EAAMjtC,KAAKnK,GAAKk8C,EAAWM,EAE7B7kD,MAAMC,QAAQoI,GACZy8C,EAEW,kBAANz8C,EACL68C,EAEJO,GAKDK,EAAYjV,EAAOl0C,OAAS,EACzBuB,EAAI,EAAGA,EAAI4nD,EAAW5nD,IAAK,CAChC,IAAI6nD,EAAQF,EAAahV,EAAO3yC,GAAI2yC,EAAO3yC,EAAI,IAC/C,GAAI6B,EAAM,CACN,IAAMimD,EAAiBhmD,MAAMC,QAAQF,GAAQA,EAAK7B,IAAMc,EAAAA,EAAOe,EAC/DgmD,GAAQp6B,EAAAA,EAAAA,GAAKq6B,EAAgBD,EACjC,CACAH,EAAOpoD,KAAKuoD,EAChB,CACA,OAAOH,CACX,CAoBA,SAASpjD,EAAYyjD,EAAOpV,GAAqD,IAAAtvC,EAAA7E,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACwpD,EAAA3kD,EAAzC6C,MAAO+hD,OAAO,IAAAD,GAAOA,EAAEnmD,EAAIwB,EAAJxB,KAAMgmD,EAAKxkD,EAALwkD,MACzDK,EAAcH,EAAMtpD,OAM1B,IALAsE,EAAAA,EAAAA,GAAUmlD,IAAgBvV,EAAOl0C,OAAQ,wDAKrB,IAAhBypD,EACA,OAAO,kBAAMvV,EAAO,EAAE,EAEtBoV,EAAM,GAAKA,EAAMG,EAAc,KAC/BH,GAAQ/5C,EAAAA,EAAAA,GAAI+5C,GAAO95C,UACnB0kC,GAAS3kC,EAAAA,EAAAA,GAAI2kC,GAAQ1kC,WAEzB,IAAMy5C,EAASF,EAAa7U,EAAQ9wC,EAAMgmD,GACpCD,EAAYF,EAAOjpD,OACnB0pD,EAAe,SAACh+C,GAClB,IAAInK,EAAI,EACR,GAAI4nD,EAAY,EACZ,KAAO5nD,EAAI+nD,EAAMtpD,OAAS,KAClB0L,EAAI49C,EAAM/nD,EAAI,IADOA,KAKjC,IAAMooD,GAAkBr5C,EAAAA,EAAAA,GAASg5C,EAAM/nD,GAAI+nD,EAAM/nD,EAAI,GAAImK,GACzD,OAAOu9C,EAAO1nD,GAAGooD,EACrB,EACA,OAAOH,EACD,SAAC99C,GAAC,OAAKg+C,GAAajiD,EAAAA,EAAAA,GAAM6hD,EAAM,GAAIA,EAAMG,EAAc,GAAI/9C,GAAG,EAC/Dg+C,CACV,C,uDCzFA,IAAMxoC,EAAgC,qBAAbtM,Q,uDCGzB,IAAMikC,EAAoB,SAACntC,GAAC,MAAK,iBAAiBmK,KAAKnK,EAAE,C,uDCAzD,IAAMqK,EAAoB,SAACrK,GAAC,MAAK,aAAamK,KAAKnK,EAAE,C,uDCkBrD,IAAMguB,EAAM,SAACnjB,EAAM49B,EAAI7jC,GAAQ,OAAMA,EAAWiG,EAAOjG,EAAW6jC,EAAK59B,CAAI,C,uDCrB3E,IAAMlU,EAAO,SAACunD,GAAG,OAAKA,CAAG,C,+ECEzB,SAASjkD,EAAc8gD,GACnB,IAAMhhD,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQokD,GAExB,IADA,IAAMr/C,EAAM/E,EAAOA,EAAOzF,OAAS,GAC1BuB,EAAI,EAAGA,GAAKsoD,EAAWtoD,IAAK,CACjC,IAAMuoD,GAAiBx5C,EAAAA,EAAAA,GAAS,EAAGu5C,EAAWtoD,GAC9CkE,EAAO5E,MAAK64B,EAAAA,EAAAA,GAAIlvB,EAAK,EAAGs/C,GAC5B,CACJ,CDLIC,CAAWtkD,EAAQghD,EAAIzmD,OAAS,GACzByF,CACX,C,uDECA,IAAMukD,EAAmB,SAACliD,EAAGC,GAAC,OAAK,SAAC2D,GAAC,OAAK3D,EAAED,EAAE4D,GAAG,GAC3CsjB,EAAO,WAAH,QAAA2e,EAAA5tC,UAAAC,OAAOiqD,EAAY,IAAA5mD,MAAAsqC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZoc,EAAYpc,GAAA9tC,UAAA8tC,GAAA,OAAKoc,EAAa7tC,OAAO4tC,EAAiB,C,uDCIvE,IAAM15C,EAAW,SAACiG,EAAM49B,EAAIl0C,GACxB,IAAMiqD,EAAmB/V,EAAK59B,EAC9B,OAA4B,IAArB2zC,EAAyB,GAAKjqD,EAAQsW,GAAQ2zC,CACzD,C,0FCbM/+B,EAAgB,SAACzf,GACnB,OAAOiF,QAAQjF,GAAkB,kBAANA,GAAkBA,EAAEguB,KAAOhuB,EAAE0f,QAC5D,EACM06B,EAA+B,SAACp6C,GAElC,OAAOoP,EAAAA,EAAAA,GAAkBpP,GAAKA,EAAEA,EAAE1L,OAAS,IAAM,EAAI0L,CACzD,C,yFCNM+hC,EAAmB,WACrB,SAAAA,KAAcnyB,EAAAA,EAAAA,GAAA,KAAAmyB,GACVttC,KAAKgqD,cAAgB,EACzB,CA+BC,OA/BA1uC,EAAAA,EAAAA,GAAAgyB,EAAA,EAAAnsC,IAAA,MAAArB,MACD,SAAI0sB,GAAS,IAAAuC,EAAA,KAET,OADAia,EAAAA,EAAAA,IAAchpC,KAAKgqD,cAAex9B,GAC3B,kBAAM0c,EAAAA,EAAAA,IAAWna,EAAKi7B,cAAex9B,EAAQ,CACxD,GAAC,CAAArrB,IAAA,SAAArB,MACD,SAAO6H,EAAGC,EAAGE,GACT,IAAMmiD,EAAmBjqD,KAAKgqD,cAAcnqD,OAC5C,GAAKoqD,EAEL,GAAyB,IAArBA,EAIAjqD,KAAKgqD,cAAc,GAAGriD,EAAGC,EAAGE,QAG5B,IAAK,IAAI1G,EAAI,EAAGA,EAAI6oD,EAAkB7oD,IAAK,CAKvC,IAAMorB,EAAUxsB,KAAKgqD,cAAc5oD,GACnCorB,GAAWA,EAAQ7kB,EAAGC,EAAGE,EAC7B,CAER,GAAC,CAAA3G,IAAA,UAAArB,MACD,WACI,OAAOE,KAAKgqD,cAAcnqD,MAC9B,GAAC,CAAAsB,IAAA,QAAArB,MACD,WACIE,KAAKgqD,cAAcnqD,OAAS,CAChC,KAACytC,CAAA,CAlCoB,E,8ECIzB,IAAMlmC,EAAwB,SAAC8iD,GAAO,OAAe,IAAVA,CAAc,EACnD3iD,EAAwB,SAAC4iD,GAAY,OAAKA,EAAe,GAAI,C,oECEnE,SAAS33C,EAAY43C,GACjB,IAAM1sC,GAAM2D,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhB3D,EAAIzX,UACJyX,EAAIzX,QAAUmkD,KAEX1sC,EAAIzX,OACf,C,oECZMwM,E,QAA4BsO,EAAYspC,EAAAA,gBAAkBzoC,EAAAA,S,uBCGhE,SAASxb,EAAkBY,EAAUsjD,GACjC,OAAOA,EAAgBtjD,GAAY,IAAOsjD,GAAiB,CAC/D,C,6ICAMC,EAAsB,CACxBtkD,aAAS3B,GAOPkmD,EAAW,WASb,SAAAA,EAAYJ,GAAoB,IApBnBtqD,EAoBmBivB,EAAA,KAAdjmB,EAAOlJ,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACub,EAAAA,EAAAA,GAAA,KAAAqvC,GAK1BxqD,KAAKyqD,QAAU,UAMfzqD,KAAK84B,UAAY,EAMjB94B,KAAK0qD,YAAc,EAQnB1qD,KAAK2qD,kBAAmB,EAIxB3qD,KAAKu9C,OAAS,CAAC,EACfv9C,KAAK4qD,gBAAkB,SAACr/C,GAAqB,IAAlBmW,IAAM9hB,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,KAAAA,UAAA,GAC7BmvB,EAAKiF,KAAOjF,EAAK9oB,QACjB8oB,EAAK9oB,QAAUsF,EAEf,IAAQ7D,EAAqBiF,EAAAA,GAArBjF,MAAO2E,EAAcM,EAAAA,GAAdN,UACX0iB,EAAK27B,cAAgBr+C,IACrB0iB,EAAK+J,UAAYpxB,EACjBqnB,EAAK27B,YAAcr+C,EACnBE,EAAAA,GAAM05B,WAAWlX,EAAK87B,wBAGtB97B,EAAKiF,OAASjF,EAAK9oB,SAAW8oB,EAAKwuB,OAAOuN,QAC1C/7B,EAAKwuB,OAAOuN,OAAO3wC,OAAO4U,EAAK9oB,SAG/B8oB,EAAKwuB,OAAOwN,gBACZh8B,EAAKwuB,OAAOwN,eAAe5wC,OAAO4U,EAAKnY,eAGvC8K,GAAUqN,EAAKwuB,OAAOyN,eACtBj8B,EAAKwuB,OAAOyN,cAAc7wC,OAAO4U,EAAK9oB,QAE9C,EASAjG,KAAK6qD,sBAAwB,kBAAMt+C,EAAAA,GAAM05B,WAAWlX,EAAKk8B,cAAc,EAUvEjrD,KAAKirD,cAAgB,SAAAxmD,GAAYA,EAAT4H,YACF0iB,EAAK27B,cACnB37B,EAAKiF,KAAOjF,EAAK9oB,QACb8oB,EAAKwuB,OAAOwN,gBACZh8B,EAAKwuB,OAAOwN,eAAe5wC,OAAO4U,EAAKnY,eAGnD,EACA5W,KAAKwY,aAAc,EACnBxY,KAAKg0B,KAAOh0B,KAAKiG,QAAUmkD,EAC3BpqD,KAAK2qD,kBArGI7qD,EAqGuBE,KAAKiG,SApGjCsC,MAAM81B,WAAWv+B,KAqGrBE,KAAKuU,MAAQzL,EAAQyL,KACzB,CA8NC,OA7ND+G,EAAAA,EAAAA,GAAAkvC,EAAA,EAAArpD,IAAA,WAAArB,MAwCA,SAASorD,GAIL,OAAOlrD,KAAK4+C,GAAG,SAAUsM,EAC7B,GAAC,CAAA/pD,IAAA,KAAArB,MACD,SAAGysB,EAAWpZ,GAAU,IAAA+b,EAAA,KACflvB,KAAKu9C,OAAOhxB,KACbvsB,KAAKu9C,OAAOhxB,GAAa,IAAI+gB,EAAAA,GAEjC,IAAMiT,EAAcvgD,KAAKu9C,OAAOhxB,GAAW1a,IAAIsB,GAC/C,MAAkB,WAAdoZ,EACO,WACHg0B,IAKAh0C,EAAAA,GAAM0f,MAAK,WACFiD,EAAKquB,OAAOuN,OAAOK,WACpBj8B,EAAK1iB,MAEb,GACJ,EAEG+zC,CACX,GAAC,CAAAp/C,IAAA,iBAAArB,MACD,WACI,IAAK,IAAMsrD,KAAiBprD,KAAKu9C,OAC7Bv9C,KAAKu9C,OAAO6N,GAAe3vC,OAEnC,GACA,CAAAta,IAAA,SAAArB,MAKA,SAAOurD,EAAeC,GAClBtrD,KAAKqrD,cAAgBA,EACrBrrD,KAAKsrD,kBAAoBA,CAC7B,GACA,CAAAnqD,IAAA,MAAArB,MAeA,SAAIyL,GAAkB,IAAfmW,IAAM9hB,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,KAAAA,UAAA,GACJ8hB,GAAW1hB,KAAKqrD,cAIjBrrD,KAAKqrD,cAAc9/C,EAAGvL,KAAK4qD,iBAH3B5qD,KAAK4qD,gBAAgBr/C,EAAGmW,EAKhC,GAAC,CAAAvgB,IAAA,kBAAArB,MACD,SAAgBk0B,EAAM/tB,EAASyB,GAC3B1H,KAAKmS,IAAIlM,GACTjG,KAAKg0B,KAAOA,EACZh0B,KAAK84B,UAAYpxB,CACrB,GACA,CAAAvG,IAAA,OAAArB,MAIA,SAAKyL,GACDvL,KAAK4qD,gBAAgBr/C,GACrBvL,KAAKg0B,KAAOzoB,EACZvL,KAAKwM,OACDxM,KAAKsrD,mBACLtrD,KAAKsrD,mBACb,GACA,CAAAnqD,IAAA,MAAArB,MAOA,WAII,OAHIyqD,EAAoBtkD,SACpBskD,EAAoBtkD,QAAQvF,KAAKV,MAE9BA,KAAKiG,OAChB,GACA,CAAA9E,IAAA,cAAArB,MAGA,WACI,OAAOE,KAAKg0B,IAChB,GACA,CAAA7yB,IAAA,cAAArB,MAOA,WAEI,OAAOE,KAAK2qD,kBAEJvkD,EAAAA,EAAAA,GAAkBi4B,WAAWr+B,KAAKiG,SAC9Bo4B,WAAWr+B,KAAKg0B,MAAOh0B,KAAK84B,WAClC,CACV,GACA,CAAA33B,IAAA,QAAArB,MAYA,SAAMg/B,GAAgB,IAAA2B,EAAA,KAElB,OADAzgC,KAAKwM,OACE,IAAIuC,SAAQ,SAACC,GAChByxB,EAAKjoB,aAAc,EACnBioB,EAAK3sB,UAAYgrB,EAAe9vB,GAC5ByxB,EAAK8c,OAAOgO,gBACZ9qB,EAAK8c,OAAOgO,eAAepxC,QAEnC,IAAGpJ,MAAK,WACA0vB,EAAK8c,OAAOiO,mBACZ/qB,EAAK8c,OAAOiO,kBAAkBrxC,SAElCsmB,EAAKgrB,gBACT,GACJ,GACA,CAAAtqD,IAAA,OAAArB,MAKA,WACQE,KAAK8T,YACL9T,KAAK8T,UAAUtH,OACXxM,KAAKu9C,OAAOmO,iBACZ1rD,KAAKu9C,OAAOmO,gBAAgBvxC,UAGpCna,KAAKyrD,gBACT,GACA,CAAAtqD,IAAA,cAAArB,MAKA,WACI,QAASE,KAAK8T,SAClB,GAAC,CAAA3S,IAAA,iBAAArB,MACD,kBACWE,KAAK8T,SAChB,GACA,CAAA3S,IAAA,UAAArB,MASA,WACIE,KAAK2rD,iBACL3rD,KAAKwM,OACDxM,KAAKsrD,mBACLtrD,KAAKsrD,mBAEb,KAACd,CAAA,CA1TY,GA4TjB,SAAShoB,EAAY4nB,EAAMthD,GACvB,OAAO,IAAI0hD,EAAYJ,EAAMthD,EACjC,C,oEC7SA,IAAM+9C,EAAM,CACRnxC,MAAMk2C,E,QAAAA,GAAc,KACpBjnB,MAhCJ,SAAkBp5B,GACd,IAAIpL,EAAI,GACJ+H,EAAI,GACJN,EAAI,GACJD,EAAI,GAmBR,OAjBI4D,EAAE1L,OAAS,GACXM,EAAIoL,EAAEsf,UAAU,EAAG,GACnB3iB,EAAIqD,EAAEsf,UAAU,EAAG,GACnBjjB,EAAI2D,EAAEsf,UAAU,EAAG,GACnBljB,EAAI4D,EAAEsf,UAAU,EAAG,KAInB1qB,EAAIoL,EAAEsf,UAAU,EAAG,GACnB3iB,EAAIqD,EAAEsf,UAAU,EAAG,GACnBjjB,EAAI2D,EAAEsf,UAAU,EAAG,GACnBljB,EAAI4D,EAAEsf,UAAU,EAAG,GACnB1qB,GAAKA,EACL+H,GAAKA,EACLN,GAAKA,EACLD,GAAKA,GAEF,CACH0/C,IAAKwE,SAAS1rD,EAAG,IACjBmnD,MAAOuE,SAAS3jD,EAAG,IACnBq/C,KAAMsE,SAASjkD,EAAG,IAClBm9C,MAAOp9C,EAAIkkD,SAASlkD,EAAG,IAAM,IAAM,EAE3C,EAIIgc,UAAWmjC,EAAAA,EAAKnjC,U,mGC/BdojC,EAAO,CACTrxC,MAAMk2C,EAAAA,EAAAA,GAAc,MAAO,OAC3BjnB,OAAOmnB,EAAAA,EAAAA,GAAW,MAAO,aAAc,aACvCnoC,UAAW,SAAAlf,GAAwD,IAArDyiD,EAAGziD,EAAHyiD,IAAKC,EAAU1iD,EAAV0iD,WAAYC,EAAS3iD,EAAT2iD,UAAS2E,EAAAtnD,EAAEsgD,MAAOiH,OAAO,IAAAD,EAAG,EAACA,EACxD,MAAQ,QACJrpD,KAAKqN,MAAMm3C,GACX,KACAhpB,EAAAA,GAAQva,WAAUsoC,EAAAA,EAAAA,IAAS9E,IAC3B,KACAjpB,EAAAA,GAAQva,WAAUsoC,EAAAA,EAAAA,IAAS7E,IAC3B,MACA6E,EAAAA,EAAAA,IAASlH,EAAAA,GAAMphC,UAAUqoC,IACzB,GACR,E,kGCbErJ,EAAQ,CACVjtC,KAAM,SAACnK,GAAC,OAAKu7C,EAAAA,EAAKpxC,KAAKnK,IAAMs7C,EAAAA,EAAInxC,KAAKnK,IAAMw7C,EAAAA,EAAKrxC,KAAKnK,EAAE,EACxDo5B,MAAO,SAACp5B,GACJ,OAAIu7C,EAAAA,EAAKpxC,KAAKnK,GACHu7C,EAAAA,EAAKniB,MAAMp5B,GAEbw7C,EAAAA,EAAKrxC,KAAKnK,GACRw7C,EAAAA,EAAKpiB,MAAMp5B,GAGXs7C,EAAAA,EAAIliB,MAAMp5B,EAEzB,EACAoY,UAAW,SAACpY,GACR,OAAO2gD,EAAAA,EAAAA,IAAS3gD,GACVA,EACAA,EAAEhM,eAAe,OACbunD,EAAAA,EAAKnjC,UAAUpY,GACfw7C,EAAAA,EAAKpjC,UAAUpY,EAC7B,E,6GClBE4gD,GAAO3iD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN2vC,EAAAA,IAAM,IACTx1B,UAAW,SAACpY,GAAC,OAAK7I,KAAKqN,MAHN,SAACxE,GAAC,OAAKjE,EAAAA,EAAAA,GAAM,EAAG,IAAKiE,EAAE,CAGX6gD,CAAa7gD,GAAG,IAE3Cu7C,EAAO,CACTpxC,MAAMk2C,EAAAA,EAAAA,GAAc,MAAO,OAC3BjnB,OAAOmnB,EAAAA,EAAAA,GAAW,MAAO,QAAS,QAClCnoC,UAAW,SAAAlf,GAAA,IAAG4iD,EAAG5iD,EAAH4iD,IAAKC,EAAK7iD,EAAL6iD,MAAOC,EAAI9iD,EAAJ8iD,KAAIwE,EAAAtnD,EAAEsgD,MAAOiH,OAAO,IAAAD,EAAG,EAACA,EAAA,MAAO,QACrDI,EAAQxoC,UAAU0jC,GAClB,KACA8E,EAAQxoC,UAAU2jC,GAClB,KACA6E,EAAQxoC,UAAU4jC,GAClB,MACA0E,EAAAA,EAAAA,IAASlH,EAAAA,GAAMphC,UAAUqoC,IACzB,GAAG,E,gHCfLJ,EAAgB,SAAC39C,EAAMo+C,GAAQ,OAAK,SAAC9gD,GACvC,OAAOiF,SAAS07C,EAAAA,EAAAA,IAAS3gD,IAAM+gD,EAAAA,GAAiB52C,KAAKnK,IAAMA,EAAEgK,WAAWtH,IACnEo+C,GAAYhtD,OAAOC,UAAUC,eAAeC,KAAK+L,EAAG8gD,GAC7D,CAAC,EACKP,EAAa,SAACS,EAAOC,EAAOC,GAAK,OAAK,SAAClhD,GAAM,IAAA9G,EAC/C,KAAKynD,EAAAA,EAAAA,IAAS3gD,GACV,OAAOA,EACX,IAAAmhD,EAAyBnhD,EAAE0sC,MAAM0U,EAAAA,IAAWC,GAAAvoD,EAAAA,EAAAA,GAAAqoD,EAAA,GAArC/kD,EAACilD,EAAA,GAAEhlD,EAACglD,EAAA,GAAE9kD,EAAC8kD,EAAA,GAAE7H,EAAK6H,EAAA,GACrB,OAAAnoD,EAAA,IAAAwP,EAAAA,EAAAA,GAAAxP,EACK8nD,EAAQluB,WAAW12B,KAAEsM,EAAAA,EAAAA,GAAAxP,EACrB+nD,EAAQnuB,WAAWz2B,KAAEqM,EAAAA,EAAAA,GAAAxP,EACrBgoD,EAAQpuB,WAAWv2B,KAAEmM,EAAAA,EAAAA,GAAAxP,EAAA,aACLH,IAAVygD,EAAsB1mB,WAAW0mB,GAAS,GAACtgD,CAE1D,CAAC,C,kGCdKooD,EAAc,IAAIn7C,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASo7C,EAAmBvhD,GACxB,IAAAwhD,EAAsBxhD,EAAEyhD,MAAM,GAAI,GAAGzT,MAAM,KAAI0T,GAAA5oD,EAAAA,EAAAA,GAAA0oD,EAAA,GAAxC9uC,EAAIgvC,EAAA,GAAEntD,EAAKmtD,EAAA,GAClB,GAAa,gBAAThvC,EACA,OAAO1S,EACX,IAAA9G,EAAiB3E,EAAMm4C,MAAM0U,EAAAA,KAAe,GAArCxT,GAAuC90C,EAAAA,EAAAA,GAAAI,EAAA,GAAjC,GACb,IAAK00C,EACD,OAAO5tC,EACX,IAAM2hD,EAAOptD,EAAMwiD,QAAQnJ,EAAQ,IAC/BsH,EAAeoM,EAAYp5C,IAAIwK,GAAQ,EAAI,EAG/C,OAFIk7B,IAAWr5C,IACX2gD,GAAgB,KACbxiC,EAAO,IAAMwiC,EAAeyM,EAAO,GAC9C,CACA,IAAMC,EAAgB,oBAChB3sD,GAAMgJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLiM,EAAAA,GAAO,IACVc,kBAAmB,SAAChL,GAChB,IAAM6hD,EAAY7hD,EAAE0sC,MAAMkV,GAC1B,OAAOC,EAAYA,EAAUloD,IAAI4nD,GAAoBhuC,KAAK,KAAOvT,CACrE,G,6ICZJ,IAAM8hD,EAAkB,CACpBC,MAAO9K,EAAAA,GACP+K,SAAU,OACVjV,MAAO,OACP3T,MAAOziC,EAAAA,GAELsrD,EAAiB,CACnBF,MAAOG,EAAAA,GACPF,SAAU,SACVjV,MAAO,OACP3T,MAAOge,EAAAA,EAAMhe,OAEX+oB,EAAkB,CACpBJ,MAAOX,EAAAA,GACPY,SAAU,UACVjV,MAAO,OACP3T,MAAOwU,EAAAA,GAAOxU,OAElB,SAASgpB,EAASt/B,EAAI5pB,GAAqC,IAAAmpD,EAAjCN,EAAK7oD,EAAL6oD,MAAOC,EAAQ9oD,EAAR8oD,SAAUjV,EAAK7zC,EAAL6zC,MAAO3T,EAAKlgC,EAALkgC,MACxC1V,EAAUZ,EAAKw/B,UAAU5V,MAAMqV,GAChCr+B,IAELZ,EAAK,MAAQk/B,GAAYt+B,EAAQpvB,OACjCwuB,EAAKw/B,UAAYx/B,EAAKw/B,UAAUvL,QAAQgL,EAAOhV,IAC/CsV,EAAAv/B,EAAK3pB,QAAOhE,KAAIX,MAAA6tD,GAAAx+C,EAAAA,EAAAA,GAAI6f,EAAQ/pB,IAAIy/B,KACpC,CACA,SAAS2jB,EAAoBxoD,GACzB,IAAMguD,EAAgBhuD,EAAMiuD,WACtB1/B,EAAO,CACTvuB,MAAOguD,EACPD,UAAWC,EACXppD,OAAQ,GACR8jD,QAAS,EACTC,UAAW,EACXC,WAAY,GAMhB,OAJIr6B,EAAKvuB,MAAMmjB,SAAS,WACpB0qC,EAASt/B,EAAMg/B,GACnBM,EAASt/B,EAAMm/B,GACfG,EAASt/B,EAAMq/B,GACRr/B,CACX,CACA,SAAS2/B,EAAkBziD,GACvB,OAAO+8C,EAAoB/8C,GAAG7G,MAClC,CACA,SAASmgC,EAAkB5jC,GACvB,IAAAgtD,EAAkD3F,EAAoBrnD,GAA9DyD,EAAMupD,EAANvpD,OAAQ+jD,EAASwF,EAATxF,UAAWD,EAAOyF,EAAPzF,QAASqF,EAASI,EAATJ,UAC9B5F,EAAYvjD,EAAO7E,OACzB,OAAO,SAAC0L,GAEJ,IADA,IAAIwoC,EAAS8Z,EACJzsD,EAAI,EAAGA,EAAI6mD,EAAW7mD,IAEvB2yC,EADA3yC,EAAIonD,EACKzU,EAAOuO,QAAQ+K,EAAgB/U,MAAO/sC,EAAEnK,IAE5CA,EAAIonD,EAAUC,EACV1U,EAAOuO,QAAQkL,EAAelV,MAAOqK,EAAAA,EAAMh/B,UAAUpY,EAAEnK,KAGvD2yC,EAAOuO,QAAQoL,EAAgBpV,OAAO2T,EAAAA,EAAAA,IAAS1gD,EAAEnK,KAGlE,OAAO2yC,CACX,CACJ,CACA,IAAMma,EAAuB,SAAC3iD,GAAC,MAAkB,kBAANA,EAAiB,EAAIA,CAAC,EAMjE,IAAMkK,EAAU,CACZC,KA/EJ,SAAcnK,GACV,IAAI0b,EAAIwuB,EACR,OAAQltC,MAAMgD,KACV2gD,EAAAA,EAAAA,IAAS3gD,MACwB,QAA9B0b,EAAK1b,EAAE0sC,MAAM0U,EAAAA,WAAgC,IAAP1lC,OAAgB,EAASA,EAAGpnB,SAAW,KAC3C,QAA9B41C,EAAKlqC,EAAE0sC,MAAMwV,EAAAA,WAAgC,IAAPhY,OAAgB,EAASA,EAAG51C,SAAW,GAChF,CACZ,EAyEI8kC,MAAOqpB,EACPnpB,kBAAAA,EACAtuB,kBATJ,SAA2BhL,GACvB,IAAM61C,EAAS4M,EAAkBziD,GAEjC,OADoBs5B,EAAkBt5B,EAC/B4iD,CAAY/M,EAAOl8C,IAAIgpD,GAClC,E,gICjFM/U,EAAS,CACXzjC,KAAM,SAACnK,GAAC,MAAkB,kBAANA,CAAc,EAClCo5B,MAAOtG,WACP1a,UAAW,SAACpY,GAAC,OAAKA,CAAC,GAEjBw5C,GAAKv7C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ2vC,GAAM,IACTx1B,UAAW,SAACpY,GAAC,OAAKjE,EAAAA,EAAAA,GAAM,EAAG,EAAGiE,EAAE,IAE9Bkd,GAAKjf,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ2vC,GAAM,IACT10B,QAAS,G,wMCXP2pC,EAAiB,SAAClB,GAAI,MAAM,CAC9Bx3C,KAAM,SAACnK,GAAC,OAAK2gD,EAAAA,EAAAA,IAAS3gD,IAAMA,EAAE8iD,SAASnB,IAAiC,IAAxB3hD,EAAEguC,MAAM,KAAK15C,MAAY,EACzE8kC,MAAOtG,WACP1a,UAAW,SAACpY,GAAC,SAAAhH,OAAQgH,GAAChH,OAAG2oD,EAAI,EAChC,EACK5J,EAAU8K,EAAe,OACzBlwB,EAAUkwB,EAAe,KACzBjnC,EAAKinC,EAAe,MACpB5K,EAAK4K,EAAe,MACpB7K,EAAK6K,EAAe,MACpBpJ,GAAkBx7C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjB00B,GAAO,IACVyG,MAAO,SAACp5B,GAAC,OAAK2yB,EAAQyG,MAAMp5B,GAAK,GAAG,EACpCoY,UAAW,SAACpY,GAAC,OAAK2yB,EAAQva,UAAc,IAAJpY,EAAQ,G,wJCThD,IAAM0gD,EAAW,SAAC1gD,GAAC,OAAK7I,KAAKqN,MAAU,IAAJxE,GAAc,GAAM,EACjDohD,EAAa,uBACbc,EAAa,8FACbnB,EAAmB,+FACzB,SAASJ,EAAS3gD,GACd,MAAoB,kBAANA,CAClB,C,mECVA,SAASoN,EAAwB7Y,GAC7B,OAAO0Q,SAAQmV,EAAAA,EAAAA,GAAc7lB,IAAUA,EAAM+R,IACjD,C,uDCJA,IAAM8T,EAAgB,SAAC7lB,GAAK,OAAK0Q,QAAQ1Q,GAASA,EAAM8W,YAAY,C,scCE9D03C,EAAc,IAAIzrC,IASlB0rC,EAA+C,IAAIj9B,QACrDk9B,EAAS,EAETC,OAAwC,EA6BrC,SAASC,EAAY5lD,GAC1B,OAAOzJ,OAAOgB,KAAKyI,GAChBkR,OACAxZ,QACC,SAACW,GAAA,YAA2D,IAAnD2H,EAAQ3H,EAA2C,IAE7D+D,KAAI,SAAC/D,GACJ,MAAO,GAAPoD,OAAUpD,EAAA,KAAAoD,OACA,SAARpD,GArBW2wB,EAsBGhpB,EAAQgpB,OApBxBy8B,EAAQ96C,IAAIqe,KAChB08B,GAAU,EACVD,EAAQp8C,IAAI2f,EAAM08B,EAAOT,aAFKQ,EAAQzvD,IAAIgzB,IADxB,IAsBRhpB,EAAQ3H,IAvBpB,IAAmB2wB,CAyBf,IACCi8B,UACL,CA2DO,SAAS17B,EACdte,EACAZ,GAGA,IAFArK,EAAAlJ,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAoC,CAAC,EACrC+uD,EAAA/uD,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAiB6uD,EAEjB,GACyC,qBAAhCn2C,OAAO6Z,2BACK,IAAnBw8B,EACA,CACA,IAAMC,EAAS76C,EAAQoY,wBAWvB,OAVAhZ,EAASw7C,EAAgB,CACvBx7B,eAAgBw7B,EAChB3vD,OAAQ+U,EACR86C,kBAC+B,kBAAtB/lD,EAAQoqB,UAAyBpqB,EAAQoqB,UAAY,EAC9DjiB,KAAM,EACN69C,mBAAoBF,EACpBG,iBAAkBH,EAClBI,WAAYJ,IAEP,WAEP,CACF,CAEA,IAAAK,EAnFF,SAAwBnmD,GAEtB,IAAI0Z,EAAKksC,EAAY5lD,GACjBsZ,EAAWksC,EAAYxvD,IAAI0jB,GAE/B,IAAKJ,EAAU,CAEb,IACI8sC,EADEC,EAAW,IAAItsC,IAGfusC,EAAW,IAAIj9B,sBAAqB,SAACR,GACzCA,EAAQ/wB,SAAQ,SAAC6wB,GAtEvB,IAAAxK,EAyEc3H,EACJmS,EAAM0B,gBACN+7B,EAAWnmD,MAAK,SAACmqB,GAAA,OAAczB,EAAMo9B,mBAAqB37B,CAAS,IAGjEpqB,EAAQumD,iBAA8C,qBAApB59B,EAAMyb,YAG1Czb,EAAMyb,UAAY5tB,GAGpB,OAAA2H,EAAAkoC,EAASrwD,IAAI2yB,EAAMzyB,UAAnBioB,EAA4BrmB,SAAQ,SAACuS,GACnCA,EAASmM,EAAQmS,EACnB,GACF,GACF,GAAG3oB,GAGHomD,EACEE,EAASF,aACRhsD,MAAMC,QAAQ2F,EAAQoqB,WACnBpqB,EAAQoqB,UACR,CAACpqB,EAAQoqB,WAAa,IAE5B9Q,EAAW,CACTI,GAAAA,EACA4sC,SAAAA,EACAD,SAAAA,GAGFb,EAAYn8C,IAAIqQ,EAAIJ,EACtB,CAEA,OAAOA,CACT,CAmCqCktC,CAAexmD,GAA1C0Z,EAAAysC,EAAAzsC,GAAI4sC,EAAAH,EAAAG,SAAUD,EAAAF,EAAAE,SAGlBI,EAAYJ,EAASrwD,IAAIiV,IAAY,GAQzC,OAPKo7C,EAAS17C,IAAIM,IAChBo7C,EAASh9C,IAAI4B,EAASw7C,GAGxBA,EAAU7uD,KAAKyS,GACfi8C,EAAS/8B,QAAQte,GAEV,WAELw7C,EAAU5pD,OAAO4pD,EAAUjuD,QAAQ6R,GAAW,GAErB,IAArBo8C,EAAU1vD,SAEZsvD,EAASr9C,OAAOiC,GAChBq7C,EAAS98B,UAAUve,IAGC,IAAlBo7C,EAAS51C,OAEX61C,EAASI,aACTlB,EAAYx8C,OAAO0Q,GAEvB,CACF,CCzGkCP,EAAAA,UC7B3B,SAASwtC,IAWiC,IA9CjDxoC,EA8CiDxiB,EAAA7E,UAAAC,OAAA,QAAAyE,IAAA1E,UAAA,GAAAA,UAAA,GAAxB,CAAC,EAVxBszB,EAAAzuB,EAAAyuB,UACAtlB,EAAAnJ,EAAAmJ,MACAyhD,EAAA5qD,EAAA4qD,gBACAx8B,EAAApuB,EAAAouB,WACAf,EAAArtB,EAAAqtB,KACA49B,EAAAjrD,EAAAirD,YACAC,EAAAlrD,EAAAkrD,KACAC,EAAAnrD,EAAAmrD,cACAjB,EAAAlqD,EAAAkqD,eACAkB,EAAAprD,EAAAorD,SAEAC,EAA4BC,EAAAA,SAAyB,MAAIC,GAAA3rD,EAAAA,EAAAA,GAAAyrD,EAAA,GAAlDpyC,EAAAsyC,EAAA,GAAKC,EAAMD,EAAA,GACZ78C,EAAiB48C,EAAAA,SACvBG,EAAgCH,EAAAA,SAAgB,CAC9CzwC,SAAUswC,EACVn+B,WAAO,IACR0+B,GAAA9rD,EAAAA,EAAAA,GAAA6rD,EAAA,GAHM/qD,EAAAgrD,EAAA,GAAOC,EAAQD,EAAA,GAOtBh9C,EAASlN,QAAU4pD,EAEbE,EAAAA,WACJ,WAIE,IAAIz9B,EAFJ,IAAIq9B,GAASjyC,EA8Bb,OA3BA4U,EAAYD,EACV3U,GACA,SAAC4B,EAAQmS,GACP2+B,EAAS,CACP9wC,OAAAA,EACAmS,MAAAA,IAEEte,EAASlN,SAASkN,EAASlN,QAAQqZ,EAAQmS,GAE3CA,EAAM0B,gBAAkBu8B,GAAep9B,IAEzCA,IACAA,OAAY,EAEhB,GACA,CACER,KAAAA,EACAe,WAAAA,EACAK,UAAAA,EAEAm8B,gBAAAA,EAEAzhD,MAAAA,GAEF+gD,GAGK,WACDr8B,GACFA,GAEJ,CACF,GAGA,CAGEpvB,MAAMC,QAAQ+vB,GAAaA,EAAU66B,WAAa76B,EAClDxV,EACAoU,EACAe,EACA68B,EACAC,EACAN,EACAV,EACA/gD,IAIJ,IAAMyiD,EAAc,OAAAppC,EAAA9hB,EAAMssB,YAAN,EAAAxK,EAAajoB,OAC3BsxD,EAA4BP,EAAAA,SAE/BryC,IACD2yC,GACCX,GACAC,GACDW,EAAoBrqD,UAAYoqD,IAIhCC,EAAoBrqD,QAAUoqD,EAC9BD,EAAS,CACP9wC,SAAUswC,EACVn+B,WAAO,KAIX,IAAMrpB,EAAS,CAAC6nD,EAAQ9qD,EAAMma,OAAQna,EAAMssB,OAO5C,OAJArpB,EAAOsV,IAAMtV,EAAO,GACpBA,EAAOkX,OAASlX,EAAO,GACvBA,EAAOqpB,MAAQrpB,EAAO,GAEfA,CACT,C","sources":["../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { invariant } from '../../utils/errors.mjs';\nimport { setValues } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === 'root'\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["_get","Reflect","get","bind","target","property","receiver","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","ownKeys","e","r","t","keys","getOwnPropertySymbols","o","filter","enumerable","push","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectWithoutProperties","source","excluded","key","i","sourceSymbolKeys","indexOf","propertyIsEnumerable","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","easeIn","easeOut","easeInOut","isEasingArray","ease","Array","isArray","backOut","backIn","reverseEasing","backInOut","mirrorEasing","easingLookup","linear","circIn","circInOut","circOut","anticipate","p","pow","easingDefinitionToFunction","definition","invariant","_definition","_slicedToArray","undefined","concat","keyframes","_ref","values","easing","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","map","state","done","absoluteTimes","offset","convertOffsetToTimes","defaultOffset","mapTimeToKeyframe","interpolate","splice","calculatedDuration","next","velocitySampleDuration","calcGeneratorVelocity","resolveValue","current","prevT","max","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","velocity","_ref$mass","mass","warning","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","options","some","spring","resolveSpring","restDelta","restSpeed","_excluded","origin","_getSpringOptions","springOptions","_objectSpread","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","v","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","_toConsumableArray","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","round","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","iterationIsOdd","Boolean","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","animationControls","hasMounted","subscribers","Set","subscribe","visualElement","add","delete","transitionOverride","animations","animateVisualElement","all","set","setValues","stopAnimation","mount","useAnimation","useConstant","useIsomorphicLayoutEffect","instantAnimationState","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref2","mapEasingToNativeEasing","supportsWaapi","callback","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","has","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","animation","element","keyframeOptions","_defineProperty","animate","fill","iterations","direction","animateStyle","owner","syncStart","document","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","startsWith","isAnimatable","complex","test","isNone","isZeroValueString","animateMotionValue","transition","valueTransition","getValueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","from","animatableTemplateValue","noneKeyframeIndexes","getAnimatableNone","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","getProps","acceleratedAnimation","optimizedAppearDataAttribute","camelToDash","animateTarget","_ref2$delay","_visualElement$makeTa","makeTargetAnimatable","_visualElement$makeTa2","transitionEnd","willChange","getValue","animationTypeState","animationState","getState","_loop","valueTarget","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","window","HandoffAppearAnimations","hasAnimated","appearId","shouldReduceMotion","isWillChangeMotionValue","remove","setTarget","animateVariant","variant","resolved","resolveVariant","custom","_ref$transition","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","_transition","_transition$delayChil","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","when","_ref3","first","last","sortNodePosition","resolvedDefinition","isKeyframesTarget","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","acos","Queue","_classCallCheck","order","scheduled","_createClass","process","index","clear","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","MotionContext","PresenceContext","LazyContext","strict","isRefObject","ref","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","props","name","isVariantNode","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","canHandoff","render","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","transform","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","default","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","originX","_transformOrigin$orig2","originY","_transformOrigin$orig3","originZ","createHtmlRenderState","copyRawValuesOnly","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolveVariantFromProps","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","pipe","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","margin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","mix","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","parseFloat","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","parse","template","createTransformer","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","subscriptionManager","_len","args","_key","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","output","to","mixAxisDelta","setTargetDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","rotateZ","resetValues","setStaticValue","_b","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","match","exec","_match","parseCSSVariable","_parseCSSVariable2","token","fallback","getPropertyValue","trimmed","isNumericalString","isCSSVariableToken","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","number","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","_ref4","_ref5","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","toType","fromType","findDimensionValueType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","getOrigin","checkTargetForNewValues","parsed","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","str","replace","checkStringStartsWith","cssVariableRegex","defaultValueType","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","find","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateZ","perspective","alpha","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","getCurrent","currentValues","valueTypes","findValueType","setMotionValue","_ref$transitionEnd","resolveFinalValueInKeyframes","setVariants","variantLabels","getVariant","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","transitionOrigin","arr","item","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","analyseComplexValue","targetStats","numVars","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","_ref$clamp","isClamp","inputLength","interpolator","progressInRange","any","remaining","offsetProgress","fillOffset","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","subscription","getSize","eventManagers","passiveEffect","stopPassiveEffect","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","parseInt","splitColor","_ref$alpha","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","_v$match","floatRegex","_v$match2","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","unit","functionRegex","functions","cssVarTokeniser","regex","countKey","colorTokeniser","colorRegex","numberTokeniser","tokenise","_info$values","tokenised","originalValue","toString","parseComplexValue","_analyseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith","observerMap","RootIds","rootId","unsupportedValue","optionsToId","fallbackInView","bounds","intersectionRatio","boundingClientRect","intersectionRect","rootBounds","_createObserver","thresholds","elements","observer","trackVisibility","createObserver","callbacks","disconnect","useInView","triggerOnce","skip","initialInView","onChange","_React2$useState","React2","_React2$useState2","setRef","_React2$useState3","_React2$useState4","setState","entryTarget","previousEntryTarget"],"sourceRoot":""}